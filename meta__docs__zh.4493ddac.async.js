"use strict";(self.webpackChunk_ant_design_charts_site=self.webpackChunk_ant_design_charts_site||[]).push([[9600],{70645:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(96976);var n={}},72723:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(84340);var n={}},97498:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(62939);var n={}},82740:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(32746);var n={}},91232:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(6914);var n={}},77206:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(68755);var n={}},33987:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return i}});var t,I,r,o,u=d(29008),l=d.n(u),c=d(70958),p=d.n(c),v=d(92379),x=(d(31836),d(67257)),i={"docs-options-graphs-dendrogram-demo-demo-dendrogram-default":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,19373))}))),asset:{type:"BLOCK",id:"docs-options-graphs-dendrogram-demo-demo-dendrogram-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(86603).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(o=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return o.apply(this,arguments)})}},"docs-options-graphs-dendrogram-demo-demo-dendrogram-direction":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,52498))}))),asset:{type:"BLOCK",id:"docs-options-graphs-dendrogram-demo-demo-dendrogram-direction",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(9272).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"排布方向",description:"通过设置语法糖 direction 为 vertical radial 分别让子节点垂直、径向分布。若不设置 direction，则默认 horizontal 水平分布。注意，节点标签也会自动根据 direction 排布，当设置 node.style.labelPlacement 时会以后者为准"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(r=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return r.apply(this,arguments)})}},"docs-options-graphs-dendrogram-demo-demo-dendrogram-compact":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,97651))}))),asset:{type:"BLOCK",id:"docs-options-graphs-dendrogram-demo-demo-dendrogram-compact",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(95329).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"紧凑模式",description:"通过 compact 配置紧凑模式"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(I=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return I.apply(this,arguments)})}},"docs-options-graphs-dendrogram-demo-demo-dendrogram-collapse-expand":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,52293))}))),asset:{type:"BLOCK",id:"docs-options-graphs-dendrogram-demo-demo-dendrogram-collapse-expand",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(16387).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"展开/收起节点",description:"添加 G6 内置 CollapseExpand 交互，双击触发展开/收起。更多 G6 内置交互请查阅此处 [https://g6.antv.antgroup.com/manual/core-concept/behavior]。"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(t=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},52681:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return p}});var t,I=d(29008),r=d.n(I),o=d(70958),u=d.n(o),l=d(92379),c=(d(67626),d(67257)),p={"docs-options-graphs-flow-direction-graph-demo-demo-flow-direction-graph-default":{component:l.memo(l.lazy((function(){return d.e(2433).then(d.bind(d,37848))}))),asset:{type:"BLOCK",id:"docs-options-graphs-flow-direction-graph-demo-demo-flow-direction-graph-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(36203).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。\n通过交互 map-edge-line-width 来调整 edge.style.lineWidth。包含以下属性：\n- value（数值或函数，用于计算边的数值）\n- minValue 和 maxValue（可选，最小值和最大值，可以是数值或函数）\n- minLineWidth 和 maxLineWidth（可选，最小线宽和最大线宽，可以是数值或函数）\n- scale（可选，插值函数，用于将数值映射到线宽，支持 'linear'、'log'、'pow'、'sqrt' 和自定义插值函数）"},context:{"@ant-design/graphs":c,react:n||(n=d.t(l,2))},renderOpts:{compile:(t=u()(r()().mark((function a(){var e,n=arguments;return r()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},7649:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return x}});var t,I,r,o=d(29008),u=d.n(o),l=d(70958),c=d.n(l),p=d(92379),v=(d(2446),d(67257)),x={"docs-options-graphs-flow-graph-demo-demo-flow-graph-default":{component:p.memo(p.lazy((function(){return d.e(2433).then(d.bind(d,77543))}))),asset:{type:"BLOCK",id:"docs-options-graphs-flow-graph-demo-demo-flow-graph-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(67783).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。"},context:{"@ant-design/graphs":v,react:n||(n=d.t(p,2))},renderOpts:{compile:(r=c()(u()().mark((function a(){var e,n=arguments;return u()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return r.apply(this,arguments)})}},"docs-options-graphs-flow-graph-demo-demo-flow-graph-hover":{component:p.memo(p.lazy((function(){return d.e(2433).then(d.bind(d,13260))}))),asset:{type:"BLOCK",id:"docs-options-graphs-flow-graph-demo-demo-flow-graph-hover",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(363).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"高亮元素及其所在链路",description:"通过添加悬浮高亮交互（注册类型：hover-activate-chain），可以高亮显示元素及其所在的链路。"},context:{"@ant-design/graphs":v,react:n||(n=d.t(p,2))},renderOpts:{compile:(I=c()(u()().mark((function a(){var e,n=arguments;return u()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return I.apply(this,arguments)})}},"docs-options-graphs-flow-graph-demo-demo-flow-graph-custom-node":{component:p.memo(p.lazy((function(){return d.e(2433).then(d.bind(d,50208))}))),asset:{type:"BLOCK",id:"docs-options-graphs-flow-graph-demo-demo-flow-graph-custom-node",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(32684).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"自定义节点",description:"通过 node.component 来进行自定义节点，需要与 node.size 配合实现。"},context:{"@ant-design/graphs":v,react:n||(n=d.t(p,2))},renderOpts:{compile:(t=c()(u()().mark((function a(){var e,n=arguments;return u()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},88059:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return g}});var t,I,r,o,u,l,c=d(29008),p=d.n(c),v=d(70958),x=d.n(v),i=d(92379),s=(d(73135),d(67257)),m=d(70360),g={"docs-options-graphs-indented-tree-demo-demo-indented-tree-default":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,37883))}))),asset:{type:"BLOCK",id:"docs-options-graphs-indented-tree-demo-demo-indented-tree-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(65692).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(l=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return l.apply(this,arguments)})}},"docs-options-graphs-indented-tree-demo-demo-indented-tree-type":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,26687))}))),asset:{type:"BLOCK",id:"docs-options-graphs-indented-tree-demo-demo-indented-tree-type",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(50093).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"风格",description:"通过 type 语法糖，使用预设的风格：线条风格和方框风格。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(u=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return u.apply(this,arguments)})}},"docs-options-graphs-indented-tree-demo-demo-indented-tree-direction":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,39577))}))),asset:{type:"BLOCK",id:"docs-options-graphs-indented-tree-demo-demo-indented-tree-direction",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(65375).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"4.24.16"}},entry:"index.tsx",title:"子节点分布",description:"通过设置 direction 为 alternate left 分别让子节点自由、左侧分布。若不设置 direction，则默认 right 右侧分布。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2)),antd:m},renderOpts:{compile:(o=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return o.apply(this,arguments)})}},"docs-options-graphs-indented-tree-demo-demo-indented-tree-custom-node":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,28127))}))),asset:{type:"BLOCK",id:"docs-options-graphs-indented-tree-demo-demo-indented-tree-custom-node",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(70189).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"自定义节点",description:"通过 node.component 来进行自定义节点，需要与 node.size 配合实现。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(r=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return r.apply(this,arguments)})}},"docs-options-graphs-indented-tree-demo-demo-indented-tree-collapse-expand":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,13776))}))),asset:{type:"BLOCK",id:"docs-options-graphs-indented-tree-demo-demo-indented-tree-collapse-expand",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(75579).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"展开/收起子节点",description:"通过调整 collapse-expand-react-node 交互配置来控制展开/收起子节点的操作。\n- enable: 是否启用该交互，类型为 boolean | ((data: NodeData) => boolean)，默认为 false\n- trigger: 点击指定元素，触发节点收起/展开；'icon' 代表点击图标触发，'node' 代表点击节点触发，HTMLElement 代表自定义元素，默认为 'icon'\n- direction: 收起/展开指定方向上的邻居节点，'in' 代表前驱节点，'out' 代表后继节点，'both' 代表前驱和后继节点，默认为 'out'\n- iconType: 内置图标语法糖，'plus-minus' 或 'arrow-count'\n- iconRender: 渲染函数，用于自定义收起/展开图标，参数为 isCollapsed（当前节点是否已收起）和 data（节点数据），返回自定义图标\n- iconPlacement: 图标相对于节点的位置，可选值为 'left'、'right'、'top'、'bottom'，默认为 'bottom'\n- iconOffsetX/iconOffsetY: 图标相对于节点的水平、垂直偏移量，默认为 0\n- iconClassName/iconStyle: 指定图标的 CSS 类名及内联样式\n- refreshLayout: 每次收起/展开节点后，是否刷新布局"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(I=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return I.apply(this,arguments)})}},"docs-options-graphs-indented-tree-demo-demo-indented-tree-color":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,38884))}))),asset:{type:"BLOCK",id:"docs-options-graphs-indented-tree-demo-demo-indented-tree-color",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(93352).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"设置分支颜色",description:"assign-color-by-branch 是内置数据转换的一个环节，可以通过修改 colors 来分配不同的颜色来区分思维导图的分支。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(t=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},25081:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return g}});var t,I,r,o,u,l,c=d(29008),p=d.n(c),v=d(70958),x=d.n(v),i=d(92379),s=(d(49744),d(67257)),m=d(70360),g={"docs-options-graphs-mind-map-demo-demo-mind-map-default":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,29379))}))),asset:{type:"BLOCK",id:"docs-options-graphs-mind-map-demo-demo-mind-map-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(92202).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(l=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return l.apply(this,arguments)})}},"docs-options-graphs-mind-map-demo-demo-mind-map-type":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,30648))}))),asset:{type:"BLOCK",id:"docs-options-graphs-mind-map-demo-demo-mind-map-type",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(94357).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"风格",description:"通过 type 语法糖，使用预设的风格：线条风格和方框风格。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(u=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return u.apply(this,arguments)})}},"docs-options-graphs-mind-map-demo-demo-mind-map-direction":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,84426))}))),asset:{type:"BLOCK",id:"docs-options-graphs-mind-map-demo-demo-mind-map-direction",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(14469).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"4.24.16"}},entry:"index.tsx",title:"子节点分布",description:"通过设置 direction 为 right left 分别让子节点右侧、左侧分布。若不设置 direction，则默认自由分布。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2)),antd:m},renderOpts:{compile:(o=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return o.apply(this,arguments)})}},"docs-options-graphs-mind-map-demo-demo-mind-map-custom-node":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,18282))}))),asset:{type:"BLOCK",id:"docs-options-graphs-mind-map-demo-demo-mind-map-custom-node",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(85997).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"自定义节点",description:"通过 node.component 来进行自定义节点，需要与 node.size 配合实现。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(r=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return r.apply(this,arguments)})}},"docs-options-graphs-mind-map-demo-demo-mind-map-collapse-expand":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,3666))}))),asset:{type:"BLOCK",id:"docs-options-graphs-mind-map-demo-demo-mind-map-collapse-expand",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(35207).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"展开/收起子节点",description:"通过调整 collapse-expand-react-node 交互配置来控制展开/收起子节点的操作。\n- enable: 是否启用该交互，类型为 boolean | ((data: NodeData) => boolean)，默认为 false\n- trigger: 点击指定元素，触发节点收起/展开；'icon' 代表点击图标触发，'node' 代表点击节点触发，HTMLElement 代表自定义元素，默认为 'icon'\n- direction: 收起/展开指定方向上的邻居节点，'in' 代表前驱节点，'out' 代表后继节点，'both' 代表前驱和后继节点，默认为 'out'\n- iconType: 内置图标语法糖，'plus-minus' 或 'arrow-count'\n- iconRender: 渲染函数，用于自定义收起/展开图标，参数为 isCollapsed（当前节点是否已收起）和 data（节点数据），返回自定义图标\n- iconPlacement: 图标相对于节点的位置，可选值为 'left'、'right'、'top'、'bottom'，默认为 'bottom'\n- iconOffsetX/iconOffsetY: 图标相对于节点的水平、垂直偏移量，默认为 0\n- iconClassName/iconStyle: 指定图标的 CSS 类名及内联样式\n- refreshLayout: 每次收起/展开节点后，是否刷新布局"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(I=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return I.apply(this,arguments)})}},"docs-options-graphs-mind-map-demo-demo-mind-map-color":{component:i.memo(i.lazy((function(){return d.e(2433).then(d.bind(d,46910))}))),asset:{type:"BLOCK",id:"docs-options-graphs-mind-map-demo-demo-mind-map-color",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(59270).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"设置分支颜色",description:"assign-color-by-branch 是内置数据转换的一个环节，可以通过修改 colors 来分配不同的颜色来区分思维导图的分支。"},context:{"@ant-design/graphs":s,react:n||(n=d.t(i,2))},renderOpts:{compile:(t=x()(p()().mark((function a(){var e,n=arguments;return p()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},27297:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return x}});var t,I,r,o=d(29008),u=d.n(o),l=d(70958),c=d.n(l),p=d(92379),v=(d(63067),d(67257)),x={"docs-options-graphs-network-graph-demo-demo-network-graph-default":{component:p.memo(p.lazy((function(){return d.e(2433).then(d.bind(d,83128))}))),asset:{type:"BLOCK",id:"docs-options-graphs-network-graph-demo-demo-network-graph-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(73980).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。"},context:{"@ant-design/graphs":v,react:n||(n=d.t(p,2))},renderOpts:{compile:(r=c()(u()().mark((function a(){var e,n=arguments;return u()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return r.apply(this,arguments)})}},"docs-options-graphs-network-graph-demo-demo-network-graph-label":{component:p.memo(p.lazy((function(){return d.e(2433).then(d.bind(d,72029))}))),asset:{type:"BLOCK",id:"docs-options-graphs-network-graph-demo-demo-network-graph-label",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(85387).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"节点标签",description:"展示节点标签，默认显示三行文字，鼠标悬浮时显示全部内容。"},context:{"@ant-design/graphs":v,react:n||(n=d.t(p,2))},renderOpts:{compile:(I=c()(u()().mark((function a(){var e,n=arguments;return u()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return I.apply(this,arguments)})}},"docs-options-graphs-network-graph-demo-demo-network-graph-node-importance":{component:p.memo(p.lazy((function(){return d.e(2433).then(d.bind(d,37392))}))),asset:{type:"BLOCK",id:"docs-options-graphs-network-graph-demo-demo-network-graph-node-importance",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(55190).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"节点重要性",description:"根据节点重要性映射到节点大小，点击此处 [https://g6.antv.antgroup.com/api/transforms/map-node-size]查看更多配置项"},context:{"@ant-design/graphs":v,react:n||(n=d.t(p,2))},renderOpts:{compile:(t=c()(u()().mark((function a(){var e,n=arguments;return u()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},59634:function(a,e,d){var n;d.r(e),d.d(e,{demos:function(){return s}});var t,I,r,o,u=d(29008),l=d.n(u),c=d(70958),p=d.n(c),v=d(92379),x=(d(74539),d(67257)),i=d(70360),s={"docs-options-graphs-organization-chart-demo-demo-org-chart-default":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,90242))}))),asset:{type:"BLOCK",id:"docs-options-graphs-organization-chart-demo-demo-org-chart-default",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(27325).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"基本用法",description:"简单的展示。"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(o=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return o.apply(this,arguments)})}},"docs-options-graphs-organization-chart-demo-demo-org-chart-direction":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,78316))}))),asset:{type:"BLOCK",id:"docs-options-graphs-organization-chart-demo-demo-org-chart-direction",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(51066).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},antd:{type:"NPM",value:"4.24.16"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"节点排布",description:"通过设置 direction 为 vertical horizontal 分别让垂直（自上而下）、水平（自左而右）分布。若不设置 direction，则默认垂直分布。"},context:{"@ant-design/graphs":x,antd:i,react:n||(n=d.t(v,2))},renderOpts:{compile:(r=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return r.apply(this,arguments)})}},"docs-options-graphs-organization-chart-demo-demo-org-chart-custom-node":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,59679))}))),asset:{type:"BLOCK",id:"docs-options-graphs-organization-chart-demo-demo-org-chart-custom-node",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(52474).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"自定义节点",description:"使用自定义的 React 节点进行图的渲染。此示例中使用了内置的 RC 组件 OrganizationChartNode 进行简单实现，你也可以自行开发 RC 组件以满足特定需求。"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(I=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return I.apply(this,arguments)})}},"docs-options-graphs-organization-chart-demo-demo-org-chart-collapse-expand":{component:v.memo(v.lazy((function(){return d.e(2433).then(d.bind(d,25746))}))),asset:{type:"BLOCK",id:"docs-options-graphs-organization-chart-demo-demo-org-chart-collapse-expand",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:d(28600).Z},"@ant-design/graphs":{type:"NPM",value:"2.0.0-beta.4"},react:{type:"NPM",value:"18.3.1"}},entry:"index.tsx",title:"展开/收起子节点",description:"通过调整 collapse-expand-react-node 交互配置来控制展开/收起子节点的操作。\n- enable: 是否启用该交互，类型为 boolean | ((data: NodeData) => boolean)，默认为 false\n- trigger: 点击指定元素，触发节点收起/展开；'icon' 代表点击图标触发，'node' 代表点击节点触发，HTMLElement 代表自定义元素，默认为 'icon'\n- direction: 收起/展开指定方向上的邻居节点，'in' 代表前驱节点，'out' 代表后继节点，'both' 代表前驱和后继节点，默认为 'out'\n- iconType: 内置图标语法糖，'plus-minus' 或 'arrow-count'\n- iconRender: 渲染函数，用于自定义收起/展开图标，参数为 isCollapsed（当前节点是否已收起）和 data（节点数据），返回自定义图标\n- iconPlacement: 图标相对于节点的位置，可选值为 'left'、'right'、'top'、'bottom'，默认为 'bottom'\n- iconOffsetX/iconOffsetY: 图标相对于节点的水平、垂直偏移量，默认为 0\n- iconClassName/iconStyle: 指定图标的 CSS 类名及内联样式\n- refreshLayout: 每次收起/展开节点后，是否刷新布局"},context:{"@ant-design/graphs":x,react:n||(n=d.t(v,2))},renderOpts:{compile:(t=p()(l()().mark((function a(){var e,n=arguments;return l()().wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,Promise.all([d.e(5309),d.e(2713)]).then(d.bind(d,2713));case 2:return a.abrupt("return",(e=a.sent).default.apply(e,n));case 3:case"end":return a.stop()}}),a)}))),function(){return t.apply(this,arguments)})}}}},66516:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(74812);var n={}},65988:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(13887);var n={}},82789:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(45274);var n={}},34159:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(42458);var n={}},83871:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(95773);var n={}},46629:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(3591);var n={}},27563:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(74518);var n={}},5648:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(7386);var n={}},21089:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(48180);var n={}},740:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(84121);var n={}},19815:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(122);var n={}},15317:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(65191);var n={}},65983:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(94106);var n={}},29635:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(75203);var n={}},86296:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(79138);var n={}},83289:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(3189);var n={}},95444:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(83521);var n={}},68942:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(48793);var n={}},44621:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(67668);var n={}},34741:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(11273);var n={}},77465:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(12298);var n={}},56060:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(54030);var n={}},51256:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(53285);var n={}},43620:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(72582);var n={}},72445:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(40413);var n={}},37041:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(66880);var n={}},44491:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(10488);var n={}},52108:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(892);var n={}},70132:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(99772);var n={}},38881:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(66578);var n={}},82856:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(25576);var n={}},63969:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(30334);var n={}},4158:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(73033);var n={}},21743:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(74717);var n={}},91799:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(20574);var n={}},7089:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(38194);var n={}},33843:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(26050);var n={}},87894:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(71178);var n={}},50956:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(74349);var n={}},41992:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(49762);var n={}},11961:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(20209);var n={}},76175:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(60113);var n={}},98363:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(32235);var n={}},73250:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(7574);var n={}},75523:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(11195);var n={}},89601:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(14906);var n={}},69680:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(24289);var n={}},19744:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(1868);var n={}},11133:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(79941);var n={}},60294:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(67870);var n={}},54851:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(20732);var n={}},10135:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(26942);var n={}},2742:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(88668);var n={}},871:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(88960);var n={}},60774:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(1784);var n={}},599:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(52468);var n={}},57117:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(87563);var n={}},2869:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(94619);var n={}},70454:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(72677);var n={}},46802:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(6481);var n={}},71991:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(38730);var n={}},29353:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(44899);var n={}},67457:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(66759);var n={}},35140:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(23208);var n={}},62793:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(26648);var n={}},3066:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(23288);var n={}},73538:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(12282);var n={}},51945:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(4338);var n={}},64249:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(85739);var n={}},88338:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(38869);var n={}},57186:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(49710);var n={}},67786:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(27590);var n={}},92777:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(48019);var n={}},15406:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(32915);var n={}},37373:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(87);var n={}},23316:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(25723);var n={}},3707:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(82230);var n={}},86605:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(32725);var n={}},18294:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(78892);var n={}},62918:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(43344);var n={}},87805:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(66980);var n={}},79731:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(90322);var n={}},47989:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(90843);var n={}},46331:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(43100);var n={}},75005:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(51665);var n={}},41857:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(84272);var n={}},23844:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(62955);var n={}},58202:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(84228);var n={}},52493:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(28093);var n={}},60355:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(96451);var n={}},88658:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(12201);var n={}},70702:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(71786);var n={}},92779:function(a,e,d){d.r(e),d.d(e,{demos:function(){return n}});d(92379),d(40405);var n={}},57416:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(96976);const n=[{value:"如果你有任何的问题、建议、反馈或者交流意愿，可以通过如下方式联系我们：",paraId:0},{value:"官方推荐 ",paraId:1},{value:"GitHub issues",paraId:1},{value:"邮件：",paraId:2},{value:"antv@antfin.com",paraId:2},{value:"语雀专栏：",paraId:3},{value:"https://www.yuque.com/antv",paraId:3},{value:"知乎专栏：",paraId:4},{value:"https://zhuanlan.zhihu.com/aiux-antv",paraId:4},{value:"钉钉群组号码: 44788198",paraId:5}]},77217:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(84340);const n=[{value:"以下整理了一些 Ant Design Charts 社区常见的问题和官方答复。",paraId:0,tocIndex:0},{value:"可能原因：",paraId:1,tocIndex:1},{value:"React 版本过低，不支持 hooks 引起的，升级到 16.8.4 版本或最新版本即可。",paraId:2,tocIndex:1},{value:"使用了 2.x 版本的 ant-design-pro ，导致底层依赖冲突，建议升级 pro 到最新版本。",paraId:2,tocIndex:1},{value:"使用了 BizCharts 依赖冲突。",paraId:2,tocIndex:1},{value:"方案 1：从 es 引入",paraId:3,tocIndex:2},{value:"从对应子包里面引入",paraId:4,tocIndex:2},{value:"// 统计图表\nimport Line from '@ant-design/plots/es/components/line';\n",paraId:5,tocIndex:2},{value:"方案 2： 开启 sideEffects",paraId:6,tocIndex:2},{value:"开启 webpack sideEffcets 配置，webpack 4+ 默认应该是开启的。",paraId:7,tocIndex:2},{value:"{\n  optimization: {\n     sideEffects: true,\n  }\n}\n",paraId:8,tocIndex:2},{value:"方案 3： 使用 ",paraId:9,tocIndex:2},{value:"babel-plugin-import",paraId:9,tocIndex:2},{value:'  // 安装依赖\n  npm install babel-plugin-import -D\n\n  // 配置 .babelrc 文件\n  {\n    "plugins": [\n      ["import", {\n        "libraryName": "@ant-design/plots",\n        "libraryDirectory": "es"\n      }],\n      ["import", {\n        "libraryName": "@ant-design/graphs",\n        "libraryDirectory": "es"\n      }],\n      ["import", {\n        "libraryName": "@ant-design/maps",\n        "libraryDirectory": "es"\n      }]\n    ]\n  }\n',paraId:10,tocIndex:2},{value:"由于 react 机制，默认情况下只要父组件有状态更新，子组件都会重新渲染，导致图表再次重绘。可参考",paraId:11,tocIndex:3},{value:"示例",paraId:11,tocIndex:3},{value:"参考 ",paraId:12,tocIndex:4},{value:"ChartsIE",paraId:12,tocIndex:4},{value:"请到 ",paraId:13,tocIndex:5},{value:"GitHub issues",paraId:13,tocIndex:5},{value:" 进行反馈，搜索是否有类似问题。我们会尽快响应和相应改进这篇文档。",paraId:13,tocIndex:5}]},10987:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(62939);const n=[{value:"我们提供了 Ant Design 的 npm 包，通过下面的命令即可完成安装：",paraId:0,tocIndex:1},{value:"npm install @ant-design/charts --save\n",paraId:1,tocIndex:1},{value:"成功安装完成之后，即可使用 ",paraId:2,tocIndex:1},{value:"import",paraId:2,tocIndex:1},{value:" 或 ",paraId:2,tocIndex:1},{value:"require",paraId:2,tocIndex:1},{value:" 进行引用：",paraId:2,tocIndex:1},{value:"import { Line } from '@ant-design/charts';\n",paraId:3,tocIndex:1},{value:"前置依赖",paraId:4,tocIndex:1},{value:'"peerDependencies": {\n    "react": ">=16.8.4",\n    "react-dom": ">=16.8.4"\n  }\n',paraId:5,tocIndex:1},{value:"既可以通过将脚本下载到本地也可以直接引入在线资源。",paraId:6,tocIndex:2},{value:'<script type="text/javascript" src="https://unpkg.com/@ant-design/charts@latest/dist/charts.min.js"><\/script>\n',paraId:7,tocIndex:2},{value:"由于 @ant-design/charts 里面 externals 了 ",paraId:8,tocIndex:2},{value:"react",paraId:8,tocIndex:2},{value:" 、",paraId:8,tocIndex:2},{value:"react-dom",paraId:8,tocIndex:2},{value:"，使用时需要通过 CDN 的方式在 ",paraId:8,tocIndex:2},{value:"charts.min.js",paraId:8,tocIndex:2},{value:" 之前引入对应包的 CDN 地址。",paraId:8,tocIndex:2},{value:'// webpack.config.js\nexternals: {\n  react: \'React\',\n  \'react-dom\': \'ReactDOM\',\n}\n// public/index.html\n<script crossorigin src="https://unpkg.com/react@latest/umd/react.production.min.js"><\/script>\n<script crossorigin src="https://unpkg.com/react-dom@latest/umd/react-dom.production.min.js"><\/script>\n\n// 按需引入\n<script type="text/javascript" src="https://unpkg.com/@ant-design/charts@latest/dist/charts.min.js"><\/script>\n',paraId:9,tocIndex:2},{value:"使用方式",paraId:10,tocIndex:2},{value:"// 折线图，其它图表类似\nconst { Line } = window.Charts;\n",paraId:11,tocIndex:2},{value:"在 Ant Design Charts 引入页面后，我们就已经做好了创建第一个图表的准备了，下面以一个基础折线图为例开始我们第一个图表的创建。大部分 demos 使用了父容器宽高，请确保父容器宽高或者手动设置图表宽高。",paraId:12,tocIndex:3},{value:"import React from 'react';\nimport { Line } from '@ant-design/charts';\n\nconst Page: React.FC = () => {\n  const data = [\n    { year: '1991', value: 3 },\n    { year: '1992', value: 4 },\n    { year: '1993', value: 3.5 },\n    { year: '1994', value: 5 },\n    { year: '1995', value: 4.9 },\n    { year: '1996', value: 6 },\n    { year: '1997', value: 7 },\n    { year: '1998', value: 9 },\n    { year: '1999', value: 13 },\n  ];\n\n  const config = {\n    data,\n    height: 400,\n    xField: 'year',\n    yField: 'value',\n  };\n  return <Line {...config} />;\n};\nexport default Page;\n",paraId:13,tocIndex:3}]},16694:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(32746);const n=[{value:"Ant Design Charts",paraId:0,tocIndex:0},{value:" 是 ",paraId:0,tocIndex:0},{value:"AntV",paraId:0,tocIndex:0},{value:" 的 React 版本，对 React 技术栈的同学更加友好，",paraId:0,tocIndex:0},{value:"同一团队开发",paraId:0,tocIndex:0},{value:"。",paraId:0,tocIndex:0},{value:"开箱即用：默认呈现高质量图表，将对开发体验及用户体验的研究沉淀入图表的默认配置项",paraId:1,tocIndex:0},{value:"易于配置：用户能够根据具体业务需要较为轻松的调整图表细节",paraId:2,tocIndex:0},{value:"体验良好：视觉和交互体验聚焦于如何能够",paraId:3,tocIndex:0},{value:"展示和发现信息",paraId:3,tocIndex:0},{value:"这一图表本源的职能上",paraId:3,tocIndex:0},{value:" 像使用组件一样生成图表，开箱即用，你甚至不需要修改任何配置项就可以满足需求，真正的默认好用，有没有心动想试试的感觉。",paraId:4,tocIndex:0},{value:"\n  ",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"主包",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"子包/依赖",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"描述",paraId:5,tocIndex:1},{value:"\n  ",paraId:5,tocIndex:1},{value:"\n  ",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"@ant-design/charts",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"@ant-design/plots",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"统计图表",paraId:5,tocIndex:1},{value:"\n  ",paraId:5,tocIndex:1},{value:"\n  ",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"@ant-design/graphs",paraId:5,tocIndex:1},{value:"\n    ",paraId:5,tocIndex:1},{value:"关系图",paraId:5,tocIndex:1},{value:"\n  ",paraId:5,tocIndex:1},{value:"\n  ",paraId:6},{value:"\n     ",paraId:6},{value:"\n  ",paraId:6},{value:"\n  ",paraId:6},{value:"\n    ",paraId:6},{value:"\n  ",paraId:6},{value:"\n  ",paraId:6},{value:"\n    ",paraId:6},{value:"\n  ",paraId:6},{value:"\n  ",paraId:6},{value:"\n  ",paraId:6},{value:"\n    ",paraId:6},{value:"\n  ",paraId:6},{value:"Ant Design Charts 目前已经集成了大量可视化组件，其它组件也在进一步完善中。",paraId:7,tocIndex:5}]},94227:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(6914);const n=[{value:"文章持续更新中，详见",paraId:0,tocIndex:0},{value:"语雀文档",paraId:0,tocIndex:0},{value:"我们尽可能收集了已知的所有不兼容变化和相关影响，但是有可能还是有一些场景我们没有考虑到。如果你在升级过程中遇到了问题，请到 ",paraId:1,tocIndex:1},{value:"GitHub issues",paraId:1,tocIndex:1},{value:" 进行反馈。我们会尽快响应和相应改进这篇文档。",paraId:1,tocIndex:1}]},46276:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(68755);const n=[{value:"Tips: 以下通用属性适用于 charts 组件，不支持的组件会单独说明。",paraId:0},{value:"参数",paraId:1},{value:"说明",paraId:1},{value:"类型",paraId:1},{value:"默认值",paraId:1},{value:"containerStyle",paraId:1},{value:"配置图表容器的样式，接受一个包含 CSS 属性和值的对象",paraId:1},{value:"React.CSSProperties",paraId:1},{value:"-",paraId:1},{value:"containerAttributes",paraId:1},{value:"为图表容器添加自定义的 HTML 属性",paraId:1},{value:"Record<string, any>",paraId:1},{value:"-",paraId:1},{value:"className",paraId:1},{value:"添加在组件最外层的 className",paraId:1},{value:"string",paraId:1},{value:"-",paraId:1},{value:"loading",paraId:1},{value:"表示图表是否处于加载状态",paraId:1},{value:"boolean",paraId:1},{value:"false",paraId:1},{value:"loadingTemplate",paraId:1},{value:"自定义加载模板，当图表加载时显示的元素",paraId:1},{value:"React.ReactElement",paraId:1},{value:"-",paraId:1},{value:"errorTemplate",paraId:1},{value:"自定义错误模板，当图表出错时调用的函数，返回显示的错误信息",paraId:1},{value:"(e: Error) => React.ReactNode",paraId:1},{value:"-",paraId:1}]},97519:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(31836);const n=[{value:"将事物或现象分解成树枝状结构，来系统地展示其构成关系或内在逻辑关系。",paraId:0},{value:"import { Dendrogram } from '@ant-design/graphs';\n",paraId:1},{value:"适用于展示数据的层级关系、明确问题的重点、寻求达成目标的合理步骤。",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:6},{value:"图通用属性",paraId:4,tocIndex:6},{value:"属性",paraId:5,tocIndex:7},{value:"说明",paraId:5,tocIndex:7},{value:"类型",paraId:5,tocIndex:7},{value:"默认值",paraId:5,tocIndex:7},{value:"direction",paraId:5,tocIndex:7},{value:"语法糖，设置树图节点的排布方向。当设置 ",paraId:5,tocIndex:7},{value:"layout.direction",paraId:5,tocIndex:7},{value:" 时会以后者为准",paraId:5,tocIndex:7},{value:"'vertical'",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"'horizontal'",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"'radial'",paraId:5,tocIndex:7},{value:"'horizontal'",paraId:5,tocIndex:7},{value:"compact",paraId:5,tocIndex:7},{value:"是否为紧凑模式",paraId:5,tocIndex:7},{value:"boolean",paraId:5,tocIndex:7},{value:"false",paraId:5,tocIndex:7},{value:"layout",paraId:5,tocIndex:7},{value:"树图布局配置",paraId:5,tocIndex:7},{value:"DendrogramLayoutOptions",paraId:5,tocIndex:7},{value:"{ type: 'dendrogram' }",paraId:5,tocIndex:7},{value:"behaviors",paraId:5,tocIndex:7},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:7},{value:"此处",paraId:5,tocIndex:7},{value:"BehaviorOptions[]",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:7},{value:"-",paraId:5,tocIndex:7},{value:"plugins",paraId:5,tocIndex:7},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:7},{value:"此处",paraId:5,tocIndex:7},{value:"PluginOptions[]",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:7},{value:"-",paraId:5,tocIndex:7},{value:"transforms",paraId:5,tocIndex:7},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:7},{value:"此处",paraId:5,tocIndex:7},{value:"TransformOptions[]",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:7},{value:"-",paraId:5,tocIndex:7}]},95897:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(67626);const n=[{value:"用于直观展示流动路径和量值变化。",paraId:0},{value:"import { FlowDirectionGraph } from '@ant-design/graphs';\n",paraId:1},{value:"适用于信息繁杂、需要明确逻辑关系或决策支持时，能直观、清晰地展示数据流向和关系，提升理解和决策效率。",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:3},{value:"图通用属性",paraId:4,tocIndex:3},{value:"属性",paraId:5,tocIndex:3},{value:"说明",paraId:5,tocIndex:3},{value:"类型",paraId:5,tocIndex:3},{value:"默认值",paraId:5,tocIndex:3},{value:"layout",paraId:5,tocIndex:3},{value:"AntV Dagre 布局配置",paraId:5,tocIndex:3},{value:"AntVDagreLayoutOptions",paraId:5,tocIndex:3},{value:"{ type: 'antv-dagre' }",paraId:5,tocIndex:3},{value:"behaviors",paraId:5,tocIndex:3},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:3},{value:"此处",paraId:5,tocIndex:3},{value:"BehaviorOptions[]",paraId:5,tocIndex:3},{value:" | ",paraId:5,tocIndex:3},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:3},{value:"-",paraId:5,tocIndex:3},{value:"plugins",paraId:5,tocIndex:3},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:3},{value:"此处",paraId:5,tocIndex:3},{value:"PluginOptions[]",paraId:5,tocIndex:3},{value:" | ",paraId:5,tocIndex:3},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:3},{value:"-",paraId:5,tocIndex:3},{value:"transforms",paraId:5,tocIndex:3},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:3},{value:"此处",paraId:5,tocIndex:3},{value:"TransformOptions[]",paraId:5,tocIndex:3},{value:" | ",paraId:5,tocIndex:3},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:3},{value:"-",paraId:5,tocIndex:3}]},83830:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(2446);const n=[{value:"用于直观地表示过程或系统的步骤和决策点。",paraId:0},{value:"import { FlowGraph } from '@ant-design/graphs';\n",paraId:1},{value:"展示了从开始到结束的整个流程。每个节点代表一个特定的步骤或决策点，边则表示步骤之间的顺序和关系。",paraId:2,tocIndex:0},{value:"适用于需要展示线性流程或步骤的场景",paraId:3,tocIndex:0},{value:"规划和跟踪项目进度，明确任务的先后顺序和依赖关系",paraId:3,tocIndex:0},{value:"构建决策树，展示不同决策点和路径的场景",paraId:3,tocIndex:0},{value:"通用配置参考：",paraId:4,tocIndex:5},{value:"图通用属性",paraId:5,tocIndex:5},{value:"属性",paraId:6,tocIndex:5},{value:"说明",paraId:6,tocIndex:5},{value:"类型",paraId:6,tocIndex:5},{value:"默认值",paraId:6,tocIndex:5},{value:"layout",paraId:6,tocIndex:5},{value:"AntV Dagre 布局配置",paraId:6,tocIndex:5},{value:"AntVDagreLayoutOptions",paraId:6,tocIndex:5},{value:"{ type: 'antv-dagre' }",paraId:6,tocIndex:5},{value:"behaviors",paraId:6,tocIndex:5},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:6,tocIndex:5},{value:"此处",paraId:6,tocIndex:5},{value:"BehaviorOptions[]",paraId:6,tocIndex:5},{value:" | ",paraId:6,tocIndex:5},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"plugins",paraId:6,tocIndex:5},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:6,tocIndex:5},{value:"此处",paraId:6,tocIndex:5},{value:"PluginOptions[]",paraId:6,tocIndex:5},{value:" | ",paraId:6,tocIndex:5},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"transforms",paraId:6,tocIndex:5},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:6,tocIndex:5},{value:"此处",paraId:6,tocIndex:5},{value:"TransformOptions[]",paraId:6,tocIndex:5},{value:" | ",paraId:6,tocIndex:5},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5}]},69382:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(73135);const n=[{value:"用于表示层次结构数据的图形结构，通过缩进来展示父子关系。",paraId:0},{value:"import { IndentedTree } from '@ant-design/graphs';\n",paraId:1},{value:"文件目录结构：展示文件系统中的目录和文件层级关系。",paraId:2,tocIndex:0},{value:"组织结构：展示公司或团队的层级结构和部门关系。",paraId:2,tocIndex:0},{value:"导航菜单：展示网站或应用程序中的导航菜单层级。",paraId:2,tocIndex:0},{value:"分类层次：展示分类系统中的层级关系，例如产品分类、文章分类等。",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:8},{value:"图通用属性",paraId:4,tocIndex:8},{value:"属性",paraId:5,tocIndex:9},{value:"说明",paraId:5,tocIndex:9},{value:"类型",paraId:5,tocIndex:9},{value:"默认值",paraId:5,tocIndex:9},{value:"type",paraId:5,tocIndex:9},{value:"语法糖，设置缩进树图的展示风格。当设置 ",paraId:5,tocIndex:9},{value:"node.component",paraId:5,tocIndex:9},{value:" 时以后者为准",paraId:5,tocIndex:9},{value:"'default'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'linear'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'boxed'",paraId:5,tocIndex:9},{value:"'default'",paraId:5,tocIndex:9},{value:"direction",paraId:5,tocIndex:9},{value:"语法糖，设置缩进树图节点的排布方向。当设置 ",paraId:5,tocIndex:9},{value:"layout.direction",paraId:5,tocIndex:9},{value:" 时会以后者为准",paraId:5,tocIndex:9},{value:"'left'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'right'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'alternate'",paraId:5,tocIndex:9},{value:"'right'",paraId:5,tocIndex:9},{value:"nodeMinWidth",paraId:5,tocIndex:9},{value:"缩进树图节点的最小宽度，当文字内容不够时将居中显示",paraId:5,tocIndex:9},{value:"number",paraId:5,tocIndex:9},{value:"0",paraId:5,tocIndex:9},{value:"nodeMaxWidth",paraId:5,tocIndex:9},{value:"缩进树图节点的最大宽度，超出部分将自动换行",paraId:5,tocIndex:9},{value:"number",paraId:5,tocIndex:9},{value:"300",paraId:5,tocIndex:9},{value:"layout",paraId:5,tocIndex:9},{value:"缩进树布局配置",paraId:5,tocIndex:9},{value:"IndentedLayoutOptions",paraId:5,tocIndex:9},{value:"{ type: 'indented' }",paraId:5,tocIndex:9},{value:"behaviors",paraId:5,tocIndex:9},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:9},{value:"此处",paraId:5,tocIndex:9},{value:"BehaviorOptions[]",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9},{value:"plugins",paraId:5,tocIndex:9},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:9},{value:"此处",paraId:5,tocIndex:9},{value:"PluginOptions[]",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9},{value:"transforms",paraId:5,tocIndex:9},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:9},{value:"此处",paraId:5,tocIndex:9},{value:"TransformOptions[]",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9}]},18627:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(49744);const n=[{value:"辅助用户系统整理与表达思想的思维辅助工具。",paraId:0},{value:"import { MindMap } from '@ant-design/graphs';\n",paraId:1},{value:"当信息繁杂或需明确逻辑关系时，将其梳理成一系列节点与分支，进而简化理解。",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:8},{value:"图通用属性",paraId:4,tocIndex:8},{value:"属性",paraId:5,tocIndex:9},{value:"说明",paraId:5,tocIndex:9},{value:"类型",paraId:5,tocIndex:9},{value:"默认值",paraId:5,tocIndex:9},{value:"type",paraId:5,tocIndex:9},{value:"语法糖，设置思维导图的展示风格。当设置 ",paraId:5,tocIndex:9},{value:"node.component",paraId:5,tocIndex:9},{value:" 时以后者为准",paraId:5,tocIndex:9},{value:"'default'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'linear'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'boxed'",paraId:5,tocIndex:9},{value:"'default'",paraId:5,tocIndex:9},{value:"direction",paraId:5,tocIndex:9},{value:"语法糖，设置思维导图节点的排布方向。当设置 ",paraId:5,tocIndex:9},{value:"layout.direction",paraId:5,tocIndex:9},{value:" 时会以后者为准",paraId:5,tocIndex:9},{value:"'left'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'right'",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"'alternate'",paraId:5,tocIndex:9},{value:"'alternate'",paraId:5,tocIndex:9},{value:"nodeMinWidth",paraId:5,tocIndex:9},{value:"思维导图节点的最小宽度，当文字内容不足时将居中显示",paraId:5,tocIndex:9},{value:"number",paraId:5,tocIndex:9},{value:"0",paraId:5,tocIndex:9},{value:" (",paraId:5,tocIndex:9},{value:"default",paraId:5,tocIndex:9},{value:" 类型) ",paraId:5,tocIndex:9},{value:" ",paraId:5,tocIndex:9},{value:"120",paraId:5,tocIndex:9},{value:" (",paraId:5,tocIndex:9},{value:"boxed",paraId:5,tocIndex:9},{value:" 类型)",paraId:5,tocIndex:9},{value:"nodeMaxWidth",paraId:5,tocIndex:9},{value:"思维导图节点的最大宽度，超出部分将自动换行",paraId:5,tocIndex:9},{value:"number",paraId:5,tocIndex:9},{value:"300",paraId:5,tocIndex:9},{value:"layout",paraId:5,tocIndex:9},{value:"思维导图布局配置",paraId:5,tocIndex:9},{value:"MindmapLayoutOptions",paraId:5,tocIndex:9},{value:"{ type: 'mindmap' }",paraId:5,tocIndex:9},{value:"behaviors",paraId:5,tocIndex:9},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:9},{value:"此处",paraId:5,tocIndex:9},{value:"BehaviorOptions[]",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9},{value:"plugins",paraId:5,tocIndex:9},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:9},{value:"此处",paraId:5,tocIndex:9},{value:"PluginOptions[]",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9},{value:"transforms",paraId:5,tocIndex:9},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:9},{value:"此处",paraId:5,tocIndex:9},{value:"TransformOptions[]",paraId:5,tocIndex:9},{value:" | ",paraId:5,tocIndex:9},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9}]},96403:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(63067);const n=[{value:"展示一系列节点（如实体、对象或概念）以及它们之间的连接或关系。",paraId:0},{value:"import { NetworkGraph } from '@ant-design/graphs';\n",paraId:1},{value:"当需要展示复杂网络结构中的节点及其相互关系时，直观地揭示连接模式和数据流动。",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:5},{value:"图通用属性",paraId:4,tocIndex:5},{value:"属性",paraId:5,tocIndex:5},{value:"说明",paraId:5,tocIndex:5},{value:"类型",paraId:5,tocIndex:5},{value:"默认值",paraId:5,tocIndex:5},{value:"layout",paraId:5,tocIndex:5},{value:"D3 Force 布局配置",paraId:5,tocIndex:5},{value:"D3ForceLayoutOptions",paraId:5,tocIndex:5},{value:"{ type: 'd3-force' }",paraId:5,tocIndex:5},{value:"behaviors",paraId:5,tocIndex:5},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:5},{value:"此处",paraId:5,tocIndex:5},{value:"BehaviorOptions[]",paraId:5,tocIndex:5},{value:" | ",paraId:5,tocIndex:5},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:5},{value:"-",paraId:5,tocIndex:5},{value:"plugins",paraId:5,tocIndex:5},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:5},{value:"此处",paraId:5,tocIndex:5},{value:"PluginOptions[]",paraId:5,tocIndex:5},{value:" | ",paraId:5,tocIndex:5},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:5},{value:"-",paraId:5,tocIndex:5},{value:"transforms",paraId:5,tocIndex:5},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:5},{value:"此处",paraId:5,tocIndex:5},{value:"TransformOptions[]",paraId:5,tocIndex:5},{value:" | ",paraId:5,tocIndex:5},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:5},{value:"-",paraId:5,tocIndex:5}]},83431:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(74539);const n=[{value:"直观展示组织内部的层级结构和部门关系。",paraId:0},{value:"import { OrganizationChart } from '@ant-design/graphs';\n",paraId:1},{value:"想要展示公司或团队的层级结构，明确各个职位和部门的上下级关系。",paraId:2,tocIndex:0},{value:"展示员工的职位和部门分布。",paraId:2,tocIndex:0},{value:"项目管理时，明确项目团队的成员和职责分工。",paraId:2,tocIndex:0},{value:"用于股权穿透、投资上下游公司等依赖分析。",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:6},{value:"图通用属性",paraId:4,tocIndex:6},{value:"属性",paraId:5,tocIndex:7},{value:"说明",paraId:5,tocIndex:7},{value:"类型",paraId:5,tocIndex:7},{value:"默认值",paraId:5,tocIndex:7},{value:"direction",paraId:5,tocIndex:7},{value:"语法糖，设置节点的排布方向。当设置 ",paraId:5,tocIndex:7},{value:"layout.rankdir",paraId:5,tocIndex:7},{value:" 时会以后者为准",paraId:5,tocIndex:7},{value:"'vertical'",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"'horizontal'",paraId:5,tocIndex:7},{value:"'vertical'",paraId:5,tocIndex:7},{value:"layout",paraId:5,tocIndex:7},{value:"AntV Dagre 布局配置",paraId:5,tocIndex:7},{value:"AntVDagreLayoutOptions",paraId:5,tocIndex:7},{value:"{ type: 'antv-dagre' }",paraId:5,tocIndex:7},{value:"behaviors",paraId:5,tocIndex:7},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:7},{value:"此处",paraId:5,tocIndex:7},{value:"BehaviorOptions[]",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:7},{value:"-",paraId:5,tocIndex:7},{value:"plugins",paraId:5,tocIndex:7},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:7},{value:"此处",paraId:5,tocIndex:7},{value:"PluginOptions[]",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:7},{value:"-",paraId:5,tocIndex:7},{value:"transforms",paraId:5,tocIndex:7},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:7},{value:"此处",paraId:5,tocIndex:7},{value:"TransformOptions[]",paraId:5,tocIndex:7},{value:" | ",paraId:5,tocIndex:7},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:7},{value:"-",paraId:5,tocIndex:7}]},24208:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(74812);const n=[{value:"@ant-design/graphs",paraId:0},{value:" 是基于 ",paraId:0},{value:"G6",paraId:0},{value:" 精心打造的 React 组件库，旨在为开发者提供一套直接可用于业务的 “一图一做” 封装，同时保持 G6 能力同步，让关系图集成变得更加简单、高效。",paraId:0},{value:"该库提供的图组件会在内部维护一套默认配置，能够满足大多数常见场景的需求。用户可以通过自定义传参轻松修改这些配置，来优化渲染效果，贴合特定业务需求。然而，针对需深度定制的复杂场景，推荐使用 G6 直接开发，充分利用其底层强大的功能与灵活性。",paraId:1},{value:"应用场景",paraId:2,tocIndex:0},{value:"图组件",paraId:2,tocIndex:0},{value:"效果演示",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"思维导图",paraId:2,tocIndex:0},{value:"MindMap",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"生态树图",paraId:2,tocIndex:0},{value:"Dendrogram",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"缩进树图",paraId:2,tocIndex:0},{value:"IndentedTree",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"组织架构图",paraId:2,tocIndex:0},{value:"OrganizationChart",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"流程图",paraId:2,tocIndex:0},{value:"FlowGraph",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"流向图",paraId:2,tocIndex:0},{value:"FlowDirectionGraph",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"网络图",paraId:2,tocIndex:0},{value:"NetworkGraph",paraId:2,tocIndex:0},{value:"示例",paraId:2,tocIndex:0},{value:"通用配置参考：",paraId:3,tocIndex:1},{value:"通用属性",paraId:4,tocIndex:1},{value:"属性",paraId:5,tocIndex:1},{value:"说明",paraId:5,tocIndex:1},{value:"类型",paraId:5,tocIndex:1},{value:"默认值",paraId:5,tocIndex:1},{value:"autoFit",paraId:5,tocIndex:1},{value:"是否自动适应",paraId:5,tocIndex:1},{value:"{ type: 'view'; options?: ",paraId:5,tocIndex:1},{value:"FitViewOptions",paraId:5,tocIndex:1},{value:"; animation?:",paraId:5,tocIndex:1},{value:" ",paraId:5,tocIndex:1},{value:"ViewportAnimationEffectTiming",paraId:5,tocIndex:1},{value:"}",paraId:5,tocIndex:1},{value:" ",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"{ type: 'center'; animation?:",paraId:5,tocIndex:1},{value:" ",paraId:5,tocIndex:1},{value:"ViewportAnimationEffectTiming",paraId:5,tocIndex:1},{value:"}",paraId:5,tocIndex:1},{value:" ",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"'view'",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"'center'",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"animation",paraId:5,tocIndex:1},{value:"启用或关闭全局动画，为动画配置项时，会启用动画，并将该动画配置作为全局动画的基础配置。关于动画的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"boolean",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"AnimationEffectTiming",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"autoResize",paraId:5,tocIndex:1},{value:"是否自动调整画布大小",paraId:5,tocIndex:1},{value:"boolean",paraId:5,tocIndex:1},{value:"false",paraId:5,tocIndex:1},{value:"background",paraId:5,tocIndex:1},{value:"画布背景色",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"combo",paraId:5,tocIndex:1},{value:"Combo，支持 G6 内置 Combo。关于 Combo 的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"ComboOptions",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"container",paraId:5,tocIndex:1},{value:"画布容器",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"HTMLElement",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"Canvas",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"cursor",paraId:5,tocIndex:1},{value:"指针样式",paraId:5,tocIndex:1},{value:"Cursor",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"data",paraId:5,tocIndex:1},{value:"数据。关于图数据的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"GraphData",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"devicePixelRatio",paraId:5,tocIndex:1},{value:"设备像素比",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"edge",paraId:5,tocIndex:1},{value:"边，支持 G6 内置边。关于边的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"EdgeOptions",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"height",paraId:5,tocIndex:1},{value:"画布高度",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"layout",paraId:5,tocIndex:1},{value:"布局，支持 G6 内置布局。关于图布局的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"LayoutOptions",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"LayoutOptions[]",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"node",paraId:5,tocIndex:1},{value:"节点，支持 G6 内置节点。关于节点的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"NodeOptions",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"padding",paraId:5,tocIndex:1},{value:"画布内边距，通常在自适应时，会根据内边距进行适配",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"number[]",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"renderer",paraId:5,tocIndex:1},{value:"获取渲染器",paraId:5,tocIndex:1},{value:"(layer: 'background' | 'main' | 'label' | 'transient') =>",paraId:5,tocIndex:1},{value:"IRenderer",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"rotation",paraId:5,tocIndex:1},{value:"旋转角度",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"0",paraId:5,tocIndex:1},{value:"theme",paraId:5,tocIndex:1},{value:"主题",paraId:5,tocIndex:1},{value:"'light'",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"'dark'",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"width",paraId:5,tocIndex:1},{value:"画布宽度",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"x",paraId:5,tocIndex:1},{value:"视口 x 坐标",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"y",paraId:5,tocIndex:1},{value:"视口 y 坐标",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"zoom",paraId:5,tocIndex:1},{value:"缩放比例",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"1",paraId:5,tocIndex:1},{value:"zoomRange",paraId:5,tocIndex:1},{value:"缩放范围",paraId:5,tocIndex:1},{value:"[number, number]",paraId:5,tocIndex:1},{value:"[0.01, 10]",paraId:5,tocIndex:1},{value:"behaviors",paraId:5,tocIndex:1},{value:"设置用户交互事件，同样支持 G6 内置交互。关于交互的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"BehaviorOptions[]",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"((existingBehaviors: BehaviorOptions[]) => BehaviorOptions[])",paraId:5,tocIndex:1},{value:"组件中查看",paraId:5,tocIndex:1},{value:"plugins",paraId:5,tocIndex:1},{value:"设置画布插件，处理画布的渲染逻辑、额外组件渲染等，同样支持 G6 内置插件。关于插件的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"PluginOptions[]",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"((existingPlugins: PluginOptions[]) => PluginOptions[])",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"transforms",paraId:5,tocIndex:1},{value:"设置数据转换器，处理用户输入数据并转换为适合后续处理的内部流转数据，同样支持 G6 内置数据转换器。关于数据转换的详细介绍，请查阅",paraId:5,tocIndex:1},{value:"此处",paraId:5,tocIndex:1},{value:"TransformOptions[]",paraId:5,tocIndex:1},{value:" | ",paraId:5,tocIndex:1},{value:"((existingTransforms: TransformOptions[]) => TransformOptions[])",paraId:5,tocIndex:1},{value:"组件中查看",paraId:5,tocIndex:1},{value:"onDestroy",paraId:5,tocIndex:1},{value:"当图销毁后（即 ",paraId:5,tocIndex:1},{value:"graph.destroy()",paraId:5,tocIndex:1},{value:" 之后）执行回调",paraId:5,tocIndex:1},{value:"() => void",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"onInit",paraId:5,tocIndex:1},{value:"当图初始化完成后（即 ",paraId:5,tocIndex:1},{value:"new Graph()",paraId:5,tocIndex:1},{value:" 之后）执行回调",paraId:5,tocIndex:1},{value:"(graph:",paraId:5,tocIndex:1},{value:"Graph",paraId:5,tocIndex:1},{value:") => void",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"onReady",paraId:5,tocIndex:1},{value:"当图渲染完成后（即 ",paraId:5,tocIndex:1},{value:"graph.render()",paraId:5,tocIndex:1},{value:" 之后）执行回调",paraId:5,tocIndex:1},{value:"(graph:",paraId:5,tocIndex:1},{value:"Graph",paraId:5,tocIndex:1},{value:") => void",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"为了满足多样化需求，用户可以在标准图组件基础上进行扩展，实现自定义关系图。",paraId:6,tocIndex:2},{value:"除了交互、插件、数据转换以外，其他图配置项都可以直接配置。",paraId:7,tocIndex:3},{value:"import { MindMap } from '@ant-design/graphs';\n\nexport default () => {\n  const options = {\n    autoFit: 'view',\n    edge: {\n      style: {\n        lineWidth: 3,\n      },\n    },\n  };\n  return <MindMap {...options} />;\n};\n",paraId:8,tocIndex:3},{value:"详细讲解如何更新插件，该策略同样适用于交互与数据转换。",paraId:9,tocIndex:4},{value:"在进行插件配置时，需特别留意插件的添加方式。为了确保既能增添新的功能，又不影响原有预设插件的正常运行，我们引入了一种 🔔 特定的插件更新策略。",paraId:10,tocIndex:4},{value:"具体来说，就是通过一个高阶函来对现有插件列表进行扩展，而不是直接替换。该函数接受当前图表实例（",paraId:11,tocIndex:4},{value:"this: Graph",paraId:11,tocIndex:4},{value:"）及现有插件配置（",paraId:11,tocIndex:4},{value:"plugins: PluginOptions",paraId:11,tocIndex:4},{value:"）作为参数，并返回一个新的插件配置数组。",paraId:11,tocIndex:4},{value:"以下是一个具体的示例，展示了如何在思维导图中添加小地图插件：",paraId:12,tocIndex:4},{value:"import { MindMap } from '@ant-design/graphs';\n\nexport default () => {\n  const options = {\n    plugins: (existingPlugins) => [\n      ...existingPlugins, // 保留原有的所有插件\n      { type: 'minimap', key: 'minimap' }, // 添加小地图插件\n    ],\n  };\n\n  return <MindMap {...options} />;\n};\n",paraId:13,tocIndex:4}]},8394:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(13887);const n=[{value:"fadeIn",paraId:0},{value:" 是渐现动画，影响 ",paraId:0},{value:"opacity",paraId:0},{value:" 透明度属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'fadeIn' } }\n  }\n",paraId:1,tocIndex:0}]},34424:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(45274);const n=[{value:"fadeOut",paraId:0},{value:" 是渐现动画，影响 ",paraId:0},{value:"opacity",paraId:0},{value:" 透明度属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'fadeOut' } }\n  }\n",paraId:1,tocIndex:0}]},75449:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(42458);const n=[{value:"growInX",paraId:0},{value:" 是容器沿着 x 方向放大的矩阵动画，多用于 G.Group 容器类进行动画。影响图形的 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'growInX' } }\n  }\n",paraId:1,tocIndex:0}]},23032:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(95773);const n=[{value:"growInY",paraId:0},{value:" 是容器沿着 y 方向放大的矩阵动画，多用于 G.Group 容器类进行动画。影响图形的 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'growInY' } }\n  }\n",paraId:1,tocIndex:0}]},55594:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(3591);const n=[{value:"morphing",paraId:0},{value:" 图形之间的形变动画，通过 SVG Path 之间的过渡形成的动画。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'morphing' } }\n  }\n",paraId:1,tocIndex:0}]},21325:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(74518);const n=[{value:"动画的过程本质是视觉属性在时间上的变化，带来视觉上的动画效果。在 G2 中，提供了三种动画场景类型：",paraId:0},{value:"enter",paraId:1},{value:" - 元素第一次出现的出场动画；",paraId:1},{value:"update",paraId:1},{value:" - 数据更新的时候，元素更新的动画；",paraId:1},{value:"exit",paraId:1},{value:" - 数据更新的时候，元素被销毁退出画布的动画；",paraId:1},{value:"利用这 3 种动画场景，结合 G2 动画语法使用数据驱动动画的方式，可以配制出各种各样需要的动画效果。",paraId:2},{value:"  const config = {\n    animate: { enter: { type: 'growInX' } }\n  }\n",paraId:3,tocIndex:0},{value:"关于 ",paraId:4,tocIndex:1},{value:"animate",paraId:4,tocIndex:1},{value:" API 的参数，有以下，主要 3 种动画场景（enter、update、exit）和 动画 5 个属性（type、duration、delay、easing、fill）的组合。",paraId:4,tocIndex:1},{value:"属性",paraId:5,tocIndex:1},{value:"描述",paraId:5,tocIndex:1},{value:"类型",paraId:5,tocIndex:1},{value:"默认值",paraId:5,tocIndex:1},{value:"enterType",paraId:5,tocIndex:1},{value:"动画类型",paraId:5,tocIndex:1},{value:"Type",paraId:5,tocIndex:1},{value:"enterDuration",paraId:5,tocIndex:1},{value:"动画持续时间 (ms)",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"enterDelay",paraId:5,tocIndex:1},{value:"延迟执行时间 (ms)",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"enterEasing",paraId:5,tocIndex:1},{value:"动画的缓动函数",paraId:5,tocIndex:1},{value:"Easing",paraId:5,tocIndex:1},{value:"enterFill",paraId:5,tocIndex:1},{value:"动画处于非运行状态时的展示效果",paraId:5,tocIndex:1},{value:"Fill",paraId:5,tocIndex:1},{value:"updateType",paraId:5,tocIndex:1},{value:"动画类型",paraId:5,tocIndex:1},{value:"Type",paraId:5,tocIndex:1},{value:"updateDuration",paraId:5,tocIndex:1},{value:"动画持续时间 (ms)",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"updateDelay",paraId:5,tocIndex:1},{value:"延迟执行时间 (ms)",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"updateEasing",paraId:5,tocIndex:1},{value:"动画的缓动函数",paraId:5,tocIndex:1},{value:"Easing",paraId:5,tocIndex:1},{value:"updateFill",paraId:5,tocIndex:1},{value:"动画处于非运行状态时的展示效果",paraId:5,tocIndex:1},{value:"Fill",paraId:5,tocIndex:1},{value:"exitType",paraId:5,tocIndex:1},{value:"动画类型",paraId:5,tocIndex:1},{value:"Type",paraId:5,tocIndex:1},{value:"exitDuration",paraId:5,tocIndex:1},{value:"动画持续时间 (ms)",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"exitDelay",paraId:5,tocIndex:1},{value:"延迟执行时间 (ms)",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"exitEasing",paraId:5,tocIndex:1},{value:"动画的缓动函数",paraId:5,tocIndex:1},{value:"Easing",paraId:5,tocIndex:1},{value:"exitFill",paraId:5,tocIndex:1},{value:"动画处于非运行状态时的展示效果",paraId:5,tocIndex:1},{value:"Fill",paraId:5,tocIndex:1},{value:"动画类型 ",paraId:6,tocIndex:2},{value:"Type",paraId:6,tocIndex:2},{value:" 本质是设置动画的方式，会影响的视觉属性。这里具体可以看对应的文档 ",paraId:6,tocIndex:2},{value:"Animation",paraId:7,tocIndex:2},{value:"。当然也可以设置为 ",paraId:6,tocIndex:2},{value:"null",paraId:6,tocIndex:2},{value:"，",paraId:6,tocIndex:2},{value:"undefined",paraId:6,tocIndex:2},{value:"，",paraId:6,tocIndex:2},{value:"false",paraId:6,tocIndex:2},{value:"，代表关闭动画。",paraId:6,tocIndex:2},{value:"缓动函数指定的是动画过程中，视觉属性变化的插值函数。支持以下内置缓动函数，来自 ",paraId:8,tocIndex:3},{value:"easings",paraId:8,tocIndex:3},{value:"，也可以上这个网站预览动画缓动的效果。",paraId:8,tocIndex:3},{value:"constant",paraId:9,tocIndex:3},{value:"accelerate",paraId:9,tocIndex:3},{value:"decelerate",paraId:9,tocIndex:3},{value:"accelerate-decelerate",paraId:9,tocIndex:3},{value:"decelerate-accelerate",paraId:9,tocIndex:3},{value:"linear",paraId:9,tocIndex:3},{value:"ease-in / in",paraId:9,tocIndex:3},{value:"ease-out / out",paraId:9,tocIndex:3},{value:"ease-in-out / in-out",paraId:9,tocIndex:3},{value:"ease-out-in / out-in",paraId:9,tocIndex:3},{value:"ease",paraId:9,tocIndex:3},{value:"in-sine",paraId:9,tocIndex:3},{value:"out-sine",paraId:9,tocIndex:3},{value:"in-out-sine",paraId:9,tocIndex:3},{value:"out-in-sine",paraId:9,tocIndex:3},{value:"steps",paraId:9,tocIndex:3},{value:"in-quad",paraId:9,tocIndex:3},{value:"out-quad",paraId:9,tocIndex:3},{value:"in-out-quad",paraId:9,tocIndex:3},{value:"out-in-quad",paraId:9,tocIndex:3},{value:"step-start",paraId:9,tocIndex:3},{value:"in-cubic",paraId:9,tocIndex:3},{value:"out-cubic",paraId:9,tocIndex:3},{value:"in-out-cubic",paraId:9,tocIndex:3},{value:"out-in-cubic",paraId:9,tocIndex:3},{value:"step-end",paraId:9,tocIndex:3},{value:"in-quart",paraId:9,tocIndex:3},{value:"out-quart",paraId:9,tocIndex:3},{value:"in-out-quart",paraId:9,tocIndex:3},{value:"out-in-quart",paraId:9,tocIndex:3},{value:"in-quint",paraId:9,tocIndex:3},{value:"out-quint",paraId:9,tocIndex:3},{value:"in-out-quint",paraId:9,tocIndex:3},{value:"out-in-quint",paraId:9,tocIndex:3},{value:"in-expo",paraId:9,tocIndex:3},{value:"out-expo",paraId:9,tocIndex:3},{value:"in-out-expo",paraId:9,tocIndex:3},{value:"out-in-expo",paraId:9,tocIndex:3},{value:"in-circ",paraId:9,tocIndex:3},{value:"out-circ",paraId:9,tocIndex:3},{value:"in-out-circ",paraId:9,tocIndex:3},{value:"out-in-circ",paraId:9,tocIndex:3},{value:"in-back",paraId:9,tocIndex:3},{value:"out-back",paraId:9,tocIndex:3},{value:"in-out-back",paraId:9,tocIndex:3},{value:"out-in-back",paraId:9,tocIndex:3},{value:"in-bounce",paraId:9,tocIndex:3},{value:"out-bounce",paraId:9,tocIndex:3},{value:"in-out-bounce",paraId:9,tocIndex:3},{value:"out-in-bounce",paraId:9,tocIndex:3},{value:"in-elastic",paraId:9,tocIndex:3},{value:"out-elastic",paraId:9,tocIndex:3},{value:"in-out-elastic",paraId:9,tocIndex:3},{value:"out-in-elastic",paraId:9,tocIndex:3},{value:"spring / spring-in",paraId:9,tocIndex:3},{value:"spring-out",paraId:9,tocIndex:3},{value:"spring-in-out",paraId:9,tocIndex:3},{value:"spring-out-in",paraId:9,tocIndex:3},{value:"除此之外，还可以通过 ",paraId:10,tocIndex:3},{value:"cubic-bezier(<number>, <number>, <number>, <number>)",paraId:10,tocIndex:3},{value:" 自定义形如三次贝塞尔曲线的函数。以上部分内置函数也是通过它定义完成的，例如 ",paraId:10,tocIndex:3},{value:"ease-in-sine = cubic-bezier(0.47, 0, 0.745, 0.715)",paraId:10,tocIndex:3},{value:"。",paraId:10,tocIndex:3},{value:"该属性规定了图形在动画处于非运行状态（例如动画开始前，结束后）时的展示效果，可以参考 ",paraId:11,tocIndex:4},{value:"WebAPI",paraId:11,tocIndex:4},{value:" 规范。支持以下值：",paraId:11,tocIndex:4},{value:"auto/none",paraId:12,tocIndex:4},{value:" - 默认值，这意味着动画在第一帧开始前和最后一帧结束后都不会影响到图形的展示效果。例如在动画完成后图形会恢复到动画前状态，如果设置了 delay 在延迟期间也不会应用第一帧的效果。",paraId:12,tocIndex:4},{value:"forwards",paraId:12,tocIndex:4},{value:" - 动画完成后停住，不恢复到初始状态",paraId:12,tocIndex:4},{value:"backwards",paraId:12,tocIndex:4},{value:" - 动画开始前应用第一帧效果",paraId:12,tocIndex:4},{value:"both",paraId:12,tocIndex:4},{value:" - 为 forwards 和 backwards 的组合效果",paraId:12,tocIndex:4}]},6661:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(7386);const n=[{value:"pathIn",paraId:0},{value:" 是 SVG Path 路径入场动画。通过影响 ",paraId:0},{value:"lineDash",paraId:0},{value:" 属性来实现。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'pathIn' } }\n  }\n",paraId:1,tocIndex:0}]},86979:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(48180);const n=[{value:"scaleInX",paraId:0},{value:" 单个图形沿着 x 方向的生长动画。影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'scaleInX' } }\n  }\n",paraId:1,tocIndex:0}]},2728:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(84121);const n=[{value:"scaleInY",paraId:0},{value:" 单个图形沿着 y 方向的生长动画。影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'scaleInY' } }\n  }\n",paraId:1,tocIndex:0}]},32567:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(122);const n=[{value:"scaleOutX",paraId:0},{value:" 单个图形沿着 x 方向的消失动画。影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'scaleOutX' } }\n  }\n",paraId:1,tocIndex:0}]},40766:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(65191);const n=[{value:"scaleOutY",paraId:0},{value:" 单个图形沿着 y 方向的消失动画。影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'scaleOutY' } }\n  }\n",paraId:1,tocIndex:0}]},93014:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(94106);const n=[{value:"waveIn",paraId:0},{value:" 划入入场动画效果，不同坐标系下效果不同。在直角坐标系下，影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性，在 polar 坐标系下，影响圆弧的 Path 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'waveIn' } }\n  }\n",paraId:1,tocIndex:0}]},65842:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(75203);const n=[{value:"zoomIn",paraId:0},{value:" 沿着图形中心点的放大动画。影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'zoomIn' } }\n  }\n",paraId:1,tocIndex:0}]},66822:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(79138);const n=[{value:"zoomOut",paraId:0},{value:" 沿着图形中心点的缩小动画。影响 ",paraId:0},{value:"transform.scale",paraId:0},{value:" 属性。",paraId:0},{value:"  const config = {\n    animate: { enter: { type: 'zoomOut' } }\n  }\n",paraId:1,tocIndex:0}]},68319:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(3189);const n=[{value:"Image",paraId:0},{value:" 标记和 ",paraId:0},{value:"Point",paraId:1},{value:" 标记很类似，都是以 ",paraId:0},{value:"x",paraId:0},{value:"，",paraId:0},{value:"y",paraId:0},{value:" 数据通道作为位置居中定位，区别在于 ",paraId:0},{value:"Image",paraId:0},{value:" 提供一个特殊的 ",paraId:0},{value:"src",paraId:0},{value:" 数据通道，来指定图片的远程地址或者 base64。",paraId:0},{value:"这里有一个简单的浏览器占比数据，我们对它进行可视化，便于看到不同浏览器的占比对比。",paraId:2,tocIndex:0},{value:'{\n  annotations: [\n    {\n      data: [\n        {\n          name: "Internet Explorer",\n          value: 26,\n          url: "https://gw.alipayobjects.com/zos/rmsportal/eOYRaLPOmkieVvjyjTzM.png",\n        },\n        {\n          name: "Chrome",\n          value: 40,\n          url: "https://gw.alipayobjects.com/zos/rmsportal/dWJWRLWfpOEbwCyxmZwu.png",\n        },\n      ],\n      type: "image",\n      xField: \'name\',\n      yField: \'value\',\n      srcField: \'url\',\n      scale: { x: { type: "band" }, y: { domain: [0, 50] } },\n    },\n  ]\n}\n',paraId:3,tocIndex:0},{value:"更多的案例，可以查看",paraId:4,tocIndex:0},{value:"图表示例",paraId:5,tocIndex:0},{value:"页面。",paraId:4,tocIndex:0},{value:"目前仅有一种同名的图形 ",paraId:6,tocIndex:1},{value:"image",paraId:6,tocIndex:1},{value:"，下面描述一下所有的 ",paraId:6,tocIndex:1},{value:"style",paraId:6,tocIndex:1},{value:" 配置项。",paraId:6,tocIndex:1},{value:"属性",paraId:7,tocIndex:2},{value:"描述",paraId:7,tocIndex:2},{value:"类型",paraId:7,tocIndex:2},{value:"默认值",paraId:7,tocIndex:2},{value:"fill",paraId:7,tocIndex:2},{value:"图形的填充色",paraId:7,tocIndex:2},{value:"string",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<string>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"fillOpacity",paraId:7,tocIndex:2},{value:"图形的填充透明度",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"stroke",paraId:7,tocIndex:2},{value:"图形的描边",paraId:7,tocIndex:2},{value:"string",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<string>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"strokeOpacity",paraId:7,tocIndex:2},{value:"描边透明度",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"lineWidth",paraId:7,tocIndex:2},{value:"图形描边的宽度",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"lineDash",paraId:7,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:7,tocIndex:2},{value:"[number,number]",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<[number, number]>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"opacity",paraId:7,tocIndex:2},{value:"图形的整体透明度",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"shadowColor",paraId:7,tocIndex:2},{value:"图形阴影颜色",paraId:7,tocIndex:2},{value:"string",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<string>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"shadowBlur",paraId:7,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"shadowOffsetX",paraId:7,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"shadowOffsetY",paraId:7,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:7,tocIndex:2},{value:"number",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<number>",paraId:7,tocIndex:2},{value:"-",paraId:7,tocIndex:2},{value:"cursor",paraId:7,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:7,tocIndex:2},{value:"string",paraId:7,tocIndex:2},{value:" | ",paraId:7,tocIndex:2},{value:"Function<string>",paraId:7,tocIndex:2},{value:"'default'",paraId:7,tocIndex:2},{value:"图片的 src 通道支持哪些数据类型？",paraId:8,tocIndex:3},{value:"最终的绘制都是调用 G 去渲染，所以支持的数据类型和 G 的原子 Image 图形保持一致，支持：",paraId:9,tocIndex:3},{value:"远程地址",paraId:9,tocIndex:3},{value:"、",paraId:9,tocIndex:3},{value:"base64",paraId:9,tocIndex:3},{value:"、",paraId:9,tocIndex:3},{value:"blob",paraId:9,tocIndex:3},{value:"、",paraId:9,tocIndex:3},{value:"file",paraId:9,tocIndex:3},{value:"。",paraId:9,tocIndex:3}]},61654:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(83521);const n=[{value:"指定 ",paraId:0},{value:"x",paraId:0},{value:" 通道来绘制垂直于 x 轴的辅助线，常用于绘制平均值或其他聚合数据辅助线。",paraId:0},{value:'/**\n * A recreation of this demo: https://vega.github.io/vega-lite/examples/layer_histogram_global_mean.html\n */\n{\n  annotations: [\n     {\n      type: "lineX",\n      xField: \'2023\',\n      style: { stroke: "#F4664A", strokeOpacity: 1, lineWidth: 5 },\n    },\n  ]\n}\n\n',paraId:1,tocIndex:0},{value:"更多的案例，可以查看",paraId:2,tocIndex:0},{value:"图表示例",paraId:3,tocIndex:0},{value:"页面。",paraId:2,tocIndex:0},{value:"目前 lineX 只有一种 ",paraId:4,tocIndex:1},{value:"line",paraId:4,tocIndex:1},{value:" 的 shape 图形。",paraId:4,tocIndex:1},{value:"属性",paraId:5,tocIndex:2},{value:"描述",paraId:5,tocIndex:2},{value:"类型",paraId:5,tocIndex:2},{value:"默认值",paraId:5,tocIndex:2},{value:"fill",paraId:5,tocIndex:2},{value:"图形的填充色",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"fillOpacity",paraId:5,tocIndex:2},{value:"图形的填充透明度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"stroke",paraId:5,tocIndex:2},{value:"图形的描边",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"strokeOpacity",paraId:5,tocIndex:2},{value:"描边透明度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"lineWidth",paraId:5,tocIndex:2},{value:"图形描边的宽度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"lineDash",paraId:5,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:5,tocIndex:2},{value:"[number,number]",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<[number, number]>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"opacity",paraId:5,tocIndex:2},{value:"图形的整体透明度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowColor",paraId:5,tocIndex:2},{value:"图形阴影颜色",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowBlur",paraId:5,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowOffsetX",paraId:5,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowOffsetY",paraId:5,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"cursor",paraId:5,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"'default'",paraId:5,tocIndex:2}]},63816:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(48793);const n=[{value:"指定 ",paraId:0},{value:"y",paraId:0},{value:" 通道来绘制垂直于 y 轴的辅助线，常用于绘制平均值或其他聚合数据辅助线。",paraId:0},{value:'/**\n * A recreation of this demo: https://vega.github.io/vega-lite/examples/layer_precipitation_mean.html\n */\n{\n  annotations: [\n     {\n      type: "lineY",\n      yField: 5,\n      style: { stroke: "#F4664A", strokeOpacity: 1, lineWidth: 5 },\n    },\n  ]\n}\n',paraId:1,tocIndex:0},{value:"更多的案例，可以查看",paraId:2,tocIndex:0},{value:"图表示例",paraId:3,tocIndex:0},{value:"页面。",paraId:2,tocIndex:0},{value:"目前 lineY 只有一种 ",paraId:4,tocIndex:1},{value:"line",paraId:4,tocIndex:1},{value:" 的 shape 图形。",paraId:4,tocIndex:1},{value:"属性",paraId:5,tocIndex:2},{value:"描述",paraId:5,tocIndex:2},{value:"类型",paraId:5,tocIndex:2},{value:"默认值",paraId:5,tocIndex:2},{value:"fill",paraId:5,tocIndex:2},{value:"图形的填充色",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"fillOpacity",paraId:5,tocIndex:2},{value:"图形的填充透明度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"stroke",paraId:5,tocIndex:2},{value:"图形的描边",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"strokeOpacity",paraId:5,tocIndex:2},{value:"描边透明度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"lineWidth",paraId:5,tocIndex:2},{value:"图形描边的宽度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"lineDash",paraId:5,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:5,tocIndex:2},{value:"[number,number]",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<[number, number]>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"opacity",paraId:5,tocIndex:2},{value:"图形的整体透明度",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowColor",paraId:5,tocIndex:2},{value:"图形阴影颜色",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowBlur",paraId:5,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowOffsetX",paraId:5,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"shadowOffsetY",paraId:5,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:5,tocIndex:2},{value:"number",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<number>",paraId:5,tocIndex:2},{value:"-",paraId:5,tocIndex:2},{value:"cursor",paraId:5,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:5,tocIndex:2},{value:"string",paraId:5,tocIndex:2},{value:" | ",paraId:5,tocIndex:2},{value:"Function<string>",paraId:5,tocIndex:2},{value:"'default'",paraId:5,tocIndex:2}]},86910:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(67668);const n=[{value:"使用一组 ",paraId:0},{value:"x",paraId:0},{value:"(x1, x2) 和一组 ",paraId:0},{value:"y",paraId:0},{value:"(y1, y2) 来定位一个矩形区域，常用于绘制辅助背景区域。",paraId:0},{value:'{\n  annotations: [\n    {\n      type: "range",\n      yField: \'y\',\n      xField: \'x\',\n      colorField: \'region\',\n      data: [\n        { x: [-25, 0], y: [-30, 0], region: "1" },\n        { x: [-25, 0], y: [0, 20], region: "2" },\n        { x: [0, 5], y: [-30, 0], region: "2" },\n        { x: [0, 5], y: [0, 20], region: "1" },\n      ],\n      scale: {\n        color: {\n          range: ["#d8d0c0", "#a3dda1"],\n          independent: true,\n          guide: null,\n        },\n      },\n      style: { fillOpacity: 0.2 },\n    }\n  ]\n}\n',paraId:1,tocIndex:0},{value:"更多的案例，可以查看",paraId:2,tocIndex:0},{value:"图表示例",paraId:3,tocIndex:0},{value:"页面。",paraId:2,tocIndex:0},{value:"属性",paraId:4,tocIndex:2},{value:"描述",paraId:4,tocIndex:2},{value:"类型",paraId:4,tocIndex:2},{value:"默认值",paraId:4,tocIndex:2},{value:"fill",paraId:4,tocIndex:2},{value:"图形的填充色",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"fillOpacity",paraId:4,tocIndex:2},{value:"图形的填充透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"stroke",paraId:4,tocIndex:2},{value:"图形的描边",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"strokeOpacity",paraId:4,tocIndex:2},{value:"描边透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"lineWidth",paraId:4,tocIndex:2},{value:"图形描边的宽度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"lineDash",paraId:4,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:4,tocIndex:2},{value:"[number,number]",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<[number, number]>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"opacity",paraId:4,tocIndex:2},{value:"图形的整体透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowColor",paraId:4,tocIndex:2},{value:"图形阴影颜色",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowBlur",paraId:4,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowOffsetX",paraId:4,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowOffsetY",paraId:4,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"cursor",paraId:4,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"'default'",paraId:4,tocIndex:2}]},55131:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(11273);const n=[{value:"使用一组 ",paraId:0},{value:"x",paraId:0},{value:"(x1, x2) 来定位一个绘制于 x 轴的矩形区域，常用于对特定区域进行高亮显示。",paraId:0},{value:'/**\n * A recreation of this demo: https://vega.github.io/vega-lite/examples/layer_falkensee.html\n */\n{\n  annotations: [\n    {\n      type: "rangeX",\n      data: [\n        {\n          year: ["1933-01-01T00:00:00.000Z", "1945-01-01T00:00:00.000Z"],\n          event: "Nazi Rule",\n        },\n        {\n          year: ["1948-01-01T00:00:00.000Z", "1989-01-01T00:00:00.000Z"],\n          event: "GDR (East Germany)",\n        },\n      ],\n      xField: \'year\',\n      yField: \'event\',\n      scale: { color: { independent: true, range: ["#FAAD14", "#30BF78"] } },\n      style: { fillOpacity: 0.75 },\n    }\n  ]\n}\n',paraId:1,tocIndex:0},{value:"更多的案例，可以查看",paraId:2,tocIndex:0},{value:"图表示例",paraId:3,tocIndex:0},{value:"页面。",paraId:2,tocIndex:0},{value:"属性",paraId:4,tocIndex:2},{value:"描述",paraId:4,tocIndex:2},{value:"类型",paraId:4,tocIndex:2},{value:"默认值",paraId:4,tocIndex:2},{value:"fill",paraId:4,tocIndex:2},{value:"图形的填充色",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"fillOpacity",paraId:4,tocIndex:2},{value:"图形的填充透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"stroke",paraId:4,tocIndex:2},{value:"图形的描边",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"strokeOpacity",paraId:4,tocIndex:2},{value:"描边透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"lineWidth",paraId:4,tocIndex:2},{value:"图形描边的宽度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"lineDash",paraId:4,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:4,tocIndex:2},{value:"[number,number]",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<[number, number]>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"opacity",paraId:4,tocIndex:2},{value:"图形的整体透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowColor",paraId:4,tocIndex:2},{value:"图形阴影颜色",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowBlur",paraId:4,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowOffsetX",paraId:4,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowOffsetY",paraId:4,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"cursor",paraId:4,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"'default'",paraId:4,tocIndex:2}]},33346:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(12298);const n=[{value:"使用一组 ",paraId:0},{value:"y",paraId:0},{value:"(y1, y2) 来定位一个绘制于 y 轴的矩形区域，常用于对特定区域进行高亮显示。",paraId:0},{value:"{\n  annotations: [\n    {\n      type: \"rangeY\", \n      data: [{ y: [54, 72] }],\n      yField: 'y',\n    }\n  ]\n}\n",paraId:1,tocIndex:0},{value:"更多的案例，可以查看",paraId:2,tocIndex:0},{value:"图表示例",paraId:3,tocIndex:0},{value:"页面。",paraId:2,tocIndex:0},{value:"属性",paraId:4,tocIndex:2},{value:"描述",paraId:4,tocIndex:2},{value:"类型",paraId:4,tocIndex:2},{value:"默认值",paraId:4,tocIndex:2},{value:"fill",paraId:4,tocIndex:2},{value:"图形的填充色",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"fillOpacity",paraId:4,tocIndex:2},{value:"图形的填充透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"stroke",paraId:4,tocIndex:2},{value:"图形的描边",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"strokeOpacity",paraId:4,tocIndex:2},{value:"描边透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"lineWidth",paraId:4,tocIndex:2},{value:"图形描边的宽度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"lineDash",paraId:4,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:4,tocIndex:2},{value:"[number,number]",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<[number, number]>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"opacity",paraId:4,tocIndex:2},{value:"图形的整体透明度",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowColor",paraId:4,tocIndex:2},{value:"图形阴影颜色",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowBlur",paraId:4,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowOffsetX",paraId:4,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"shadowOffsetY",paraId:4,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:4,tocIndex:2},{value:"number",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<number>",paraId:4,tocIndex:2},{value:"-",paraId:4,tocIndex:2},{value:"cursor",paraId:4,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:4,tocIndex:2},{value:"string",paraId:4,tocIndex:2},{value:" | ",paraId:4,tocIndex:2},{value:"Function<string>",paraId:4,tocIndex:2},{value:"'default'",paraId:4,tocIndex:2}]},87019:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(54030);const n=[{value:"通常用来在图表上绘制一个静态的自定义图形，灵活性非常高，当然技术成本也会高一些，需要了解 ",paraId:0},{value:"G",paraId:0},{value:" 的 API 去绘制图形。",paraId:0},{value:"上图中的「数据保密」的徽章图案就是使用 ",paraId:1,tocIndex:0},{value:"shape",paraId:1,tocIndex:0},{value:" 绘制。在绘制图形时，可以从图表上下文中获取 ",paraId:1,tocIndex:0},{value:"document",paraId:1,tocIndex:0},{value:" 对象，随后使用 ",paraId:1,tocIndex:0},{value:"document.createElement",paraId:1,tocIndex:0},{value:" 创建基础图形。在下面的示例中我们创建了一个 ",paraId:1,tocIndex:0},{value:"Circle",paraId:1,tocIndex:0},{value:"。",paraId:1,tocIndex:0},{value:"{\n  annotations: [\n    {\n      type: 'shape',\n      style: {\n        x: '80%',\n        y: '70%',\n        render: ({ x, y }, context, d) => {\n          const { document } = context;\n          const g = document.createElement('g', {});\n          const c1 = document.createElement('circle', {\n            style: {\n              cx: x,\n              cy: y,\n              lineWidth: 4,\n              r: 65,\n              stroke: 'red',\n              opacity: 0.3,\n            },\n          });\n          const c2 = document.createElement('circle', {\n            style: {\n              cx: x,\n              cy: y,\n              lineWidth: 2,\n              r: 50,\n              stroke: 'red',\n              opacity: 0.3,\n            },\n          });\n          const text = document.createElement('text', {\n            style: {\n              x,\n              y,\n              text: '数据保密',\n              transform: 'rotate(30)',\n              fontSize: 20,\n              fill: 'red',\n              textAlign: 'center',\n              textBaseline: 'middle',\n              fillOpacity: 0.3,\n            },\n          });\n          g.appendChild(c1);\n          g.appendChild(c2);\n          g.appendChild(text);\n          return g;\n        },\n      },\n    },\n  ],\n};\n",paraId:2,tocIndex:0},{value:"可以查看",paraId:3,tocIndex:0},{value:"图表徽章水印",paraId:4,tocIndex:0},{value:"具体示例。",paraId:3,tocIndex:0},{value:"属性",paraId:5,tocIndex:1},{value:"描述",paraId:5,tocIndex:1},{value:"类型",paraId:5,tocIndex:1},{value:"默认值",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"x",paraId:5,tocIndex:1},{value:"设置图形的位置 x，支持百分比（",paraId:5,tocIndex:1},{value:"'50%'",paraId:5,tocIndex:1},{value:"）和像素值（",paraId:5,tocIndex:1},{value:"200",paraId:5,tocIndex:1},{value:"）",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"y",paraId:5,tocIndex:1},{value:"设置图形的位置 y，支持百分比（",paraId:5,tocIndex:1},{value:"'50%'",paraId:5,tocIndex:1},{value:"）和像素值（",paraId:5,tocIndex:1},{value:"200",paraId:5,tocIndex:1},{value:"）",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"render",paraId:5,tocIndex:1},{value:"对应的自定义渲染函数，函数需要返回 G 的 DisplayObject",paraId:5,tocIndex:1},{value:"(style: object) => DisplayObject",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"{ ...rest }",paraId:5,tocIndex:1},{value:"自定义图形的额外参数，都会作为 ",paraId:5,tocIndex:1},{value:"render",paraId:5,tocIndex:1},{value:" 函数的第一个参数属性",paraId:5,tocIndex:1},{value:"object",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1}]},75576:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(53285);const n=[{value:"文字是传达信息最传统的方式，",paraId:0},{value:"Text",paraId:0},{value:" 标记具备有大量的视觉映射通道：",paraId:0},{value:"x",paraId:0},{value:"，",paraId:0},{value:"y",paraId:0},{value:"，",paraId:0},{value:"color",paraId:0},{value:"，",paraId:0},{value:"fontSize",paraId:0},{value:"，",paraId:0},{value:"rotate",paraId:0},{value:" 等，除此之外，还有大量的文本样式相关的配置，可以通过可视化映射的方式，让文本可视化具备有更强的表达性。一般用于几个场景：",paraId:0},{value:"文本可视化",paraId:1},{value:"数据的标注和辅助",paraId:1},{value:"绘制一个简单的柱形图，然后使用 ",paraId:2,tocIndex:0},{value:"Text",paraId:2,tocIndex:0},{value:" 标记去绘制数据标签，辅助看数。",paraId:2,tocIndex:0},{value:'/**\n * A recreation of this demo: https://observablehq.com/@d3/bar-chart\n */\n// single\n{\n  annotations: [\n    {\n      type: "text",\n      data: ["N", 0.08],\n      encode: { text: "frequency" },\n      style: { fill: "black", textAlign: "center", dy: -5 },\n    }\n  ]\n}\n// multi\n{\n  annotations: [\n    {\n      type: "text",\n      // Position mapping\n      xField: \'\',\n      yField: \'\',\n      // content mapping\n      text: \'\',\n      style: { fill: "black", textAlign: "center", dy: -5 },\n    }\n  ]\n}\n',paraId:3,tocIndex:0},{value:"更多的案例，可以查看",paraId:4,tocIndex:0},{value:"图表示例",paraId:5,tocIndex:0},{value:"页面。",paraId:4,tocIndex:0},{value:"目前 area 有以下几个内置的 shape 图形，默认为 text。",paraId:6,tocIndex:1},{value:"图形",paraId:7,tocIndex:1},{value:"描述",paraId:7,tocIndex:1},{value:"示例",paraId:7,tocIndex:1},{value:"text",paraId:7,tocIndex:1},{value:"绘制文本",paraId:7,tocIndex:1},{value:"badge",paraId:7,tocIndex:1},{value:"绘制带有标记的文本，形如一个气球",paraId:7,tocIndex:1},{value:"属性",paraId:8,tocIndex:2},{value:"描述",paraId:8,tocIndex:2},{value:"类型",paraId:8,tocIndex:2},{value:"默认值",paraId:8,tocIndex:2},{value:"fontSize",paraId:8,tocIndex:2},{value:"文字大小",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"fontFamily",paraId:8,tocIndex:2},{value:"文字字体",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"fontWeight",paraId:8,tocIndex:2},{value:"字体粗细",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"lineHeight",paraId:8,tocIndex:2},{value:"文字的行高",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"textAlign",paraId:8,tocIndex:2},{value:"设置文本内容的当前对齐方式, 支持的属性：",paraId:8,tocIndex:2},{value:"center",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"end",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"left",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"right",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"start",paraId:8,tocIndex:2},{value:"，默认值为",paraId:8,tocIndex:2},{value:"start",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"textBaseline",paraId:8,tocIndex:2},{value:"设置在绘制文本时使用的当前文本基线, 支持的属性:",paraId:8,tocIndex:2},{value:"top",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"middle",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"bottom",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"alphabetic",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"hanging",paraId:8,tocIndex:2},{value:"。默认值为",paraId:8,tocIndex:2},{value:"bottom",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"fill",paraId:8,tocIndex:2},{value:"图形的填充色",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"fillOpacity",paraId:8,tocIndex:2},{value:"图形的填充透明度",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"stroke",paraId:8,tocIndex:2},{value:"图形的描边",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"strokeOpacity",paraId:8,tocIndex:2},{value:"描边透明度",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"lineWidth",paraId:8,tocIndex:2},{value:"图形描边的宽度",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"lineDash",paraId:8,tocIndex:2},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:8,tocIndex:2},{value:"[number,number]",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<[number, number]>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"opacity",paraId:8,tocIndex:2},{value:"图形的整体透明度",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"shadowColor",paraId:8,tocIndex:2},{value:"图形阴影颜色",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"shadowBlur",paraId:8,tocIndex:2},{value:"图形阴影的高斯模糊系数",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"shadowOffsetX",paraId:8,tocIndex:2},{value:"设置阴影距图形的水平距离",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"shadowOffsetY",paraId:8,tocIndex:2},{value:"设置阴影距图形的垂直距离",paraId:8,tocIndex:2},{value:"number",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<number>",paraId:8,tocIndex:2},{value:"-",paraId:8,tocIndex:2},{value:"cursor",paraId:8,tocIndex:2},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:8,tocIndex:2},{value:"string",paraId:8,tocIndex:2},{value:" | ",paraId:8,tocIndex:2},{value:"Function<string>",paraId:8,tocIndex:2},{value:"'default'",paraId:8,tocIndex:2},{value:"除了 ",paraId:9,tocIndex:3},{value:"text",paraId:9,tocIndex:3},{value:" 的配置之外，还有以下配置。",paraId:9,tocIndex:3},{value:"属性",paraId:10,tocIndex:3},{value:"描述",paraId:10,tocIndex:3},{value:"类型",paraId:10,tocIndex:3},{value:"默认值",paraId:10,tocIndex:3},{value:"markerSize",paraId:10,tocIndex:3},{value:"标记大小",paraId:10,tocIndex:3},{value:"number",paraId:10,tocIndex:3},{value:"24",paraId:10,tocIndex:3},{value:"markerFill",paraId:10,tocIndex:3},{value:"标记填充色",paraId:10,tocIndex:3},{value:"string",paraId:10,tocIndex:3},{value:"markerFillOpacity",paraId:10,tocIndex:3},{value:"标记填充色透明度",paraId:10,tocIndex:3},{value:"number",paraId:10,tocIndex:3},{value:"markerStroke",paraId:10,tocIndex:3},{value:"标记描边色",paraId:10,tocIndex:3},{value:"string",paraId:10,tocIndex:3},{value:"markerStrokeOpacity",paraId:10,tocIndex:3},{value:"标记描边色 透明度",paraId:10,tocIndex:3},{value:"number",paraId:10,tocIndex:3},{value:"怎么指定箭头图标的长度？",paraId:11,tocIndex:4},{value:"有两种指定箭头图标长度的方式，一种是通过填写像素值，比如 ",paraId:12,tocIndex:4},{value:"40",paraId:12,tocIndex:4},{value:"，来指定为固定长度；另外一种是通过指定一个百分比，比如 ",paraId:12,tocIndex:4},{value:"30%",paraId:12,tocIndex:4},{value:"，来指定参考箭头长度的相对长度。默认值为 ",paraId:12,tocIndex:4},{value:"40%",paraId:12,tocIndex:4},{value:"。如下示例：",paraId:12,tocIndex:4},{value:"chart\n  .vector()\n  // ...\n  .shape('vector')\n  .style({\n    arrowSize: 40,\n    // arrowSize: '30%',\n  });\n",paraId:13,tocIndex:4}]},20759:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(72582);const n=[{value:"属性",paraId:0},{value:"描述",paraId:0},{value:"类型",paraId:0},{value:"默认值",paraId:0},{value:"title",paraId:0},{value:"关闭标题或设置标题内容",paraId:0},{value:"false",paraId:0},{value:"|",paraId:0},{value:"string",paraId:0},{value:"true",paraId:0},{value:"titleSpacing",paraId:0},{value:"标题到内容区域的间距",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"number[]",paraId:0},{value:"0",paraId:0},{value:"titleInset",paraId:0},{value:"标题文本内边距",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"number[]",paraId:0},{value:"0",paraId:0},{value:"titlePosition",paraId:0},{value:"标题所处位置。可采用简写形式，如",paraId:0},{value:"'i'",paraId:0},{value:" 表示",paraId:0},{value:"'inner'",paraId:0},{value:"'top'",paraId:0},{value:" | ",paraId:0},{value:"'bottom'",paraId:0},{value:" |",paraId:0},{value:"'left'",paraId:0},{value:" |",paraId:0},{value:"'right'",paraId:0},{value:" |",paraId:0},{value:"'left-top'",paraId:0},{value:" |",paraId:0},{value:"'left-bottom'",paraId:0},{value:" |",paraId:0},{value:"'right-top'",paraId:0},{value:" |",paraId:0},{value:"'right-bottom'",paraId:0},{value:" |",paraId:0},{value:"'inner'",paraId:0},{value:" | ",paraId:0},{value:"'lt'",paraId:0},{value:"-",paraId:0},{value:"titleFontSize",paraId:0},{value:"标题文字大小",paraId:0},{value:"number",paraId:0},{value:"-",paraId:0},{value:"titleFontFamily",paraId:0},{value:"标题文字字体",paraId:0},{value:"string",paraId:0},{value:"-",paraId:0},{value:"titleFontWeight",paraId:0},{value:"标题字体粗细",paraId:0},{value:"number",paraId:0},{value:"-",paraId:0},{value:"titleFill",paraId:0},{value:"标题字体颜色",paraId:0},{value:"string",paraId:0},{value:"titleFillOpacity",paraId:0},{value:"标题字体颜色透明度",paraId:0},{value:"number",paraId:0},{value:"titleStroke",paraId:0},{value:"标题字体描边颜色",paraId:0},{value:"string",paraId:0},{value:"-",paraId:0},{value:"titleStrokeOpacity",paraId:0},{value:"标题字体描边颜色透明度",paraId:0},{value:"number",paraId:0},{value:"-",paraId:0}]},30925:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(40413);const n=[{value:"属性",paraId:0},{value:"描述",paraId:0},{value:"类型",paraId:0},{value:"默认值",paraId:0},{value:"navEffect",paraId:0},{value:"翻页显示效果",paraId:0},{value:"参见 ",paraId:0},{value:"Web Animations API",paraId:0},{value:"linear",paraId:0},{value:"navDuration",paraId:0},{value:"单次翻页动效时长",paraId:0},{value:"number",paraId:0},{value:"200",paraId:0},{value:"navOrient",paraId:0},{value:"翻页滚动方向",paraId:0},{value:" - 横向",paraId:0},{value:"'horizontal'",paraId:0},{value:" - 纵向",paraId:0},{value:"'vertical'",paraId:0},{value:"'horizontal'",paraId:0},{value:"|",paraId:0},{value:"'vertical'",paraId:0},{value:"'horizontal'",paraId:0},{value:"navInitPage",paraId:0},{value:"默认展示页数",paraId:0},{value:"number",paraId:0},{value:"0",paraId:0},{value:"navLoop",paraId:0},{value:"是否启用循环翻页",paraId:0},{value:"boolean",paraId:0},{value:"false",paraId:0},{value:"navFormatter",paraId:0},{value:"页码文本格式化",paraId:0},{value:"(current: number, total: number) => string;",paraId:0},{value:"-",paraId:0}]},55722:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(66880);const n=[{value:"optional",paraId:0,tocIndex:2},{value:" ",paraId:0,tocIndex:2},{value:"number",paraId:0,tocIndex:2},{value:" ",paraId:0,tocIndex:2},{value:"default:",paraId:0,tocIndex:2},{value:" ",paraId:0,tocIndex:2},{value:"400",paraId:0,tocIndex:2},{value:"设置图表宽度。",paraId:1,tocIndex:2},{value:"optional",paraId:2,tocIndex:3},{value:" ",paraId:2,tocIndex:3},{value:"number",paraId:2,tocIndex:3},{value:" ",paraId:2,tocIndex:3},{value:"default:",paraId:2,tocIndex:3},{value:" ",paraId:2,tocIndex:3},{value:"400",paraId:2,tocIndex:3},{value:"设置图表高度。",paraId:3,tocIndex:3},{value:"optional",paraId:4,tocIndex:4},{value:" ",paraId:4,tocIndex:4},{value:"boolean",paraId:4,tocIndex:4},{value:" ",paraId:4,tocIndex:4},{value:"default:",paraId:4,tocIndex:4},{value:" ",paraId:4,tocIndex:4},{value:"true",paraId:4,tocIndex:4},{value:"图表是否自适应容器宽高。当 ",paraId:5,tocIndex:4},{value:"autoFit",paraId:5,tocIndex:4},{value:" 设置为 true 时，",paraId:5,tocIndex:4},{value:"width",paraId:5,tocIndex:4},{value:" 和 ",paraId:5,tocIndex:4},{value:"height",paraId:5,tocIndex:4},{value:" 的设置将失效。",paraId:5,tocIndex:4},{value:"optional",paraId:6,tocIndex:5},{value:" ",paraId:6,tocIndex:5},{value:"string",paraId:6,tocIndex:5},{value:" ",paraId:6,tocIndex:5},{value:"default:",paraId:6,tocIndex:5},{value:" ",paraId:6,tocIndex:5},{value:"canvas",paraId:6,tocIndex:5},{value:"设置图表渲染方式为 ",paraId:7,tocIndex:5},{value:"canvas",paraId:7,tocIndex:5},{value:" 或 ",paraId:7,tocIndex:5},{value:"svg",paraId:7,tocIndex:5},{value:"，默认值无需指定，当要使用 svg 模式时，可以如下配置",paraId:7,tocIndex:5},{value:"// import { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\n\nconst config = {\n  renderer: new SVGRenderer()\n}\n",paraId:8,tocIndex:5},{value:"G2 中的视图模型定义了一个视图的划分方式，划分得到的不同区域会绘制不同的东西，也通过不同的选项去设置。现在可以简单的把视图理解为一个图表。G2 的视图模型如下：",paraId:9,tocIndex:6},{value:"视图区域（View Area）",paraId:10,tocIndex:6},{value:"：上图中蓝色 + 橙色 + 红色 + 青色部分，其中蓝色部分被称为",paraId:10,tocIndex:6},{value:"外边距区域",paraId:10,tocIndex:6},{value:"，主要用于固定组件（坐标轴、图例等）到边界的距离。",paraId:10,tocIndex:6},{value:"绘制区域（Plot Area）",paraId:10,tocIndex:6},{value:"：上图中橙色 + 红色 + 青色部分，橙色部分被称为",paraId:10,tocIndex:6},{value:"内边距区域",paraId:10,tocIndex:6},{value:"，该区域用于绘制组件。",paraId:10,tocIndex:6},{value:"主区域（Main Area）",paraId:10,tocIndex:6},{value:"：上图中红色 + 青色部分，其中红色部分被称为",paraId:10,tocIndex:6},{value:"呼吸区域",paraId:10,tocIndex:6},{value:"，用于制造组件和标记（图形元素）的间距，从而防止重叠，对于散点图尤其有用。",paraId:10,tocIndex:6},{value:"内容区域（Content Area）",paraId:10,tocIndex:6},{value:"：上图中青色部分，主要用于绘制标记（图形元素）。",paraId:10,tocIndex:6},{value:"可以通过如下的配置设置各个区域的大小：",paraId:11,tocIndex:6},{value:"margin",paraId:12,tocIndex:6},{value:" - 设置外边距四个方向的值，优先级别比分别设置低",paraId:12,tocIndex:6},{value:"marginLeft",paraId:12,tocIndex:6},{value:" - 设置左外边距",paraId:12,tocIndex:6},{value:"marginTop",paraId:12,tocIndex:6},{value:" - 设置上外边距",paraId:12,tocIndex:6},{value:"marginRight",paraId:12,tocIndex:6},{value:" - 设置右外边距值",paraId:12,tocIndex:6},{value:"marginBottom",paraId:12,tocIndex:6},{value:" - 设置下外边距值",paraId:12,tocIndex:6},{value:"padding",paraId:12,tocIndex:6},{value:" - 设置内边距四个方向的值，优先级别比分别设置低",paraId:12,tocIndex:6},{value:"paddingLeft",paraId:12,tocIndex:6},{value:" - 设置左内边距",paraId:12,tocIndex:6},{value:"paddingTop",paraId:12,tocIndex:6},{value:" - 设置上内边距",paraId:12,tocIndex:6},{value:"paddingRight",paraId:12,tocIndex:6},{value:" - 设置右内边距",paraId:12,tocIndex:6},{value:"paddingBottom",paraId:12,tocIndex:6},{value:" - 设置下内边距",paraId:12,tocIndex:6},{value:"inset",paraId:12,tocIndex:6},{value:" - 设置呼吸区域四个方向的值，优先级别比分别设置低",paraId:12,tocIndex:6},{value:"insetLeft",paraId:12,tocIndex:6},{value:" - 设置左呼吸区域",paraId:12,tocIndex:6},{value:"insetTop",paraId:12,tocIndex:6},{value:" - 设置上呼吸区域",paraId:12,tocIndex:6},{value:"insetRight",paraId:12,tocIndex:6},{value:" - 设置右呼吸区域",paraId:12,tocIndex:6},{value:"insetBottom",paraId:12,tocIndex:6},{value:" - 设置下呼吸区域",paraId:12,tocIndex:6},{value:"其中内容区域的大小由以下的公式得到：",paraId:13,tocIndex:6},{value:"const contentWidth =\n  width -\n  paddingLeft -\n  paddingRight -\n  marginLeft -\n  marginRight -\n  insetLeft -\n  insetRight;\n\nconst contentHeight =\n  height -\n  paddingTop -\n  paddingBottom -\n  marginTop -\n  marginBottom -\n  insetTop -\n  insetBottom;\n",paraId:14,tocIndex:6},{value:"required",paraId:15,tocIndex:8},{value:" ",paraId:15,tocIndex:8},{value:"array object",paraId:15,tocIndex:8},{value:"设置图表数据源。数据源为对象集合，例如：",paraId:16,tocIndex:8},{value:"[{ time: '1991'，value: 20 }, { time: '1992'，value: 20 }]",paraId:16,tocIndex:8},{value:"。",paraId:16,tocIndex:8},{value:"required",paraId:17,tocIndex:9},{value:" ",paraId:17,tocIndex:9},{value:"string",paraId:17,tocIndex:9},{value:"图形在 x 方向对应的数据字段名，一般是横向的坐标轴对应的字段。比如：要看不同班级的人数情况，那么班级字段就是对应的 xField。",paraId:18,tocIndex:9},{value:"required",paraId:19,tocIndex:10},{value:" ",paraId:19,tocIndex:10},{value:"string",paraId:19,tocIndex:10},{value:"图形在 y 方向对应的数据字段名，一般是纵向的坐标轴对应的字段。比如：要看不同班级的人数情况，那么人数字段就是对应的 yField。",paraId:20,tocIndex:10},{value:"optional",paraId:21,tocIndex:11},{value:" ",paraId:21,tocIndex:11},{value:"string",paraId:21,tocIndex:11},{value:"分组字段。比如：我们需要分析不同",paraId:22,tocIndex:11},{value:"省份",paraId:22,tocIndex:11},{value:"的交易额趋势，那么",paraId:22,tocIndex:11},{value:"省份字段",paraId:22,tocIndex:11},{value:"就是分组字段。",paraId:22,tocIndex:11},{value:"optional",paraId:23,tocIndex:13},{value:" ",paraId:23,tocIndex:13},{value:"string",paraId:23,tocIndex:13},{value:" ",paraId:23,tocIndex:13},{value:"指定 line 是否平滑，点图形状等",paraId:24,tocIndex:13},{value:"optional",paraId:25,tocIndex:14},{value:" ",paraId:25,tocIndex:14},{value:"string",paraId:25,tocIndex:14},{value:" ",paraId:25,tocIndex:14},{value:"指定颜色通道字段",paraId:26,tocIndex:14},{value:"optional",paraId:27,tocIndex:15},{value:" ",paraId:27,tocIndex:15},{value:"string",paraId:27,tocIndex:15},{value:" ",paraId:27,tocIndex:15},{value:"指定尺寸通道字段",paraId:28,tocIndex:15},{value:"optional",paraId:29,tocIndex:16},{value:" ",paraId:29,tocIndex:16},{value:"boolean | StackYTransform",paraId:29,tocIndex:16},{value:"是否堆积",paraId:30,tocIndex:16},{value:"type StackYTransform = {\n  groupBy?: string | string[];\n  reverse?: boolean;\n  orderBy?: TransformOrder;\n  y?: 'y' | 'y1';\n  y1?: 'y' | 'y1';\n  series?: boolean;\n};\n",paraId:31,tocIndex:16},{value:"optional",paraId:32,tocIndex:17},{value:" ",paraId:32,tocIndex:17},{value:"boolean | NormalizeYTransform",paraId:32,tocIndex:17},{value:"数值归一化",paraId:33,tocIndex:17},{value:"type NormalizeYTransform = {\n  series?: boolean;\n  groupBy?: string | string[];\n  basis?: 'deviation' | 'first' | 'last' | 'max' | 'mean' | 'median' | 'min' | 'sum';\n};\n",paraId:34,tocIndex:17},{value:"optional",paraId:35,tocIndex:18},{value:" ",paraId:35,tocIndex:18},{value:"boolean | SortByTransform",paraId:35,tocIndex:18},{value:"排序",paraId:36,tocIndex:18},{value:"type SortByTransform = {\n  /** type: [field, order]; order: true => ascend, false => descend */\n  fields?: (string | [string, boolean?])[];\n};\n",paraId:37,tocIndex:18},{value:"optional",paraId:38,tocIndex:19},{value:" ",paraId:38,tocIndex:19},{value:"boolean | DodgeXTransform",paraId:38,tocIndex:19},{value:"分组",paraId:39,tocIndex:19},{value:"type DodgeXTransform = {\n  groupBy?: string | string[];\n  reverse?: boolean;\n  orderBy?: TransformOrder;\n  padding?: number;\n};\n",paraId:40,tocIndex:19},{value:"optional",paraId:41,tocIndex:20},{value:" ",paraId:41,tocIndex:20},{value:"boolean",paraId:41,tocIndex:20},{value:" ",paraId:41,tocIndex:20},{value:"default:",paraId:41,tocIndex:20},{value:" ",paraId:41,tocIndex:20},{value:"true",paraId:41,tocIndex:20},{value:"是否百分比面积图，百分比时默认开启 isStack。",paraId:42,tocIndex:20},{value:"optional",paraId:43,tocIndex:21},{value:" ",paraId:43,tocIndex:21},{value:"Line",paraId:43,tocIndex:21},{value:"线条，一般用于面积图中添加线条",paraId:44,tocIndex:21},{value:"optional",paraId:45,tocIndex:22},{value:" ",paraId:45,tocIndex:22},{value:"Point",paraId:45,tocIndex:22},{value:"点图形样式，一般用于 Line 中添加对应 Mark",paraId:46,tocIndex:22},{value:"可选",paraId:47,tocIndex:23},{value:" ",paraId:47,tocIndex:23},{value:"object",paraId:47,tocIndex:23},{value:"设置 Mark 对应状态的样式，常配合 Interaction 一起使用，有：",paraId:48,tocIndex:23},{value:"'default' | 'active' | 'inactive' | 'selected' | 'unselected'",paraId:48,tocIndex:23},{value:" 等状态。",paraId:48,tocIndex:23},{value:"示例：",paraId:49,tocIndex:23},{value:"{\n  state: {\n    inactive: { opacity: 0.5 },\n    active: { fill: 'red', linkFillOpacity: 0.5 }\n  },\n  interaction: {\n    elementHighlightByColor: {\n      link: true\n    }\n  }\n}\n",paraId:50,tocIndex:23},{value:"绘制坐标轴，目前支持直角坐标系坐标轴与极坐标系坐标轴。",paraId:51,tocIndex:24},{value:"const config = {\n  axis: {\n    x: {},\n    y: {},\n  },\n}\n",paraId:52,tocIndex:24},{value:"属性",paraId:53,tocIndex:26},{value:"描述",paraId:53,tocIndex:26},{value:"类型",paraId:53,tocIndex:26},{value:"默认值",paraId:53,tocIndex:26},{value:"title",paraId:53,tocIndex:26},{value:"关闭标题或设置标题内容",paraId:53,tocIndex:26},{value:"false",paraId:53,tocIndex:26},{value:"|",paraId:53,tocIndex:26},{value:"string",paraId:53,tocIndex:26},{value:" | ",paraId:53,tocIndex:26},{value:"number",paraId:53,tocIndex:26},{value:" | ",paraId:53,tocIndex:26},{value:"DisplayObject",paraId:53,tocIndex:26},{value:"-",paraId:53,tocIndex:26},{value:"titleSpacing",paraId:53,tocIndex:26},{value:"标题到坐标轴的距离",paraId:53,tocIndex:26},{value:"number",paraId:53,tocIndex:26},{value:"10",paraId:53,tocIndex:26},{value:"titlePosition",paraId:53,tocIndex:26},{value:"标题相对坐标轴的位置，支持首字母简写形式，如",paraId:53,tocIndex:26},{value:"'top'",paraId:53,tocIndex:26},{value:"简写为",paraId:53,tocIndex:26},{value:"'t'",paraId:53,tocIndex:26},{value:"'top'",paraId:53,tocIndex:26},{value:"|",paraId:53,tocIndex:26},{value:"'bottom'",paraId:53,tocIndex:26},{value:"|",paraId:53,tocIndex:26},{value:"'left'",paraId:53,tocIndex:26},{value:"|",paraId:53,tocIndex:26},{value:"'right'",paraId:53,tocIndex:26},{value:"'lb'",paraId:53,tocIndex:26},{value:"titleFontSize",paraId:53,tocIndex:26},{value:"标题文字大小",paraId:53,tocIndex:26},{value:"number",paraId:53,tocIndex:26},{value:"-",paraId:53,tocIndex:26},{value:"titleFontFamily",paraId:53,tocIndex:26},{value:"标题文字字体",paraId:53,tocIndex:26},{value:"string",paraId:53,tocIndex:26},{value:"-",paraId:53,tocIndex:26},{value:"titleFontWeight",paraId:53,tocIndex:26},{value:"标题字体粗细",paraId:53,tocIndex:26},{value:"number",paraId:53,tocIndex:26},{value:"-",paraId:53,tocIndex:26},{value:"titleStroke",paraId:53,tocIndex:26},{value:"标题字体颜色",paraId:53,tocIndex:26},{value:"string",paraId:53,tocIndex:26},{value:"-",paraId:53,tocIndex:26},{value:"titleStrokeOpacity",paraId:53,tocIndex:26},{value:"标题透明度",paraId:53,tocIndex:26},{value:"number",paraId:53,tocIndex:26},{value:"-",paraId:53,tocIndex:26},{value:"属性",paraId:54,tocIndex:27},{value:"描述",paraId:54,tocIndex:27},{value:"类型",paraId:54,tocIndex:27},{value:"默认值",paraId:54,tocIndex:27},{value:"line",paraId:54,tocIndex:27},{value:"是否显示轴线",paraId:54,tocIndex:27},{value:"boolean",paraId:54,tocIndex:27},{value:"true",paraId:54,tocIndex:27},{value:"arrow",paraId:54,tocIndex:27},{value:"是否显示箭头",paraId:54,tocIndex:27},{value:"boolean",paraId:54,tocIndex:27},{value:"true",paraId:54,tocIndex:27},{value:"lineExtension",paraId:54,tocIndex:27},{value:"轴线两侧的延长线",paraId:54,tocIndex:27},{value:"[number, number]",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"lineArrow",paraId:54,tocIndex:27},{value:"定义轴线箭头形状，默认为箭头形状",paraId:54,tocIndex:27},{value:"DisplayObject",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"lineArrowOffset",paraId:54,tocIndex:27},{value:"箭头偏移长度",paraId:54,tocIndex:27},{value:"number",paraId:54,tocIndex:27},{value:"15",paraId:54,tocIndex:27},{value:"lineArrowSize",paraId:54,tocIndex:27},{value:"箭头尺寸",paraId:54,tocIndex:27},{value:"number",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"lineLineWidth",paraId:54,tocIndex:27},{value:"轴线宽度",paraId:54,tocIndex:27},{value:"number",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"lineLineDash",paraId:54,tocIndex:27},{value:"轴线描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:54,tocIndex:27},{value:"[number,number]",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"lineStroke",paraId:54,tocIndex:27},{value:"轴线描边色",paraId:54,tocIndex:27},{value:"string",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"lineStrokeOpacity",paraId:54,tocIndex:27},{value:"轴线描边色透明度",paraId:54,tocIndex:27},{value:"number",paraId:54,tocIndex:27},{value:"-",paraId:54,tocIndex:27},{value:"属性",paraId:55,tocIndex:28},{value:"描述",paraId:55,tocIndex:28},{value:"类型",paraId:55,tocIndex:28},{value:"默认值",paraId:55,tocIndex:28},{value:"tick",paraId:55,tocIndex:28},{value:"是否显示刻度",paraId:55,tocIndex:28},{value:"boolean",paraId:55,tocIndex:28},{value:"true",paraId:55,tocIndex:28},{value:"tickFilter",paraId:55,tocIndex:28},{value:"刻度线过滤",paraId:55,tocIndex:28},{value:"(datum, index, data)=>boolean",paraId:55,tocIndex:28},{value:"-",paraId:55,tocIndex:28},{value:"tickFormatter",paraId:55,tocIndex:28},{value:"刻度线格式化，可用于自定义刻度样式，回调函数中会额外返回该刻度的方向",paraId:55,tocIndex:28},{value:"DisplayObject",paraId:55,tocIndex:28},{value:" | ",paraId:55,tocIndex:28},{value:"(datum, index, data, Vector)=> DisplayObject",paraId:55,tocIndex:28},{value:"-",paraId:55,tocIndex:28},{value:"tickDirection",paraId:55,tocIndex:28},{value:"刻度朝向，为 ",paraId:55,tocIndex:28},{value:"positive",paraId:55,tocIndex:28},{value:" 时，位于侧轴方向（即主轴顺时针 90 度方向）, 为 ",paraId:55,tocIndex:28},{value:"negative",paraId:55,tocIndex:28},{value:" 时，刻度位于侧轴负方向",paraId:55,tocIndex:28},{value:"'positive'",paraId:55,tocIndex:28},{value:" | ",paraId:55,tocIndex:28},{value:"'negative'",paraId:55,tocIndex:28},{value:"'positive'",paraId:55,tocIndex:28},{value:"tickLength",paraId:55,tocIndex:28},{value:"轴线长度",paraId:55,tocIndex:28},{value:"number",paraId:55,tocIndex:28},{value:"|",paraId:55,tocIndex:28},{value:"(datum, index, data)=>number",paraId:55,tocIndex:28},{value:"15",paraId:55,tocIndex:28},{value:"tickLineWidth",paraId:55,tocIndex:28},{value:"刻度线宽度",paraId:55,tocIndex:28},{value:"number",paraId:55,tocIndex:28},{value:" | ",paraId:55,tocIndex:28},{value:"(datum, index, data, Vector)=>number",paraId:55,tocIndex:28},{value:"-",paraId:55,tocIndex:28},{value:"tickLineDash",paraId:55,tocIndex:28},{value:"刻度线描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:55,tocIndex:28},{value:"[number,number]",paraId:55,tocIndex:28},{value:" | ",paraId:55,tocIndex:28},{value:"(datum, index, data, Vector)=>[number,number]",paraId:55,tocIndex:28},{value:"-",paraId:55,tocIndex:28},{value:"tickStroke",paraId:55,tocIndex:28},{value:"刻度线颜色",paraId:55,tocIndex:28},{value:"string",paraId:55,tocIndex:28},{value:" | ",paraId:55,tocIndex:28},{value:"(datum, index, data, Vector)=>string",paraId:55,tocIndex:28},{value:"-",paraId:55,tocIndex:28},{value:"tickStrokeOpacity",paraId:55,tocIndex:28},{value:"刻度线透明度",paraId:55,tocIndex:28},{value:"number",paraId:55,tocIndex:28},{value:" | ",paraId:55,tocIndex:28},{value:"(datum, index, data, Vector)=>number",paraId:55,tocIndex:28},{value:"-",paraId:55,tocIndex:28},{value:"属性",paraId:56,tocIndex:29},{value:"描述",paraId:56,tocIndex:29},{value:"类型",paraId:56,tocIndex:29},{value:"默认值",paraId:56,tocIndex:29},{value:"label",paraId:56,tocIndex:29},{value:"是否显示刻度值",paraId:56,tocIndex:29},{value:"boolean",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFilter",paraId:56,tocIndex:29},{value:"刻度值过滤",paraId:56,tocIndex:29},{value:"(datum, index, data)=> boolean",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFormatter",paraId:56,tocIndex:29},{value:"刻度值线格式化",paraId:56,tocIndex:29},{value:"DisplayObject",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data, Vector)=> DisplayObject",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"transform",paraId:56,tocIndex:29},{value:"刻度值转换，避免文本之间发生重叠。当前支持超长文本缩略、重叠刻度值隐藏、自动旋转",paraId:56,tocIndex:29},{value:"Transform[]",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelAutoHide",paraId:56,tocIndex:29},{value:"自动隐藏重叠的刻度值，设置 size 值的时候生效",paraId:56,tocIndex:29},{value:"boolean",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"HideOverlapCfg",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelAutoRotate",paraId:56,tocIndex:29},{value:"自动旋转刻度，设置 size 值的时候生效值",paraId:56,tocIndex:29},{value:"boolean",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"RotateOverlapCfg",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelAutoEllipsis",paraId:56,tocIndex:29},{value:"自动缩略刻度值，设置 size 值的时候生效",paraId:56,tocIndex:29},{value:"boolean",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"EllipsisOverlapCfg",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelAutoWrap",paraId:56,tocIndex:29},{value:"自动换行刻度值，设置 size 值的时候是生效",paraId:56,tocIndex:29},{value:"boolean",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"WrapOverlapCfg",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelAlign",paraId:56,tocIndex:29},{value:"刻度值对齐方式",paraId:56,tocIndex:29},{value:"- 'horizontal' 始终保持水平",paraId:56,tocIndex:29},{value:" - 'parallel' 平行于坐标轴",paraId:56,tocIndex:29},{value:" - 'perpendicular' 垂直于坐标轴",paraId:56,tocIndex:29},{value:"'horizontal'",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"'parallel'",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"'perpendicular'",paraId:56,tocIndex:29},{value:"'parallel'",paraId:56,tocIndex:29},{value:"labelDirection",paraId:56,tocIndex:29},{value:"刻度值位于轴线的位置，参考",paraId:56,tocIndex:29},{value:"tickDirection",paraId:56,tocIndex:29},{value:"'positive'",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"'negative'",paraId:56,tocIndex:29},{value:"'positive'",paraId:56,tocIndex:29},{value:"labelSpacing",paraId:56,tocIndex:29},{value:"刻度值到其对应刻度的间距",paraId:56,tocIndex:29},{value:"number",paraId:56,tocIndex:29},{value:"0",paraId:56,tocIndex:29},{value:"labelLineWidth",paraId:56,tocIndex:29},{value:"刻度值宽度",paraId:56,tocIndex:29},{value:"number",paraId:56,tocIndex:29},{value:" |",paraId:56,tocIndex:29},{value:"(datum, index, data)=>number",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelLineDash",paraId:56,tocIndex:29},{value:"刻度值描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:56,tocIndex:29},{value:"[number,number]",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>[number, number]",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFontSize",paraId:56,tocIndex:29},{value:"刻度值文字大小",paraId:56,tocIndex:29},{value:"number",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>number",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFontFamily",paraId:56,tocIndex:29},{value:"刻度值文字字体",paraId:56,tocIndex:29},{value:"string",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>string",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFontWeight",paraId:56,tocIndex:29},{value:"刻度值字体粗细",paraId:56,tocIndex:29},{value:"number",paraId:56,tocIndex:29},{value:" |",paraId:56,tocIndex:29},{value:"(datum, index, data)=>number",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFill",paraId:56,tocIndex:29},{value:"刻度值字体颜色",paraId:56,tocIndex:29},{value:"string",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>string",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelFillOpacity",paraId:56,tocIndex:29},{value:"刻度值文本透明度",paraId:56,tocIndex:29},{value:"number",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>number",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelStroke",paraId:56,tocIndex:29},{value:"刻度值文本描边颜色",paraId:56,tocIndex:29},{value:"string",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>string",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"labelStrokeOpacity",paraId:56,tocIndex:29},{value:"刻度值文本描边透明度",paraId:56,tocIndex:29},{value:"number",paraId:56,tocIndex:29},{value:" | ",paraId:56,tocIndex:29},{value:"(datum, index, data)=>number",paraId:56,tocIndex:29},{value:"-",paraId:56,tocIndex:29},{value:"export interface Transform {\n  /** 避免刻度值重叠时的额外边距 */\n  margin?: number[];\n}\n\nexport interface EllipsisOverlapCfg extends Transform {\n  type: 'ellipsis';\n  /** 缩略替换字符，默认为 ... */\n  suffix?: string;\n  /** 文本短于该长度时不再缩略 */\n  minLength: string | number;\n  /** 文本短于该长度时一定会进行缩略 */\n  maxLength?: string | number;\n  /** 每次缩略执行步长 */\n  step?: string | number;\n}\n\nexport interface RotateOverlapCfg extends Transform {\n  type: 'rotate';\n  /** 可选的旋转角度值 */\n  optionalAngles: number[];\n  /** 当旋转无法避免重叠时，是否恢复为默认旋转角度 */\n  recoverWhenFailed?: boolean;\n}\n\nexport interface HideOverlapCfg extends Transform {\n  type: 'hide';\n  /** 保证第一个刻度值不被隐藏 */\n  keepHeader?: boolean;\n  /** 保证最后一个刻度值不被隐藏 */\n  keepTail?: boolean;\n}\n\nexport interface WrapOverlapCfg extends Transform {\n  type: 'wrap';\n  /** 单行最大宽度 */\n  wordWrapWidth?: number;\n  /** 最大行数 */\n  maxLines?: number;\n  recoverWhenFailed?: boolean;\n}\n",paraId:57,tocIndex:29},{value:"在不同坐标系下网格线会具有不同的样式",paraId:58,tocIndex:30},{value:"场景标签",paraId:59,tocIndex:30},{value:"样式",paraId:59,tocIndex:30},{value:"直角坐标系",paraId:59,tocIndex:30},{value:"极坐标系",paraId:59,tocIndex:30},{value:"极坐标系",paraId:59,tocIndex:30},{value:"极坐标系",paraId:59,tocIndex:30},{value:" ",paraId:59,tocIndex:30},{value:"雷达图",paraId:59,tocIndex:30},{value:"属性",paraId:60,tocIndex:30},{value:"描述",paraId:60,tocIndex:30},{value:"类型",paraId:60,tocIndex:30},{value:"默认值",paraId:60,tocIndex:30},{value:"grid",paraId:60,tocIndex:30},{value:"是否显示网格线",paraId:60,tocIndex:30},{value:"boolean",paraId:60,tocIndex:30},{value:"false",paraId:60,tocIndex:30},{value:"gridFilter",paraId:60,tocIndex:30},{value:"网格线过滤",paraId:60,tocIndex:30},{value:"(datum, index, data)=> boolean",paraId:60,tocIndex:30},{value:"-",paraId:60,tocIndex:30},{value:"gridLength",paraId:60,tocIndex:30},{value:"网格线长度。一般情况下，不需要用户配置。",paraId:60,tocIndex:30},{value:"number",paraId:60,tocIndex:30},{value:" | ",paraId:60,tocIndex:30},{value:"(datum, index, data)=> number",paraId:60,tocIndex:30},{value:"0",paraId:60,tocIndex:30},{value:"gridAreaFill",paraId:60,tocIndex:30},{value:"网格线区域颜色",paraId:60,tocIndex:30},{value:"string",paraId:60,tocIndex:30},{value:" | ",paraId:60,tocIndex:30},{value:"string[]",paraId:60,tocIndex:30},{value:"| ",paraId:60,tocIndex:30},{value:"(datum, index, data)=> string",paraId:60,tocIndex:30},{value:"-",paraId:60,tocIndex:30},{value:"gridLineWidth",paraId:60,tocIndex:30},{value:"网格线宽度",paraId:60,tocIndex:30},{value:"number",paraId:60,tocIndex:30},{value:"-",paraId:60,tocIndex:30},{value:"gridLineDash",paraId:60,tocIndex:30},{value:"网格线描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:60,tocIndex:30},{value:"[number,number]",paraId:60,tocIndex:30},{value:"-",paraId:60,tocIndex:30},{value:"gridStroke",paraId:60,tocIndex:30},{value:"网格线颜色",paraId:60,tocIndex:30},{value:"string",paraId:60,tocIndex:30},{value:"-",paraId:60,tocIndex:30},{value:"gridStrokeOpacity",paraId:60,tocIndex:30},{value:"网格线透明度",paraId:60,tocIndex:30},{value:"number",paraId:60,tocIndex:30},{value:"-",paraId:60,tocIndex:30},{value:"支持设置更新时的动画效果",paraId:61,tocIndex:31},{value:"属性",paraId:62,tocIndex:31},{value:"描述",paraId:62,tocIndex:31},{value:"类型",paraId:62,tocIndex:31},{value:"默认值",paraId:62,tocIndex:31},{value:"animate",paraId:62,tocIndex:31},{value:"是否开启动画",paraId:62,tocIndex:31},{value:"boolean",paraId:62,tocIndex:31},{value:" | ",paraId:62,tocIndex:31},{value:"EffectTiming",paraId:62,tocIndex:31},{value:"-",paraId:62,tocIndex:31},{value:"EffectTiming 支持配置的属性如下：",paraId:63,tocIndex:31},{value:"属性",paraId:64,tocIndex:31},{value:"描述",paraId:64,tocIndex:31},{value:"类型",paraId:64,tocIndex:31},{value:"默认值",paraId:64,tocIndex:31},{value:"delay",paraId:64,tocIndex:31},{value:"延迟执行时间 (ms)",paraId:64,tocIndex:31},{value:"number",paraId:64,tocIndex:31},{value:"-",paraId:64,tocIndex:31},{value:"duration",paraId:64,tocIndex:31},{value:"动画持续时间 (ms)",paraId:64,tocIndex:31},{value:"number",paraId:64,tocIndex:31},{value:"-",paraId:64,tocIndex:31},{value:"easing",paraId:64,tocIndex:31},{value:"动画的缓动函数",paraId:64,tocIndex:31},{value:"Easing",paraId:64,tocIndex:31},{value:"-",paraId:64,tocIndex:31},{value:"endDelay",paraId:64,tocIndex:31},{value:"延迟执行时间 (ms)",paraId:64,tocIndex:31},{value:"number",paraId:64,tocIndex:31},{value:"-",paraId:64,tocIndex:31},{value:"fill",paraId:64,tocIndex:31},{value:"动画处于非运行状态时的展示效果",paraId:64,tocIndex:31},{value:"Fill",paraId:64,tocIndex:31},{value:"-",paraId:64,tocIndex:31},{value:"绘制图例，G2 提供了两种图例类型：分类图例（Category Legend）和连续图例（Continuous Legend），分别用于展示分类数据和连续数据。",paraId:65,tocIndex:32},{value:"const config = {\n  legend: {\n    color: {},\n    size: {},\n  },\n}\n",paraId:66,tocIndex:32},{value:"图例项通常由图标、标签和值三部分构成，在部分场景下也可能仅包含图标及标签。",paraId:67,tocIndex:34},{value:"属性",paraId:68,tocIndex:34},{value:"描述",paraId:68,tocIndex:34},{value:"类型",paraId:68,tocIndex:34},{value:"默认值",paraId:68,tocIndex:34},{value:"itemMarker",paraId:68,tocIndex:34},{value:"图例项图标",paraId:68,tocIndex:34},{value:"DisplayObject",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>DisplayObject",paraId:68,tocIndex:34},{value:"'circle'",paraId:68,tocIndex:34},{value:"itemMarkerFill",paraId:68,tocIndex:34},{value:"图例项图标填充色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemMarkerFillOpacity",paraId:68,tocIndex:34},{value:"图例项图标填充色透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemMarkerStroke",paraId:68,tocIndex:34},{value:"图例项图标描边色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemMarkerStrokeOpacity",paraId:68,tocIndex:34},{value:"图例项图标描边色透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelText",paraId:68,tocIndex:34},{value:"图例项标签",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelFontSize",paraId:68,tocIndex:34},{value:"图例项标签文字大小",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelFontFamily",paraId:68,tocIndex:34},{value:"图例项标签文字字体",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelFontWeight",paraId:68,tocIndex:34},{value:"图例项标签字体粗细",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelFill",paraId:68,tocIndex:34},{value:"图例项标签字体颜色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelFillOpacity",paraId:68,tocIndex:34},{value:"图例项标签字体透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelStroke",paraId:68,tocIndex:34},{value:"图例项标签描边色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemLabelStrokeOpacity",paraId:68,tocIndex:34},{value:"图例项标签描边色透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueText",paraId:68,tocIndex:34},{value:"图例项值",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueFontSize",paraId:68,tocIndex:34},{value:"图例项值文字大小",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueFontFamily",paraId:68,tocIndex:34},{value:"图例项值文字字体",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueFontWeight",paraId:68,tocIndex:34},{value:"图例项值字体粗细",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueFill",paraId:68,tocIndex:34},{value:"图例项值字体颜色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueFillOpacity",paraId:68,tocIndex:34},{value:"图例项值字体透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueStroke",paraId:68,tocIndex:34},{value:"图例项值描边色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemValueStrokeOpacity",paraId:68,tocIndex:34},{value:"图例项值描边色透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"(datum, index, data)=>number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemSpan",paraId:68,tocIndex:34},{value:"图例项图标、标签和值的空间划分",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"number[]",paraId:68,tocIndex:34},{value:"[1, 1, 1]",paraId:68,tocIndex:34},{value:"itemSpacing",paraId:68,tocIndex:34},{value:"图例项图标、标签和值之间的间距",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:" | ",paraId:68,tocIndex:34},{value:"number[]",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemBackgroundFill",paraId:68,tocIndex:34},{value:"背景颜色",paraId:68,tocIndex:34},{value:"string",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"itemBackgroundFillOpacity",paraId:68,tocIndex:34},{value:"背景透明度",paraId:68,tocIndex:34},{value:"number",paraId:68,tocIndex:34},{value:"-",paraId:68,tocIndex:34},{value:"默认采用",paraId:69,tocIndex:35},{value:"流式布局",paraId:69,tocIndex:35},{value:"。",paraId:69,tocIndex:35},{value:"当指定 ",paraId:70,tocIndex:35},{value:"cols",paraId:70,tocIndex:35},{value:" 之后会采用",paraId:70,tocIndex:35},{value:"网格布局",paraId:70,tocIndex:35},{value:"。",paraId:70,tocIndex:35},{value:"属性",paraId:71,tocIndex:35},{value:"描述",paraId:71,tocIndex:35},{value:"类型",paraId:71,tocIndex:35},{value:"默认值",paraId:71,tocIndex:35},{value:"layout",paraId:71,tocIndex:35},{value:"图例项布局方式，网格布局、流式布局",paraId:71,tocIndex:35},{value:"'flex'",paraId:71,tocIndex:35},{value:"|",paraId:71,tocIndex:35},{value:"'grid'",paraId:71,tocIndex:35},{value:"'flex'",paraId:71,tocIndex:35},{value:"cols",paraId:71,tocIndex:35},{value:"指定每列显示的图例项数量，为空时表示列数不受限制",paraId:71,tocIndex:35},{value:"number",paraId:71,tocIndex:35},{value:"-",paraId:71,tocIndex:35},{value:"colPadding",paraId:71,tocIndex:35},{value:"图例项之间的横向间隔",paraId:71,tocIndex:35},{value:"number",paraId:71,tocIndex:35},{value:"0",paraId:71,tocIndex:35},{value:"rowPadding",paraId:71,tocIndex:35},{value:"图例项之间的纵向间隔",paraId:71,tocIndex:35},{value:"number",paraId:71,tocIndex:35},{value:"0",paraId:71,tocIndex:35},{value:"maxRows",paraId:71,tocIndex:35},{value:"最多多少行",paraId:71,tocIndex:35},{value:"number",paraId:71,tocIndex:35},{value:"3",paraId:71,tocIndex:35},{value:"maxCols",paraId:71,tocIndex:35},{value:"最多多少列",paraId:71,tocIndex:35},{value:"number",paraId:71,tocIndex:35},{value:"3",paraId:71,tocIndex:35},{value:"图例项分页显示时能够控制分页器的行为。",paraId:72,tocIndex:36},{value:"属性",paraId:73,tocIndex:36},{value:"描述",paraId:73,tocIndex:36},{value:"类型",paraId:73,tocIndex:36},{value:"默认值",paraId:73,tocIndex:36},{value:"navEffect",paraId:73,tocIndex:36},{value:"翻页显示效果",paraId:73,tocIndex:36},{value:"参见 ",paraId:73,tocIndex:36},{value:"Web Animations API",paraId:73,tocIndex:36},{value:"linear",paraId:73,tocIndex:36},{value:"navDuration",paraId:73,tocIndex:36},{value:"单次翻页动效时长",paraId:73,tocIndex:36},{value:"number",paraId:73,tocIndex:36},{value:"200",paraId:73,tocIndex:36},{value:"navOrient",paraId:73,tocIndex:36},{value:"翻页滚动方向",paraId:73,tocIndex:36},{value:" - 横向",paraId:73,tocIndex:36},{value:"'horizontal'",paraId:73,tocIndex:36},{value:" - 纵向",paraId:73,tocIndex:36},{value:"'vertical'",paraId:73,tocIndex:36},{value:"'horizontal'",paraId:73,tocIndex:36},{value:"|",paraId:73,tocIndex:36},{value:"'vertical'",paraId:73,tocIndex:36},{value:"'horizontal'",paraId:73,tocIndex:36},{value:"navInitPage",paraId:73,tocIndex:36},{value:"默认展示页数",paraId:73,tocIndex:36},{value:"number",paraId:73,tocIndex:36},{value:"0",paraId:73,tocIndex:36},{value:"navLoop",paraId:73,tocIndex:36},{value:"是否启用循环翻页",paraId:73,tocIndex:36},{value:"boolean",paraId:73,tocIndex:36},{value:"false",paraId:73,tocIndex:36},{value:"navFormatter",paraId:73,tocIndex:36},{value:"页码文本格式化",paraId:73,tocIndex:36},{value:"(current: number, total: number) => string;",paraId:73,tocIndex:36},{value:"-",paraId:73,tocIndex:36},{value:"事件类型",paraId:74,tocIndex:37},{value:"描述",paraId:74,tocIndex:37},{value:"类型",paraId:74,tocIndex:37},{value:"click",paraId:74,tocIndex:37},{value:"点击图例项时触发",paraId:74,tocIndex:37},{value:"(item:Selection)=>void",paraId:74,tocIndex:37},{value:"mouseenter",paraId:74,tocIndex:37},{value:"鼠标移入图例项时触发",paraId:74,tocIndex:37},{value:"(item: Selection)=>void",paraId:74,tocIndex:37},{value:"mouseleave",paraId:74,tocIndex:37},{value:"鼠标移出图例项时触发",paraId:74,tocIndex:37},{value:"(item:Selection)=>void",paraId:74,tocIndex:37},{value:"使用离散数据绘制视图时采用的图例类型。",paraId:75,tocIndex:38},{value:"const config = {\n  legend: {\n    y: {\n      ribbonLen: 200,\n      ribbonSize: 30,\n      labelFormatter: (datum, index, data) => datum.people.toLocaleString(),\n      type: 'size',\n      color: [\n        '#d0e3fa',\n        '#acc7f6',\n        '#8daaf2',\n        '#6d8eea',\n        '#4d73cd',\n        '#325bb1',\n        '#5a3e75',\n        '#8c3c79',\n        '#e23455',\n        '#e7655b',\n      ],\n    },\n  },\n}\n\n",paraId:76,tocIndex:38},{value:"连续数据的图例具有 4 种样式，分别为：",paraId:77,tocIndex:39},{value:"连续表示 ",paraId:78,tocIndex:39},{value:"默认",paraId:78,tocIndex:39},{value:"范围表示 ",paraId:79,tocIndex:39},{value:"block=true",paraId:79,tocIndex:39},{value:"尺寸表示 ",paraId:80,tocIndex:39},{value:"type='size'",paraId:80,tocIndex:39},{value:"尺寸、范围表示 ",paraId:81,tocIndex:39},{value:"type='size'",paraId:81,tocIndex:39},{value:" ",paraId:81,tocIndex:39},{value:"block=true",paraId:81,tocIndex:39},{value:"属性",paraId:82,tocIndex:39},{value:"描述",paraId:82,tocIndex:39},{value:"类型",paraId:82,tocIndex:39},{value:"默认值",paraId:82,tocIndex:39},{value:"color",paraId:82,tocIndex:39},{value:"色带颜色，为数组时会从中按序取色",paraId:82,tocIndex:39},{value:"string[]",paraId:82,tocIndex:39},{value:" | ",paraId:82,tocIndex:39},{value:"interpolate",paraId:82,tocIndex:39},{value:"-",paraId:82,tocIndex:39},{value:"block",paraId:82,tocIndex:39},{value:"是否按区间显示",paraId:82,tocIndex:39},{value:"boolean",paraId:82,tocIndex:39},{value:"false",paraId:82,tocIndex:39},{value:"type",paraId:82,tocIndex:39},{value:"连续图例类型",paraId:82,tocIndex:39},{value:"'size'",paraId:82,tocIndex:39},{value:" | ",paraId:82,tocIndex:39},{value:"'color'",paraId:82,tocIndex:39},{value:"'color'",paraId:82,tocIndex:39},{value:"ribbonSize",paraId:82,tocIndex:39},{value:"色带尺寸",paraId:82,tocIndex:39},{value:"number",paraId:82,tocIndex:39},{value:"-",paraId:82,tocIndex:39},{value:"ribbonFill",paraId:82,tocIndex:39},{value:"色带颜色",paraId:82,tocIndex:39},{value:"string",paraId:82,tocIndex:39},{value:"-",paraId:82,tocIndex:39},{value:"ribbonFillOpacity",paraId:82,tocIndex:39},{value:"色带透明度",paraId:82,tocIndex:39},{value:"number",paraId:82,tocIndex:39},{value:"-",paraId:82,tocIndex:39},{value:"ribbonStroke",paraId:82,tocIndex:39},{value:"色带描边色",paraId:82,tocIndex:39},{value:"string",paraId:82,tocIndex:39},{value:"-",paraId:82,tocIndex:39},{value:"ribbonStrokeOpacity",paraId:82,tocIndex:39},{value:"色带描边色透明度",paraId:82,tocIndex:39},{value:"number",paraId:82,tocIndex:39},{value:"-",paraId:82,tocIndex:39},{value:"color 插值器参考 ",paraId:83,tocIndex:39},{value:"d3-interpolate",paraId:83,tocIndex:39},{value:"滑动窗口标记了当前的值选取范围，通过与滑动窗口交互能够对视图中的值范围进行选择。",paraId:84,tocIndex:40},{value:"\n ",paraId:85},{value:"属性",paraId:86,tocIndex:40},{value:"描述",paraId:86,tocIndex:40},{value:"类型",paraId:86,tocIndex:40},{value:"默认值",paraId:86,tocIndex:40},{value:"handle",paraId:86,tocIndex:40},{value:"是否显示滑动手柄",paraId:86,tocIndex:40},{value:"boolean",paraId:86,tocIndex:40},{value:"true",paraId:86,tocIndex:40},{value:"handleLabel",paraId:86,tocIndex:40},{value:"是否显示手柄文本",paraId:86,tocIndex:40},{value:"boolean",paraId:86,tocIndex:40},{value:"true",paraId:86,tocIndex:40},{value:"handleFormatter",paraId:86,tocIndex:40},{value:"手柄文本格式化",paraId:86,tocIndex:40},{value:"(datum)=>string",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"slidable",paraId:86,tocIndex:40},{value:"窗口是否可以滑动",paraId:86,tocIndex:40},{value:"boolean",paraId:86,tocIndex:40},{value:"true",paraId:86,tocIndex:40},{value:"range",paraId:86,tocIndex:40},{value:"默认选择范围",paraId:86,tocIndex:40},{value:"[number, number]",paraId:86,tocIndex:40},{value:"[min, max]",paraId:86,tocIndex:40},{value:"step",paraId:86,tocIndex:40},{value:"单次滑动步长",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:"1",paraId:86,tocIndex:40},{value:"handleMarkerFill",paraId:86,tocIndex:40},{value:"手柄图标颜色",paraId:86,tocIndex:40},{value:"string",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleMarkerFillOpacity",paraId:86,tocIndex:40},{value:"手柄图标色透明度",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleMarkerStroke",paraId:86,tocIndex:40},{value:"手柄图标描边色",paraId:86,tocIndex:40},{value:"string",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleMarkerStrokeOpacity",paraId:86,tocIndex:40},{value:"手柄图标描边色透明度",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelFontSize",paraId:86,tocIndex:40},{value:"手柄文字大小",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:" | ",paraId:86,tocIndex:40},{value:"Function<number>",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelFontFamily",paraId:86,tocIndex:40},{value:"手柄文字字体",paraId:86,tocIndex:40},{value:"string",paraId:86,tocIndex:40},{value:" | ",paraId:86,tocIndex:40},{value:"Function<string>",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelFontWeight",paraId:86,tocIndex:40},{value:"手柄字体粗细",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:" |",paraId:86,tocIndex:40},{value:"Function<number>",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelFill",paraId:86,tocIndex:40},{value:"手柄字体颜色",paraId:86,tocIndex:40},{value:"string",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelFillOpacity",paraId:86,tocIndex:40},{value:"手柄文本透明度",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelStroke",paraId:86,tocIndex:40},{value:"手柄文本描边色",paraId:86,tocIndex:40},{value:"string",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"handleLabelStrokeOpacity",paraId:86,tocIndex:40},{value:"手柄文本描边色透明度",paraId:86,tocIndex:40},{value:"number",paraId:86,tocIndex:40},{value:"-",paraId:86,tocIndex:40},{value:"属性",paraId:87,tocIndex:41},{value:"描述",paraId:87,tocIndex:41},{value:"类型",paraId:87,tocIndex:41},{value:"默认值",paraId:87,tocIndex:41},{value:"label",paraId:87,tocIndex:41},{value:"是否显示刻度值",paraId:87,tocIndex:41},{value:"boolean",paraId:87,tocIndex:41},{value:"true`",paraId:87,tocIndex:41},{value:"labelFormatter",paraId:87,tocIndex:41},{value:"刻度值格式化",paraId:87,tocIndex:41},{value:"(datum, index, data)=>string",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"labelFilter",paraId:87,tocIndex:41},{value:"刻度值过滤",paraId:87,tocIndex:41},{value:"(datum, index, data)=>boolean",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"labelDirection",paraId:87,tocIndex:41},{value:"刻度值位于色带的位置，参考 axis ",paraId:87,tocIndex:41},{value:"direction",paraId:87,tocIndex:41},{value:"'positive'",paraId:87,tocIndex:41},{value:" | ",paraId:87,tocIndex:41},{value:"'negative'",paraId:87,tocIndex:41},{value:"'positive'",paraId:87,tocIndex:41},{value:"labelSpacing",paraId:87,tocIndex:41},{value:"刻度值到色带的间距",paraId:87,tocIndex:41},{value:"number",paraId:87,tocIndex:41},{value:"5",paraId:87,tocIndex:41},{value:"labelAlign",paraId:87,tocIndex:41},{value:"刻度值对齐位置",paraId:87,tocIndex:41},{value:" - ",paraId:87,tocIndex:41},{value:"'value'",paraId:87,tocIndex:41},{value:" 对齐到刻度",paraId:87,tocIndex:41},{value:"- ",paraId:87,tocIndex:41},{value:"'range'",paraId:87,tocIndex:41},{value:" 对齐到范围",paraId:87,tocIndex:41},{value:"'value'",paraId:87,tocIndex:41},{value:"|",paraId:87,tocIndex:41},{value:"'range'",paraId:87,tocIndex:41},{value:"'value'",paraId:87,tocIndex:41},{value:"labelFontSize",paraId:87,tocIndex:41},{value:"刻度值文字大小",paraId:87,tocIndex:41},{value:"number",paraId:87,tocIndex:41},{value:" | ",paraId:87,tocIndex:41},{value:"Function<number>",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"labelFontFamily",paraId:87,tocIndex:41},{value:"刻度值文字字体",paraId:87,tocIndex:41},{value:"string",paraId:87,tocIndex:41},{value:" | ",paraId:87,tocIndex:41},{value:"Function<string>",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"labelFontWeight",paraId:87,tocIndex:41},{value:"刻度值字体粗细",paraId:87,tocIndex:41},{value:"number",paraId:87,tocIndex:41},{value:" | ",paraId:87,tocIndex:41},{value:"Function<number>",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"labelStroke",paraId:87,tocIndex:41},{value:"刻度值字体颜色",paraId:87,tocIndex:41},{value:"string",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"labelStrokeOpacity",paraId:87,tocIndex:41},{value:"刻度值文本透明度",paraId:87,tocIndex:41},{value:"number",paraId:87,tocIndex:41},{value:"-",paraId:87,tocIndex:41},{value:"刻度值对齐方式",paraId:88,tocIndex:41},{value:"对齐到刻度",paraId:89,tocIndex:41},{value:"\n ",paraId:85},{value:"对齐到范围",paraId:90,tocIndex:41},{value:"\n ",paraId:85},{value:"指示器是在与连续图例交互过程中指示当前所在位置所表示值大小的提示组件。",paraId:91,tocIndex:42},{value:"属性",paraId:92,tocIndex:42},{value:"描述",paraId:92,tocIndex:42},{value:"类型",paraId:92,tocIndex:42},{value:"默认值",paraId:92,tocIndex:42},{value:"indicator",paraId:92,tocIndex:42},{value:"是否显示值指示器",paraId:92,tocIndex:42},{value:"boolean",paraId:92,tocIndex:42},{value:"true",paraId:92,tocIndex:42},{value:"indicatorFormatter",paraId:92,tocIndex:42},{value:"值指示器格式化",paraId:92,tocIndex:42},{value:"(datum)=>string | DisplayObject",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorLabelFontSize",paraId:92,tocIndex:42},{value:"值指示器文本文字大小",paraId:92,tocIndex:42},{value:"number",paraId:92,tocIndex:42},{value:" | ",paraId:92,tocIndex:42},{value:"Function<number>",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorLabelFontFamily",paraId:92,tocIndex:42},{value:"值指示器文本文字字体",paraId:92,tocIndex:42},{value:"string",paraId:92,tocIndex:42},{value:" | ",paraId:92,tocIndex:42},{value:"Function<string>",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorLabelFontWeight",paraId:92,tocIndex:42},{value:"值指示器文本字体粗细",paraId:92,tocIndex:42},{value:"number",paraId:92,tocIndex:42},{value:" |",paraId:92,tocIndex:42},{value:"Function<number>",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorLabelStroke",paraId:92,tocIndex:42},{value:"值指示器字体颜色",paraId:92,tocIndex:42},{value:"string",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorLabelStrokeOpacity",paraId:92,tocIndex:42},{value:"值指示器文本透明度",paraId:92,tocIndex:42},{value:"number",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorBackgroundFill",paraId:92,tocIndex:42},{value:"值指示器背景颜色",paraId:92,tocIndex:42},{value:"string",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorBackgroundFillOpacity",paraId:92,tocIndex:42},{value:"值指示器背景透明度",paraId:92,tocIndex:42},{value:"number",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorBackgroundStroke",paraId:92,tocIndex:42},{value:"值指示器背景描边色",paraId:92,tocIndex:42},{value:"string",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"indicatorBackgroundStrokeOpacity",paraId:92,tocIndex:42},{value:"值指示器背景描边色透明度",paraId:92,tocIndex:42},{value:"number",paraId:92,tocIndex:42},{value:"-",paraId:92,tocIndex:42},{value:"事件类型",paraId:93,tocIndex:43},{value:"描述",paraId:93,tocIndex:43},{value:"类型",paraId:93,tocIndex:43},{value:"valuechange",paraId:93,tocIndex:43},{value:"滑动窗口选取范围改变时触发",paraId:93,tocIndex:43},{value:"(range: [number, number])=>void",paraId:93,tocIndex:43},{value:"indicate",paraId:93,tocIndex:43},{value:"指示器值改变时触发",paraId:93,tocIndex:43},{value:"(value: number, range: [number, number])=>void",paraId:93,tocIndex:43},{value:"属性",paraId:94,tocIndex:45},{value:"描述",paraId:94,tocIndex:45},{value:"类型",paraId:94,tocIndex:45},{value:"默认值",paraId:94,tocIndex:45},{value:"title",paraId:94,tocIndex:45},{value:"关闭标题或设置标题内容",paraId:94,tocIndex:45},{value:"false",paraId:94,tocIndex:45},{value:"|",paraId:94,tocIndex:45},{value:"string",paraId:94,tocIndex:45},{value:"true",paraId:94,tocIndex:45},{value:"titleSpacing",paraId:94,tocIndex:45},{value:"标题到内容区域的间距",paraId:94,tocIndex:45},{value:"number",paraId:94,tocIndex:45},{value:" | ",paraId:94,tocIndex:45},{value:"number[]",paraId:94,tocIndex:45},{value:"0",paraId:94,tocIndex:45},{value:"titleInset",paraId:94,tocIndex:45},{value:"标题文本内边距",paraId:94,tocIndex:45},{value:"number",paraId:94,tocIndex:45},{value:" | ",paraId:94,tocIndex:45},{value:"number[]",paraId:94,tocIndex:45},{value:"0",paraId:94,tocIndex:45},{value:"titlePosition",paraId:94,tocIndex:45},{value:"标题所处位置。可采用简写形式，如",paraId:94,tocIndex:45},{value:"'i'",paraId:94,tocIndex:45},{value:" 表示",paraId:94,tocIndex:45},{value:"'inner'",paraId:94,tocIndex:45},{value:"'top'",paraId:94,tocIndex:45},{value:" | ",paraId:94,tocIndex:45},{value:"'bottom'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'left'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'right'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'left-top'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'left-bottom'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'right-top'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'right-bottom'",paraId:94,tocIndex:45},{value:" |",paraId:94,tocIndex:45},{value:"'inner'",paraId:94,tocIndex:45},{value:" | ",paraId:94,tocIndex:45},{value:"'lt'",paraId:94,tocIndex:45},{value:"-",paraId:94,tocIndex:45},{value:"titleFontSize",paraId:94,tocIndex:45},{value:"标题文字大小",paraId:94,tocIndex:45},{value:"number",paraId:94,tocIndex:45},{value:"-",paraId:94,tocIndex:45},{value:"titleFontFamily",paraId:94,tocIndex:45},{value:"标题文字字体",paraId:94,tocIndex:45},{value:"string",paraId:94,tocIndex:45},{value:"-",paraId:94,tocIndex:45},{value:"titleFontWeight",paraId:94,tocIndex:45},{value:"标题字体粗细",paraId:94,tocIndex:45},{value:"number",paraId:94,tocIndex:45},{value:"-",paraId:94,tocIndex:45},{value:"titleFill",paraId:94,tocIndex:45},{value:"标题字体颜色",paraId:94,tocIndex:45},{value:"string",paraId:94,tocIndex:45},{value:"titleFillOpacity",paraId:94,tocIndex:45},{value:"标题字体颜色透明度",paraId:94,tocIndex:45},{value:"number",paraId:94,tocIndex:45},{value:"titleStroke",paraId:94,tocIndex:45},{value:"标题字体描边颜色",paraId:94,tocIndex:45},{value:"string",paraId:94,tocIndex:45},{value:"-",paraId:94,tocIndex:45},{value:"titleStrokeOpacity",paraId:94,tocIndex:45},{value:"标题字体描边颜色透明度",paraId:94,tocIndex:45},{value:"number",paraId:94,tocIndex:45},{value:"-",paraId:94,tocIndex:45},{value:"Legend 组件支持调整其在画布中的位置，通过 ",paraId:95,tocIndex:46},{value:"layout",paraId:95,tocIndex:46},{value:" 属性来设置。",paraId:95,tocIndex:46},{value:"\n目前支持基本的 Flex 布局方式，支持的属性包括: ",paraId:95,tocIndex:46},{value:"justifyContent",paraId:95,tocIndex:46},{value:", ",paraId:95,tocIndex:46},{value:"alignItems",paraId:95,tocIndex:46},{value:", ",paraId:95,tocIndex:46},{value:"flexDirection",paraId:95,tocIndex:46},{value:"。",paraId:95,tocIndex:46},{value:"属性",paraId:96,tocIndex:46},{value:"描述",paraId:96,tocIndex:46},{value:"类型",paraId:96,tocIndex:46},{value:"默认值",paraId:96,tocIndex:46},{value:"justifyContent",paraId:96,tocIndex:46},{value:"主轴对齐方式",paraId:96,tocIndex:46},{value:"'flex-start'",paraId:96,tocIndex:46},{value:" | ",paraId:96,tocIndex:46},{value:"'flex-end'",paraId:96,tocIndex:46},{value:" | ",paraId:96,tocIndex:46},{value:"'center'",paraId:96,tocIndex:46},{value:"'flex-start'",paraId:96,tocIndex:46},{value:"alignItems",paraId:96,tocIndex:46},{value:"交叉轴对齐",paraId:96,tocIndex:46},{value:"'flex-start'",paraId:96,tocIndex:46},{value:" | ",paraId:96,tocIndex:46},{value:"'flex-end'",paraId:96,tocIndex:46},{value:" | ",paraId:96,tocIndex:46},{value:"'center'",paraId:96,tocIndex:46},{value:"'flex-start'",paraId:96,tocIndex:46},{value:"flexDirection",paraId:96,tocIndex:46},{value:"主轴方向",paraId:96,tocIndex:46},{value:"'row'",paraId:96,tocIndex:46},{value:" | ",paraId:96,tocIndex:46},{value:"'column'",paraId:96,tocIndex:46},{value:"'row'",paraId:96,tocIndex:46},{value:"const config = {\n  legend: {\n    color: {\n      layout: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      },\n    },\n  },\n}\n",paraId:97,tocIndex:46},{value:"滚动条（scrollbar）是一个交互组件，当显示区域大小不足以容纳全部信息时，可以将超出部分隐藏，并通过滚动条的垂直或横向滑动来显示出被隐藏部分。",paraId:98,tocIndex:47},{value:"内容是否超出显示区域取决于内容的多少以及显示区域的尺寸，当需要显示的内容在纵向方向上超过显示区域的大小时，应当使用垂直滚动条以控制显示的部分，横向滚动条同理。",paraId:99,tocIndex:48},{value:"const config = {\n  scrollbar: {\n    x: {}\n  }\n}\n",paraId:100,tocIndex:49},{value:"属性",paraId:101,tocIndex:51},{value:"描述",paraId:101,tocIndex:51},{value:"类型",paraId:101,tocIndex:51},{value:"默认值",paraId:101,tocIndex:51},{value:"ratio",paraId:101,tocIndex:51},{value:"滚动条的比例",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:"0.5",paraId:101,tocIndex:51},{value:"value",paraId:101,tocIndex:51},{value:"滚动条的起始位置",paraId:101,tocIndex:51},{value:"[0, 1]",paraId:101,tocIndex:51},{value:"0",paraId:101,tocIndex:51},{value:"slidable",paraId:101,tocIndex:51},{value:"是否可以拖动",paraId:101,tocIndex:51},{value:"boolean",paraId:101,tocIndex:51},{value:"true",paraId:101,tocIndex:51},{value:"scrollable",paraId:101,tocIndex:51},{value:"是否支持滚轮滚动",paraId:101,tocIndex:51},{value:"boolean",paraId:101,tocIndex:51},{value:"true",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"isRound",paraId:101,tocIndex:51},{value:"滚动条样式是否为圆角",paraId:101,tocIndex:51},{value:"boolean",paraId:101,tocIndex:51},{value:"false",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"padding",paraId:101,tocIndex:51},{value:"滚动条轨道内边距",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:" | ",paraId:101,tocIndex:51},{value:"number[]",paraId:101,tocIndex:51},{value:"2",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"thumbFill",paraId:101,tocIndex:51},{value:"滚动条滑块填充色",paraId:101,tocIndex:51},{value:"string",paraId:101,tocIndex:51},{value:"–",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"thumbFillOpacity",paraId:101,tocIndex:51},{value:"滚动条滑块填充色透明度",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:"–",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"thumbStroke",paraId:101,tocIndex:51},{value:"滚动条滑块描边色",paraId:101,tocIndex:51},{value:"string",paraId:101,tocIndex:51},{value:"–",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"thumbStrokeOpacity",paraId:101,tocIndex:51},{value:"滚动条滑块描边色透明度",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:"–",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"trackSize",paraId:101,tocIndex:51},{value:"滚动条的轨道宽度",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:"10",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"trackFill",paraId:101,tocIndex:51},{value:"滚动条轨道填充色",paraId:101,tocIndex:51},{value:"string",paraId:101,tocIndex:51},{value:"-",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"trackFillOpacity",paraId:101,tocIndex:51},{value:"滚动条轨道填充色透明度",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:"-",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"trackStroke",paraId:101,tocIndex:51},{value:"滚动条轨道描边色",paraId:101,tocIndex:51},{value:"string",paraId:101,tocIndex:51},{value:"–",paraId:101,tocIndex:51},{value:"style.",paraId:101,tocIndex:51},{value:"trackStrokeOpacity",paraId:101,tocIndex:51},{value:"滚动条轨道描边色透明度",paraId:101,tocIndex:51},{value:"number",paraId:101,tocIndex:51},{value:"–",paraId:101,tocIndex:51},{value:"属性",paraId:102,tocIndex:52},{value:"描述",paraId:102,tocIndex:52},{value:"类型",paraId:102,tocIndex:52},{value:"valuechange",paraId:102,tocIndex:52},{value:"发生滚动变化时触发，通过事件监听",paraId:102,tocIndex:52},{value:"function(e)",paraId:102,tocIndex:52},{value:"const config = {\n  scrollbar: {\n    x: {}\n  },\n  onReady: (chart) => {\n    const { canvas } = chart.getContext();\n    const { document } = canvas;\n    document.querySelector('.g2-scrollbar').addEventListener('valuechange', (evt) => {\n      console.info(evt.detail);\n    });\n  }\n}\n",paraId:103,tocIndex:52},{value:"提示（Tooltip）可以提供关于数据点的额外信息，帮助用户更好地理解和解释可视化。",paraId:104,tocIndex:53},{value:"const config = {\n  tooltip: {\n    title: 'Date',\n    items: [{ channel: 'y' }],\n  }\n}\n",paraId:105,tocIndex:54},{value:"属性",paraId:106,tocIndex:55},{value:"描述",paraId:106,tocIndex:55},{value:"类型",paraId:106,tocIndex:55},{value:"默认值",paraId:106,tocIndex:55},{value:"title",paraId:106,tocIndex:55},{value:"标题，支持一段文本或 innerHTML 字符串",paraId:106,tocIndex:55},{value:"TooltipItem",paraId:106,tocIndex:55},{value:"-",paraId:106,tocIndex:55},{value:"items",paraId:106,tocIndex:55},{value:"定义每一个提示项的配置",paraId:106,tocIndex:55},{value:"TooltipItem",paraId:106,tocIndex:55},{value:"-",paraId:106,tocIndex:55},{value:"type TooltipItem =\n  | string\n  | false\n  | {\n      name?: string;\n      color?: string;\n      channel?: string;\n      field?: string;\n      value?: string;\n      // 格式化 tooltip item 的值（支持 d3-format 对应的字符串）\n      valueFormatter?: string | ((d: any) => string);\n    };\n",paraId:107,tocIndex:55},{value:"const config = {\n  tooltip: {\n    title: (d) => (d.value > 100 ? d.name : d.age), // transform\n  }\n}\n",paraId:108,tocIndex:57},{value:"// 单个字段\nconst config = {\n  tooltip: {\n    field: 'a'\n  }\n}\n\n// 单个通道\nconst config = {\n  tooltip: {\n    channel: 'y'\n  }\n}\n\n// 格式化\nconst config = {\n  tooltip: { channel: 'y', valueFormatter: (d) => d.toFixed(1) }\n}\n\n// d3-format 支持的字符\n// https://github.com/d3/d3-format\nconst config = {\n  tooltip: { channel: 'y', valueFormatter: '~s' }\n}\n\n// 完整信息\nconst config = {\n  tooltip: { name: 'name', color: 'red', value: 'color' }\n}\n\n// 回调\nconst config = {\n  tooltip: (\n    d, // 每一个数据项\n    index, // 索引\n    data, // 完整数据\n    column, // 通道\n  ) => ({\n    value: `${column.y.value[index]} - ${column.y1.value[index]}`,\n  })\n}\n\n// 多个 item\nconst config = {\n  tooltip: { items: [{ channel: 'y' }, { channel: 'x' }] }\n}\n",paraId:109,tocIndex:58},{value:"const config = {\n  tooltip: {\n    title: 'a',\n    items: [{ channel: 'x' }, { channel: 'y' }],\n  }\n}\n",paraId:110,tocIndex:59},{value:"Label 是将图形的一些数据信息，比如值，名称等映射到图形的文本上的方法。使用方式如下:",paraId:111,tocIndex:60},{value:"const config = {\n  label: {\n    text: 'people',\n    position: 'outside',\n    transform: [{ type: 'overlapDodgeY' }],\n  }\n}\n",paraId:112,tocIndex:61},{value:"Label 继承 G Text 所有属性样式配置，此外还有 ",paraId:113,tocIndex:62},{value:"position",paraId:113,tocIndex:62},{value:", ",paraId:113,tocIndex:62},{value:"selector",paraId:113,tocIndex:62},{value:", ",paraId:113,tocIndex:62},{value:"connector",paraId:113,tocIndex:62},{value:", ",paraId:113,tocIndex:62},{value:"background",paraId:113,tocIndex:62},{value:" 和 ",paraId:113,tocIndex:62},{value:"transform",paraId:113,tocIndex:62},{value:" 等更多配置。",paraId:113,tocIndex:62},{value:"属性",paraId:114,tocIndex:62},{value:"描述",paraId:114,tocIndex:62},{value:"类型",paraId:114,tocIndex:62},{value:"默认值",paraId:114,tocIndex:62},{value:"fontSize",paraId:114,tocIndex:62},{value:"文字大小",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"fontFamily",paraId:114,tocIndex:62},{value:"文字字体",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"fontWeight",paraId:114,tocIndex:62},{value:"字体粗细",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"lineHeight",paraId:114,tocIndex:62},{value:"文字的行高",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"textAlign",paraId:114,tocIndex:62},{value:"设置文本内容的当前对齐方式, 支持的属性：",paraId:114,tocIndex:62},{value:"center",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"end",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"left",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"right",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"start",paraId:114,tocIndex:62},{value:"，默认值为",paraId:114,tocIndex:62},{value:"start",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"textBaseline",paraId:114,tocIndex:62},{value:"设置在绘制文本时使用的当前文本基线, 支持的属性:",paraId:114,tocIndex:62},{value:"top",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"middle",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"bottom",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"alphabetic",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"hanging",paraId:114,tocIndex:62},{value:"。默认值为",paraId:114,tocIndex:62},{value:"bottom",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"fill",paraId:114,tocIndex:62},{value:"图形的填充色",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"fillOpacity",paraId:114,tocIndex:62},{value:"图形的填充透明度",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"stroke",paraId:114,tocIndex:62},{value:"图形的描边",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"strokeOpacity",paraId:114,tocIndex:62},{value:"描边透明度",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"lineWidth",paraId:114,tocIndex:62},{value:"图形描边的宽度",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"lineDash",paraId:114,tocIndex:62},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:114,tocIndex:62},{value:"[number,number]",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<[number, number]>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"opacity",paraId:114,tocIndex:62},{value:"图形的整体透明度",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"shadowColor",paraId:114,tocIndex:62},{value:"图形阴影颜色",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"shadowBlur",paraId:114,tocIndex:62},{value:"图形阴影的高斯模糊系数",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"shadowOffsetX",paraId:114,tocIndex:62},{value:"设置阴影距图形的水平距离",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"shadowOffsetY",paraId:114,tocIndex:62},{value:"设置阴影距图形的垂直距离",paraId:114,tocIndex:62},{value:"number",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<number>",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"cursor",paraId:114,tocIndex:62},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:" | ",paraId:114,tocIndex:62},{value:"Function<string>",paraId:114,tocIndex:62},{value:"'default'",paraId:114,tocIndex:62},{value:"position",paraId:114,tocIndex:62},{value:"标签位置配置",paraId:114,tocIndex:62},{value:"string",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"selector",paraId:114,tocIndex:62},{value:"标签选择器。mark 通过指定的通道分组，通过指定选择器可以针对序列进行过滤索引，从序列中提取单个或多个值。分组的默认通道是系列。",paraId:114,tocIndex:62},{value:"string|function",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"connector",paraId:114,tocIndex:62},{value:"是否展示文本和目标点之间的连接线，默认不展示",paraId:114,tocIndex:62},{value:"boolean",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"background",paraId:114,tocIndex:62},{value:"是否展示文本背景框，默认不展示",paraId:114,tocIndex:62},{value:"boolean",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"transform",paraId:114,tocIndex:62},{value:"标签转换，主要用于调整标签 ",paraId:114,tocIndex:62},{value:"(x,y)",paraId:114,tocIndex:62},{value:" 位置，标签偏移、对齐等属性以实现想要的标签效果，内置多种标签布局，同时也支持回调的方式处理",paraId:114,tocIndex:62},{value:"array|function",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"formatter",paraId:114,tocIndex:62},{value:"标签文本格式化",paraId:114,tocIndex:62},{value:"type Formatter = (text:string, datum: Datum, index:number, data: Data) => string",paraId:114,tocIndex:62},{value:"-",paraId:114,tocIndex:62},{value:"标签",paraId:115,tocIndex:62},{value:"连接线样式",paraId:115,tocIndex:62},{value:"配置，格式为: ",paraId:115,tocIndex:62},{value:"connector${style}",paraId:115,tocIndex:62},{value:", 如: ",paraId:115,tocIndex:62},{value:"connectorStroke",paraId:115,tocIndex:62},{value:" 代表连接线描边色。",paraId:115,tocIndex:62},{value:"参数",paraId:116,tocIndex:62},{value:"说明",paraId:116,tocIndex:62},{value:"类型",paraId:116,tocIndex:62},{value:"默认值",paraId:116,tocIndex:62},{value:"connectorStroke",paraId:116,tocIndex:62},{value:"连接线描边色",paraId:116,tocIndex:62},{value:"string",paraId:116,tocIndex:62},{value:"-",paraId:116,tocIndex:62},{value:"connectorLineWidth",paraId:116,tocIndex:62},{value:"连接线描边线宽",paraId:116,tocIndex:62},{value:"number",paraId:116,tocIndex:62},{value:"-",paraId:116,tocIndex:62},{value:"connector${style}",paraId:116,tocIndex:62},{value:"更多连接线样式配置，参考 ",paraId:116,tocIndex:62},{value:"PathStyleProps",paraId:116,tocIndex:62},{value:" 属性值",paraId:116,tocIndex:62},{value:"-",paraId:116,tocIndex:62},{value:"-",paraId:116,tocIndex:62},{value:"标签",paraId:117,tocIndex:62},{value:"文本背景框样式",paraId:117,tocIndex:62},{value:"配置，格式为: ",paraId:117,tocIndex:62},{value:"background${style}",paraId:117,tocIndex:62},{value:", 如: ",paraId:117,tocIndex:62},{value:"backgroundFill",paraId:117,tocIndex:62},{value:" 代表背景框填充色。",paraId:117,tocIndex:62},{value:"参数",paraId:118,tocIndex:62},{value:"说明",paraId:118,tocIndex:62},{value:"类型",paraId:118,tocIndex:62},{value:"默认值",paraId:118,tocIndex:62},{value:"backgroundFill",paraId:118,tocIndex:62},{value:"背景框填充色",paraId:118,tocIndex:62},{value:"string",paraId:118,tocIndex:62},{value:"-",paraId:118,tocIndex:62},{value:"backgroundRadius",paraId:118,tocIndex:62},{value:"背景框圆角半径",paraId:118,tocIndex:62},{value:"number",paraId:118,tocIndex:62},{value:"-",paraId:118,tocIndex:62},{value:"backgroundPadding",paraId:118,tocIndex:62},{value:"背景框内间距",paraId:118,tocIndex:62},{value:"number[]",paraId:118,tocIndex:62},{value:"-",paraId:118,tocIndex:62},{value:"background${style}",paraId:118,tocIndex:62},{value:"更多背景框样式配置，参考 ",paraId:118,tocIndex:62},{value:"RectStyleProps",paraId:118,tocIndex:62},{value:" 属性值",paraId:118,tocIndex:62},{value:"-",paraId:118,tocIndex:62},{value:"-",paraId:118,tocIndex:62},{value:"数据标签支持使用 HTML 自定义标签，具体配置为：",paraId:119,tocIndex:62},{value:"参数",paraId:120,tocIndex:62},{value:"说明",paraId:120,tocIndex:62},{value:"类型",paraId:120,tocIndex:62},{value:"默认值",paraId:120,tocIndex:62},{value:"render",paraId:120,tocIndex:62},{value:"返回 HTML string 或者 HTMElement，使用 HTML 自定义复杂标签",paraId:120,tocIndex:62},{value:"RenderFunc",paraId:120,tocIndex:62},{value:"-",paraId:120,tocIndex:62},{value:"type RenderFunc = (text: string, datum: object, index: number) => String | HTMLElement;\n",paraId:121,tocIndex:62},{value:"在笛卡尔坐标系下，支持 9 种位置：",paraId:122,tocIndex:64},{value:"'top'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'left'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'right'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'bottom'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'top-left'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'top-right'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'bottom-left'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'bottom-right'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'inside'",paraId:122,tocIndex:64},{value:"。非笛卡尔坐标系下，支持 ",paraId:122,tocIndex:64},{value:"'outside'",paraId:122,tocIndex:64},{value:", ",paraId:122,tocIndex:64},{value:"'inside'",paraId:122,tocIndex:64},{value:" 两种。",paraId:122,tocIndex:64},{value:"此外，针对面积图提供特殊 ",paraId:123,tocIndex:64},{value:"area",paraId:123,tocIndex:64},{value:"，见 ",paraId:123,tocIndex:64},{value:"面积图特殊标签",paraId:124,tocIndex:64},{value:"。针对 radial 类型的图标，增加了 ",paraId:123,tocIndex:64},{value:"spider",paraId:123,tocIndex:64},{value:"、",paraId:123,tocIndex:64},{value:"surround",paraId:123,tocIndex:64},{value:" 两种类型。",paraId:123,tocIndex:64},{value:"position",paraId:125,tocIndex:64},{value:"用途",paraId:125,tocIndex:64},{value:"使用前",paraId:125,tocIndex:64},{value:"使用后",paraId:125,tocIndex:64},{value:"spider",paraId:125,tocIndex:64},{value:"调整标签沿坐标轴边沿两端对齐，适用于 polar 坐标系",paraId:125,tocIndex:64},{value:"surround",paraId:125,tocIndex:64},{value:"调整标签环形环绕做坐标系，适用于 polar 坐标系下的玫瑰图",paraId:125,tocIndex:64},{value:"area",paraId:125,tocIndex:64},{value:"将面积图的标签显示在面积区域中心，并设置一定的旋转角度",paraId:125,tocIndex:64},{value:"selector 选择器可以对系列数据进行过滤索引。",paraId:126,tocIndex:65},{value:"通常适用于折线图、面积图等一个几何图形会对应一组数据的 mark",paraId:127,tocIndex:65},{value:"内置选择器有：",paraId:128,tocIndex:65},{value:"'last'",paraId:128,tocIndex:65},{value:", ",paraId:128,tocIndex:65},{value:"'first'",paraId:128,tocIndex:65},{value:"，同时也支持 ",paraId:128,tocIndex:65},{value:"function",paraId:128,tocIndex:65},{value:" 回调的方式自定义，如下：",paraId:128,tocIndex:65},{value:"{\n  selector: (data) => {\n    if (data.length) {\n      // 对于每个系列的数据，只保留索引等于 2 的标签\n      return data.filter((d, index) => index === 2);\n    }\n    return data;\n  };\n}\n",paraId:129,tocIndex:65},{value:"详见",paraId:130,tocIndex:66},{value:"选项",paraId:131,tocIndex:66}]},25813:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(10488);const n=[{value:"属性",paraId:0},{value:"描述",paraId:0},{value:"类型",paraId:0},{value:"默认值",paraId:0},{value:"sparklineType",paraId:0},{value:"迷你图类型：折线图、直方图",paraId:0},{value:"line",paraId:0},{value:" | ",paraId:0},{value:"column",paraId:0},{value:"line",paraId:0},{value:"sparklineIsStack",paraId:0},{value:"是否对数据进行堆叠",paraId:0},{value:"boolean",paraId:0},{value:"false",paraId:0},{value:"sparklineRange",paraId:0},{value:"指定值范围，未指定时将使用 data 的最小值和最大值",paraId:0},{value:"[number, number]",paraId:0},{value:"-",paraId:0},{value:"sparklineColor",paraId:0},{value:"指定颜色",paraId:0},{value:"string",paraId:0},{value:" | ",paraId:0},{value:"string[]",paraId:0},{value:" | ",paraId:0},{value:"(index: number)=>string",paraId:0},{value:"-",paraId:0},{value:"sparklineSmooth",paraId:0},{value:"适用于折线图，平滑曲线",paraId:0},{value:"boolean",paraId:0},{value:"false",paraId:0},{value:"sparklineLineStroke",paraId:0},{value:"适用于折线图，线条颜色",paraId:0},{value:"string",paraId:0},{value:"-",paraId:0},{value:"sparklineLineStrokeOpacity",paraId:0},{value:"适用于折线图，线条透明度",paraId:0},{value:"number",paraId:0},{value:"-",paraId:0},{value:"sparklineLineLineDash",paraId:0},{value:"适用于折线图，线条的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:0},{value:"[number,number]",paraId:0},{value:"-",paraId:0},{value:"sparklineAreaFill",paraId:0},{value:"适用于折线图，填充区域颜色",paraId:0},{value:"string",paraId:0},{value:"-",paraId:0},{value:"sparklineAreaFillOpacity",paraId:0},{value:"适用于折线图，填充区域透明度",paraId:0},{value:"number",paraId:0},{value:"-",paraId:0},{value:"sparklineColumnFill",paraId:0},{value:"适用于直方图，条形颜色",paraId:0},{value:"string",paraId:0},{value:"-",paraId:0},{value:"sparklineColumnFillOpacity",paraId:0},{value:"适用于直方图，条形透明度",paraId:0},{value:"number",paraId:0},{value:"-",paraId:0},{value:"sparklineIsGroup",paraId:0},{value:"适用于直方图，是否分组显示",paraId:0},{value:"boolean",paraId:0},{value:"false",paraId:0},{value:"sparklineSpacing",paraId:0},{value:"适用于直方图，分组直方的间距",paraId:0},{value:"number",paraId:0},{value:"0",paraId:0}]},92740:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(892);const n=[{value:"属性",paraId:0},{value:"描述",paraId:0},{value:"类型",paraId:0},{value:"默认值",paraId:0},{value:"fill",paraId:0},{value:"图形的填充色",paraId:0},{value:"string",paraId:0},{value:" | ",paraId:0},{value:"Function<string>",paraId:0},{value:"-",paraId:0},{value:"fillOpacity",paraId:0},{value:"图形的填充透明度",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"stroke",paraId:0},{value:"图形的描边",paraId:0},{value:"string",paraId:0},{value:" | ",paraId:0},{value:"Function<string>",paraId:0},{value:"-",paraId:0},{value:"lineWidth",paraId:0},{value:"图形描边的宽度",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"lineDash",paraId:0},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:0},{value:"[number,number]",paraId:0},{value:" | ",paraId:0},{value:"Function<[number, number]>",paraId:0},{value:"-",paraId:0},{value:"strokeOpacity",paraId:0},{value:"描边透明度",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"opacity",paraId:0},{value:"图形的整体透明度",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"shadowColor",paraId:0},{value:"图形阴影颜色",paraId:0},{value:"string",paraId:0},{value:" | ",paraId:0},{value:"Function<string>",paraId:0},{value:"-",paraId:0},{value:"shadowBlur",paraId:0},{value:"图形阴影的高斯模糊系数",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"shadowOffsetX",paraId:0},{value:"设置阴影距图形的水平距离",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"shadowOffsetY",paraId:0},{value:"设置阴影距图形的垂直距离",paraId:0},{value:"number",paraId:0},{value:" | ",paraId:0},{value:"Function<number>",paraId:0},{value:"-",paraId:0},{value:"cursor",paraId:0},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:0},{value:"string",paraId:0},{value:" | ",paraId:0},{value:"Function<string>",paraId:0},{value:"'default'",paraId:0}]},74970:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(99772);const n=[{value:"绘制坐标轴，目前支持直角坐标系坐标轴与极坐标系坐标轴。",paraId:0},{value:"const config = {\n  axis: {\n    x: {},\n    y: {},\n  },\n}\n",paraId:1},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"title",paraId:2,tocIndex:1},{value:"关闭标题或设置标题内容",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"|",paraId:2,tocIndex:1},{value:"string",paraId:2,tocIndex:1},{value:" | ",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:" | ",paraId:2,tocIndex:1},{value:"DisplayObject",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"titleSpacing",paraId:2,tocIndex:1},{value:"标题到坐标轴的距离",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"10",paraId:2,tocIndex:1},{value:"titlePosition",paraId:2,tocIndex:1},{value:"标题相对坐标轴的位置，支持首字母简写形式，如",paraId:2,tocIndex:1},{value:"'top'",paraId:2,tocIndex:1},{value:"简写为",paraId:2,tocIndex:1},{value:"'t'",paraId:2,tocIndex:1},{value:"'top'",paraId:2,tocIndex:1},{value:"|",paraId:2,tocIndex:1},{value:"'bottom'",paraId:2,tocIndex:1},{value:"|",paraId:2,tocIndex:1},{value:"'left'",paraId:2,tocIndex:1},{value:"|",paraId:2,tocIndex:1},{value:"'right'",paraId:2,tocIndex:1},{value:"'lb'",paraId:2,tocIndex:1},{value:"titleFontSize",paraId:2,tocIndex:1},{value:"标题文字大小",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"titleFontFamily",paraId:2,tocIndex:1},{value:"标题文字字体",paraId:2,tocIndex:1},{value:"string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"titleFontWeight",paraId:2,tocIndex:1},{value:"标题字体粗细",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"titleStroke",paraId:2,tocIndex:1},{value:"标题字体颜色",paraId:2,tocIndex:1},{value:"string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"titleStrokeOpacity",paraId:2,tocIndex:1},{value:"标题透明度",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"属性",paraId:3,tocIndex:2},{value:"描述",paraId:3,tocIndex:2},{value:"类型",paraId:3,tocIndex:2},{value:"默认值",paraId:3,tocIndex:2},{value:"line",paraId:3,tocIndex:2},{value:"是否显示轴线",paraId:3,tocIndex:2},{value:"boolean",paraId:3,tocIndex:2},{value:"true",paraId:3,tocIndex:2},{value:"arrow",paraId:3,tocIndex:2},{value:"是否显示箭头",paraId:3,tocIndex:2},{value:"boolean",paraId:3,tocIndex:2},{value:"true",paraId:3,tocIndex:2},{value:"lineExtension",paraId:3,tocIndex:2},{value:"轴线两侧的延长线",paraId:3,tocIndex:2},{value:"[number, number]",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"lineArrow",paraId:3,tocIndex:2},{value:"定义轴线箭头形状，默认为箭头形状",paraId:3,tocIndex:2},{value:"DisplayObject",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"lineArrowOffset",paraId:3,tocIndex:2},{value:"箭头偏移长度",paraId:3,tocIndex:2},{value:"number",paraId:3,tocIndex:2},{value:"15",paraId:3,tocIndex:2},{value:"lineArrowSize",paraId:3,tocIndex:2},{value:"箭头尺寸",paraId:3,tocIndex:2},{value:"number",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"lineLineWidth",paraId:3,tocIndex:2},{value:"轴线宽度",paraId:3,tocIndex:2},{value:"number",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"lineLineDash",paraId:3,tocIndex:2},{value:"轴线描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:3,tocIndex:2},{value:"[number,number]",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"lineStroke",paraId:3,tocIndex:2},{value:"轴线描边色",paraId:3,tocIndex:2},{value:"string",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"lineStrokeOpacity",paraId:3,tocIndex:2},{value:"轴线描边色透明度",paraId:3,tocIndex:2},{value:"number",paraId:3,tocIndex:2},{value:"-",paraId:3,tocIndex:2},{value:"属性",paraId:4,tocIndex:3},{value:"描述",paraId:4,tocIndex:3},{value:"类型",paraId:4,tocIndex:3},{value:"默认值",paraId:4,tocIndex:3},{value:"tick",paraId:4,tocIndex:3},{value:"是否显示刻度",paraId:4,tocIndex:3},{value:"boolean",paraId:4,tocIndex:3},{value:"true",paraId:4,tocIndex:3},{value:"tickFilter",paraId:4,tocIndex:3},{value:"刻度线过滤",paraId:4,tocIndex:3},{value:"(datum, index, data)=>boolean",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"tickFormatter",paraId:4,tocIndex:3},{value:"刻度线格式化，可用于自定义刻度样式，回调函数中会额外返回该刻度的方向",paraId:4,tocIndex:3},{value:"DisplayObject",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"(datum, index, data, Vector)=> DisplayObject",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"tickDirection",paraId:4,tocIndex:3},{value:"刻度朝向，为 ",paraId:4,tocIndex:3},{value:"positive",paraId:4,tocIndex:3},{value:" 时，位于侧轴方向（即主轴顺时针 90 度方向）, 为 ",paraId:4,tocIndex:3},{value:"negative",paraId:4,tocIndex:3},{value:" 时，刻度位于侧轴负方向",paraId:4,tocIndex:3},{value:"'positive'",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"'negative'",paraId:4,tocIndex:3},{value:"'positive'",paraId:4,tocIndex:3},{value:"tickLength",paraId:4,tocIndex:3},{value:"轴线长度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"|",paraId:4,tocIndex:3},{value:"(datum, index, data)=>number",paraId:4,tocIndex:3},{value:"15",paraId:4,tocIndex:3},{value:"tickLineWidth",paraId:4,tocIndex:3},{value:"刻度线宽度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"(datum, index, data, Vector)=>number",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"tickLineDash",paraId:4,tocIndex:3},{value:"刻度线描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:4,tocIndex:3},{value:"[number,number]",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"(datum, index, data, Vector)=>[number,number]",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"tickStroke",paraId:4,tocIndex:3},{value:"刻度线颜色",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"(datum, index, data, Vector)=>string",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"tickStrokeOpacity",paraId:4,tocIndex:3},{value:"刻度线透明度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"(datum, index, data, Vector)=>number",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"属性",paraId:5,tocIndex:4},{value:"描述",paraId:5,tocIndex:4},{value:"类型",paraId:5,tocIndex:4},{value:"默认值",paraId:5,tocIndex:4},{value:"label",paraId:5,tocIndex:4},{value:"是否显示刻度值",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFilter",paraId:5,tocIndex:4},{value:"刻度值过滤",paraId:5,tocIndex:4},{value:"(datum, index, data)=> boolean",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFormatter",paraId:5,tocIndex:4},{value:"刻度值线格式化",paraId:5,tocIndex:4},{value:"DisplayObject",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data, Vector)=> DisplayObject",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"transform",paraId:5,tocIndex:4},{value:"刻度值转换，避免文本之间发生重叠。当前支持超长文本缩略、重叠刻度值隐藏、自动旋转",paraId:5,tocIndex:4},{value:"Transform[]",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelAutoHide",paraId:5,tocIndex:4},{value:"自动隐藏重叠的刻度值，设置 size 值的时候生效",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"HideOverlapCfg",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelAutoRotate",paraId:5,tocIndex:4},{value:"自动旋转刻度，设置 size 值的时候生效值",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"RotateOverlapCfg",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelAutoEllipsis",paraId:5,tocIndex:4},{value:"自动缩略刻度值，设置 size 值的时候生效",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"EllipsisOverlapCfg",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelAutoWrap",paraId:5,tocIndex:4},{value:"自动换行刻度值，设置 size 值的时候是生效",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"WrapOverlapCfg",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelAlign",paraId:5,tocIndex:4},{value:"刻度值对齐方式",paraId:5,tocIndex:4},{value:"- 'horizontal' 始终保持水平",paraId:5,tocIndex:4},{value:" - 'parallel' 平行于坐标轴",paraId:5,tocIndex:4},{value:" - 'perpendicular' 垂直于坐标轴",paraId:5,tocIndex:4},{value:"'horizontal'",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"'parallel'",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"'perpendicular'",paraId:5,tocIndex:4},{value:"'parallel'",paraId:5,tocIndex:4},{value:"labelDirection",paraId:5,tocIndex:4},{value:"刻度值位于轴线的位置，参考",paraId:5,tocIndex:4},{value:"tickDirection",paraId:5,tocIndex:4},{value:"'positive'",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"'negative'",paraId:5,tocIndex:4},{value:"'positive'",paraId:5,tocIndex:4},{value:"labelSpacing",paraId:5,tocIndex:4},{value:"刻度值到其对应刻度的间距",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"0",paraId:5,tocIndex:4},{value:"labelLineWidth",paraId:5,tocIndex:4},{value:"刻度值宽度",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" |",paraId:5,tocIndex:4},{value:"(datum, index, data)=>number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelLineDash",paraId:5,tocIndex:4},{value:"刻度值描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:5,tocIndex:4},{value:"[number,number]",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>[number, number]",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFontSize",paraId:5,tocIndex:4},{value:"刻度值文字大小",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFontFamily",paraId:5,tocIndex:4},{value:"刻度值文字字体",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFontWeight",paraId:5,tocIndex:4},{value:"刻度值字体粗细",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" |",paraId:5,tocIndex:4},{value:"(datum, index, data)=>number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFill",paraId:5,tocIndex:4},{value:"刻度值字体颜色",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelFillOpacity",paraId:5,tocIndex:4},{value:"刻度值文本透明度",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelStroke",paraId:5,tocIndex:4},{value:"刻度值文本描边颜色",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"labelStrokeOpacity",paraId:5,tocIndex:4},{value:"刻度值文本描边透明度",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"(datum, index, data)=>number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"export interface Transform {\n  /** 避免刻度值重叠时的额外边距 */\n  margin?: number[];\n}\n\nexport interface EllipsisOverlapCfg extends Transform {\n  type: 'ellipsis';\n  /** 缩略替换字符，默认为 ... */\n  suffix?: string;\n  /** 文本短于该长度时不再缩略 */\n  minLength: string | number;\n  /** 文本短于该长度时一定会进行缩略 */\n  maxLength?: string | number;\n  /** 每次缩略执行步长 */\n  step?: string | number;\n}\n\nexport interface RotateOverlapCfg extends Transform {\n  type: 'rotate';\n  /** 可选的旋转角度值 */\n  optionalAngles: number[];\n  /** 当旋转无法避免重叠时，是否恢复为默认旋转角度 */\n  recoverWhenFailed?: boolean;\n}\n\nexport interface HideOverlapCfg extends Transform {\n  type: 'hide';\n  /** 保证第一个刻度值不被隐藏 */\n  keepHeader?: boolean;\n  /** 保证最后一个刻度值不被隐藏 */\n  keepTail?: boolean;\n}\n\nexport interface WrapOverlapCfg extends Transform {\n  type: 'wrap';\n  /** 单行最大宽度 */\n  wordWrapWidth?: number;\n  /** 最大行数 */\n  maxLines?: number;\n  recoverWhenFailed?: boolean;\n}\n",paraId:6,tocIndex:4},{value:"在不同坐标系下网格线会具有不同的样式",paraId:7,tocIndex:5},{value:"场景标签",paraId:8,tocIndex:5},{value:"样式",paraId:8,tocIndex:5},{value:"直角坐标系",paraId:8,tocIndex:5},{value:"极坐标系",paraId:8,tocIndex:5},{value:"极坐标系",paraId:8,tocIndex:5},{value:"极坐标系",paraId:8,tocIndex:5},{value:" ",paraId:8,tocIndex:5},{value:"雷达图",paraId:8,tocIndex:5},{value:"属性",paraId:9,tocIndex:5},{value:"描述",paraId:9,tocIndex:5},{value:"类型",paraId:9,tocIndex:5},{value:"默认值",paraId:9,tocIndex:5},{value:"grid",paraId:9,tocIndex:5},{value:"是否显示网格线",paraId:9,tocIndex:5},{value:"boolean",paraId:9,tocIndex:5},{value:"false",paraId:9,tocIndex:5},{value:"gridFilter",paraId:9,tocIndex:5},{value:"网格线过滤",paraId:9,tocIndex:5},{value:"(datum, index, data)=> boolean",paraId:9,tocIndex:5},{value:"-",paraId:9,tocIndex:5},{value:"gridLength",paraId:9,tocIndex:5},{value:"网格线长度。一般情况下，不需要用户配置。",paraId:9,tocIndex:5},{value:"number",paraId:9,tocIndex:5},{value:" | ",paraId:9,tocIndex:5},{value:"(datum, index, data)=> number",paraId:9,tocIndex:5},{value:"0",paraId:9,tocIndex:5},{value:"gridAreaFill",paraId:9,tocIndex:5},{value:"网格线区域颜色",paraId:9,tocIndex:5},{value:"string",paraId:9,tocIndex:5},{value:" | ",paraId:9,tocIndex:5},{value:"string[]",paraId:9,tocIndex:5},{value:"| ",paraId:9,tocIndex:5},{value:"(datum, index, data)=> string",paraId:9,tocIndex:5},{value:"-",paraId:9,tocIndex:5},{value:"gridLineWidth",paraId:9,tocIndex:5},{value:"网格线宽度",paraId:9,tocIndex:5},{value:"number",paraId:9,tocIndex:5},{value:"-",paraId:9,tocIndex:5},{value:"gridLineDash",paraId:9,tocIndex:5},{value:"网格线描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:9,tocIndex:5},{value:"[number,number]",paraId:9,tocIndex:5},{value:"-",paraId:9,tocIndex:5},{value:"gridStroke",paraId:9,tocIndex:5},{value:"网格线颜色",paraId:9,tocIndex:5},{value:"string",paraId:9,tocIndex:5},{value:"-",paraId:9,tocIndex:5},{value:"gridStrokeOpacity",paraId:9,tocIndex:5},{value:"网格线透明度",paraId:9,tocIndex:5},{value:"number",paraId:9,tocIndex:5},{value:"-",paraId:9,tocIndex:5},{value:"支持设置更新时的动画效果",paraId:10,tocIndex:6},{value:"属性",paraId:11,tocIndex:6},{value:"描述",paraId:11,tocIndex:6},{value:"类型",paraId:11,tocIndex:6},{value:"默认值",paraId:11,tocIndex:6},{value:"animate",paraId:11,tocIndex:6},{value:"是否开启动画",paraId:11,tocIndex:6},{value:"boolean",paraId:11,tocIndex:6},{value:" | ",paraId:11,tocIndex:6},{value:"EffectTiming",paraId:11,tocIndex:6},{value:"-",paraId:11,tocIndex:6},{value:"EffectTiming 支持配置的属性如下：",paraId:12,tocIndex:6},{value:"属性",paraId:13,tocIndex:6},{value:"描述",paraId:13,tocIndex:6},{value:"类型",paraId:13,tocIndex:6},{value:"默认值",paraId:13,tocIndex:6},{value:"delay",paraId:13,tocIndex:6},{value:"延迟执行时间 (ms)",paraId:13,tocIndex:6},{value:"number",paraId:13,tocIndex:6},{value:"-",paraId:13,tocIndex:6},{value:"duration",paraId:13,tocIndex:6},{value:"动画持续时间 (ms)",paraId:13,tocIndex:6},{value:"number",paraId:13,tocIndex:6},{value:"-",paraId:13,tocIndex:6},{value:"easing",paraId:13,tocIndex:6},{value:"动画的缓动函数",paraId:13,tocIndex:6},{value:"Easing",paraId:13,tocIndex:6},{value:"-",paraId:13,tocIndex:6},{value:"endDelay",paraId:13,tocIndex:6},{value:"延迟执行时间 (ms)",paraId:13,tocIndex:6},{value:"number",paraId:13,tocIndex:6},{value:"-",paraId:13,tocIndex:6},{value:"fill",paraId:13,tocIndex:6},{value:"动画处于非运行状态时的展示效果",paraId:13,tocIndex:6},{value:"Fill",paraId:13,tocIndex:6},{value:"-",paraId:13,tocIndex:6}]},34776:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(66578);const n=[{value:"绘制图例，G2 提供了两种图例类型：分类图例（Category Legend）和连续图例（Continuous Legend），分别用于展示分类数据和连续数据。",paraId:0},{value:"const config = {\n  legend: {\n    color: {},\n    size: {},\n  },\n}\n",paraId:1},{value:"图例项通常由图标、标签和值三部分构成，在部分场景下也可能仅包含图标及标签。",paraId:2,tocIndex:1},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"itemMarker",paraId:3,tocIndex:1},{value:"图例项图标",paraId:3,tocIndex:1},{value:"DisplayObject",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>DisplayObject",paraId:3,tocIndex:1},{value:"'circle'",paraId:3,tocIndex:1},{value:"itemMarkerFill",paraId:3,tocIndex:1},{value:"图例项图标填充色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemMarkerFillOpacity",paraId:3,tocIndex:1},{value:"图例项图标填充色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemMarkerStroke",paraId:3,tocIndex:1},{value:"图例项图标描边色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemMarkerStrokeOpacity",paraId:3,tocIndex:1},{value:"图例项图标描边色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelText",paraId:3,tocIndex:1},{value:"图例项标签",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelFontSize",paraId:3,tocIndex:1},{value:"图例项标签文字大小",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelFontFamily",paraId:3,tocIndex:1},{value:"图例项标签文字字体",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelFontWeight",paraId:3,tocIndex:1},{value:"图例项标签字体粗细",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelFill",paraId:3,tocIndex:1},{value:"图例项标签字体颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelFillOpacity",paraId:3,tocIndex:1},{value:"图例项标签字体透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelStroke",paraId:3,tocIndex:1},{value:"图例项标签描边色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemLabelStrokeOpacity",paraId:3,tocIndex:1},{value:"图例项标签描边色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueText",paraId:3,tocIndex:1},{value:"图例项值",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueFontSize",paraId:3,tocIndex:1},{value:"图例项值文字大小",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueFontFamily",paraId:3,tocIndex:1},{value:"图例项值文字字体",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueFontWeight",paraId:3,tocIndex:1},{value:"图例项值字体粗细",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueFill",paraId:3,tocIndex:1},{value:"图例项值字体颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueFillOpacity",paraId:3,tocIndex:1},{value:"图例项值字体透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueStroke",paraId:3,tocIndex:1},{value:"图例项值描边色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemValueStrokeOpacity",paraId:3,tocIndex:1},{value:"图例项值描边色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"(datum, index, data)=>number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemSpan",paraId:3,tocIndex:1},{value:"图例项图标、标签和值的空间划分",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:"[1, 1, 1]",paraId:3,tocIndex:1},{value:"itemSpacing",paraId:3,tocIndex:1},{value:"图例项图标、标签和值之间的间距",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemBackgroundFill",paraId:3,tocIndex:1},{value:"背景颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"itemBackgroundFillOpacity",paraId:3,tocIndex:1},{value:"背景透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"默认采用",paraId:4,tocIndex:2},{value:"流式布局",paraId:4,tocIndex:2},{value:"。",paraId:4,tocIndex:2},{value:"当指定 ",paraId:5,tocIndex:2},{value:"cols",paraId:5,tocIndex:2},{value:" 之后会采用",paraId:5,tocIndex:2},{value:"网格布局",paraId:5,tocIndex:2},{value:"。",paraId:5,tocIndex:2},{value:"属性",paraId:6,tocIndex:2},{value:"描述",paraId:6,tocIndex:2},{value:"类型",paraId:6,tocIndex:2},{value:"默认值",paraId:6,tocIndex:2},{value:"layout",paraId:6,tocIndex:2},{value:"图例项布局方式，网格布局、流式布局",paraId:6,tocIndex:2},{value:"'flex'",paraId:6,tocIndex:2},{value:"|",paraId:6,tocIndex:2},{value:"'grid'",paraId:6,tocIndex:2},{value:"'flex'",paraId:6,tocIndex:2},{value:"cols",paraId:6,tocIndex:2},{value:"指定每列显示的图例项数量，为空时表示列数不受限制",paraId:6,tocIndex:2},{value:"number",paraId:6,tocIndex:2},{value:"-",paraId:6,tocIndex:2},{value:"colPadding",paraId:6,tocIndex:2},{value:"图例项之间的横向间隔",paraId:6,tocIndex:2},{value:"number",paraId:6,tocIndex:2},{value:"0",paraId:6,tocIndex:2},{value:"rowPadding",paraId:6,tocIndex:2},{value:"图例项之间的纵向间隔",paraId:6,tocIndex:2},{value:"number",paraId:6,tocIndex:2},{value:"0",paraId:6,tocIndex:2},{value:"maxRows",paraId:6,tocIndex:2},{value:"最多多少行",paraId:6,tocIndex:2},{value:"number",paraId:6,tocIndex:2},{value:"3",paraId:6,tocIndex:2},{value:"maxCols",paraId:6,tocIndex:2},{value:"最多多少列",paraId:6,tocIndex:2},{value:"number",paraId:6,tocIndex:2},{value:"3",paraId:6,tocIndex:2},{value:"图例项分页显示时能够控制分页器的行为。",paraId:7,tocIndex:3},{value:"属性",paraId:8,tocIndex:3},{value:"描述",paraId:8,tocIndex:3},{value:"类型",paraId:8,tocIndex:3},{value:"默认值",paraId:8,tocIndex:3},{value:"navEffect",paraId:8,tocIndex:3},{value:"翻页显示效果",paraId:8,tocIndex:3},{value:"参见 ",paraId:8,tocIndex:3},{value:"Web Animations API",paraId:8,tocIndex:3},{value:"linear",paraId:8,tocIndex:3},{value:"navDuration",paraId:8,tocIndex:3},{value:"单次翻页动效时长",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:"200",paraId:8,tocIndex:3},{value:"navOrient",paraId:8,tocIndex:3},{value:"翻页滚动方向",paraId:8,tocIndex:3},{value:" - 横向",paraId:8,tocIndex:3},{value:"'horizontal'",paraId:8,tocIndex:3},{value:" - 纵向",paraId:8,tocIndex:3},{value:"'vertical'",paraId:8,tocIndex:3},{value:"'horizontal'",paraId:8,tocIndex:3},{value:"|",paraId:8,tocIndex:3},{value:"'vertical'",paraId:8,tocIndex:3},{value:"'horizontal'",paraId:8,tocIndex:3},{value:"navInitPage",paraId:8,tocIndex:3},{value:"默认展示页数",paraId:8,tocIndex:3},{value:"number",paraId:8,tocIndex:3},{value:"0",paraId:8,tocIndex:3},{value:"navLoop",paraId:8,tocIndex:3},{value:"是否启用循环翻页",paraId:8,tocIndex:3},{value:"boolean",paraId:8,tocIndex:3},{value:"false",paraId:8,tocIndex:3},{value:"navFormatter",paraId:8,tocIndex:3},{value:"页码文本格式化",paraId:8,tocIndex:3},{value:"(current: number, total: number) => string;",paraId:8,tocIndex:3},{value:"-",paraId:8,tocIndex:3},{value:"事件类型",paraId:9,tocIndex:4},{value:"描述",paraId:9,tocIndex:4},{value:"类型",paraId:9,tocIndex:4},{value:"click",paraId:9,tocIndex:4},{value:"点击图例项时触发",paraId:9,tocIndex:4},{value:"(item:Selection)=>void",paraId:9,tocIndex:4},{value:"mouseenter",paraId:9,tocIndex:4},{value:"鼠标移入图例项时触发",paraId:9,tocIndex:4},{value:"(item: Selection)=>void",paraId:9,tocIndex:4},{value:"mouseleave",paraId:9,tocIndex:4},{value:"鼠标移出图例项时触发",paraId:9,tocIndex:4},{value:"(item:Selection)=>void",paraId:9,tocIndex:4},{value:"使用离散数据绘制视图时采用的图例类型。",paraId:10,tocIndex:5},{value:"const config = {\n  legend: {\n    y: {\n      ribbonLen: 200,\n      ribbonSize: 30,\n      labelFormatter: (datum, index, data) => datum.people.toLocaleString(),\n      type: 'size',\n      color: [\n        '#d0e3fa',\n        '#acc7f6',\n        '#8daaf2',\n        '#6d8eea',\n        '#4d73cd',\n        '#325bb1',\n        '#5a3e75',\n        '#8c3c79',\n        '#e23455',\n        '#e7655b',\n      ],\n    },\n  },\n}\n\n",paraId:11,tocIndex:5},{value:"连续数据的图例具有 4 种样式，分别为：",paraId:12,tocIndex:6},{value:"连续表示 ",paraId:13,tocIndex:6},{value:"默认",paraId:13,tocIndex:6},{value:"范围表示 ",paraId:14,tocIndex:6},{value:"block=true",paraId:14,tocIndex:6},{value:"尺寸表示 ",paraId:15,tocIndex:6},{value:"type='size'",paraId:15,tocIndex:6},{value:"尺寸、范围表示 ",paraId:16,tocIndex:6},{value:"type='size'",paraId:16,tocIndex:6},{value:" ",paraId:16,tocIndex:6},{value:"block=true",paraId:16,tocIndex:6},{value:"属性",paraId:17,tocIndex:6},{value:"描述",paraId:17,tocIndex:6},{value:"类型",paraId:17,tocIndex:6},{value:"默认值",paraId:17,tocIndex:6},{value:"color",paraId:17,tocIndex:6},{value:"色带颜色，为数组时会从中按序取色",paraId:17,tocIndex:6},{value:"string[]",paraId:17,tocIndex:6},{value:" | ",paraId:17,tocIndex:6},{value:"interpolate",paraId:17,tocIndex:6},{value:"-",paraId:17,tocIndex:6},{value:"block",paraId:17,tocIndex:6},{value:"是否按区间显示",paraId:17,tocIndex:6},{value:"boolean",paraId:17,tocIndex:6},{value:"false",paraId:17,tocIndex:6},{value:"type",paraId:17,tocIndex:6},{value:"连续图例类型",paraId:17,tocIndex:6},{value:"'size'",paraId:17,tocIndex:6},{value:" | ",paraId:17,tocIndex:6},{value:"'color'",paraId:17,tocIndex:6},{value:"'color'",paraId:17,tocIndex:6},{value:"ribbonSize",paraId:17,tocIndex:6},{value:"色带尺寸",paraId:17,tocIndex:6},{value:"number",paraId:17,tocIndex:6},{value:"-",paraId:17,tocIndex:6},{value:"ribbonFill",paraId:17,tocIndex:6},{value:"色带颜色",paraId:17,tocIndex:6},{value:"string",paraId:17,tocIndex:6},{value:"-",paraId:17,tocIndex:6},{value:"ribbonFillOpacity",paraId:17,tocIndex:6},{value:"色带透明度",paraId:17,tocIndex:6},{value:"number",paraId:17,tocIndex:6},{value:"-",paraId:17,tocIndex:6},{value:"ribbonStroke",paraId:17,tocIndex:6},{value:"色带描边色",paraId:17,tocIndex:6},{value:"string",paraId:17,tocIndex:6},{value:"-",paraId:17,tocIndex:6},{value:"ribbonStrokeOpacity",paraId:17,tocIndex:6},{value:"色带描边色透明度",paraId:17,tocIndex:6},{value:"number",paraId:17,tocIndex:6},{value:"-",paraId:17,tocIndex:6},{value:"color 插值器参考 ",paraId:18,tocIndex:6},{value:"d3-interpolate",paraId:18,tocIndex:6},{value:"滑动窗口标记了当前的值选取范围，通过与滑动窗口交互能够对视图中的值范围进行选择。",paraId:19,tocIndex:7},{value:"\n ",paraId:20},{value:"属性",paraId:21,tocIndex:7},{value:"描述",paraId:21,tocIndex:7},{value:"类型",paraId:21,tocIndex:7},{value:"默认值",paraId:21,tocIndex:7},{value:"handle",paraId:21,tocIndex:7},{value:"是否显示滑动手柄",paraId:21,tocIndex:7},{value:"boolean",paraId:21,tocIndex:7},{value:"true",paraId:21,tocIndex:7},{value:"handleLabel",paraId:21,tocIndex:7},{value:"是否显示手柄文本",paraId:21,tocIndex:7},{value:"boolean",paraId:21,tocIndex:7},{value:"true",paraId:21,tocIndex:7},{value:"handleFormatter",paraId:21,tocIndex:7},{value:"手柄文本格式化",paraId:21,tocIndex:7},{value:"(datum)=>string",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"slidable",paraId:21,tocIndex:7},{value:"窗口是否可以滑动",paraId:21,tocIndex:7},{value:"boolean",paraId:21,tocIndex:7},{value:"true",paraId:21,tocIndex:7},{value:"range",paraId:21,tocIndex:7},{value:"默认选择范围",paraId:21,tocIndex:7},{value:"[number, number]",paraId:21,tocIndex:7},{value:"[min, max]",paraId:21,tocIndex:7},{value:"step",paraId:21,tocIndex:7},{value:"单次滑动步长",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:"1",paraId:21,tocIndex:7},{value:"handleMarkerFill",paraId:21,tocIndex:7},{value:"手柄图标颜色",paraId:21,tocIndex:7},{value:"string",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleMarkerFillOpacity",paraId:21,tocIndex:7},{value:"手柄图标色透明度",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleMarkerStroke",paraId:21,tocIndex:7},{value:"手柄图标描边色",paraId:21,tocIndex:7},{value:"string",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleMarkerStrokeOpacity",paraId:21,tocIndex:7},{value:"手柄图标描边色透明度",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelFontSize",paraId:21,tocIndex:7},{value:"手柄文字大小",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:" | ",paraId:21,tocIndex:7},{value:"Function<number>",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelFontFamily",paraId:21,tocIndex:7},{value:"手柄文字字体",paraId:21,tocIndex:7},{value:"string",paraId:21,tocIndex:7},{value:" | ",paraId:21,tocIndex:7},{value:"Function<string>",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelFontWeight",paraId:21,tocIndex:7},{value:"手柄字体粗细",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:" |",paraId:21,tocIndex:7},{value:"Function<number>",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelFill",paraId:21,tocIndex:7},{value:"手柄字体颜色",paraId:21,tocIndex:7},{value:"string",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelFillOpacity",paraId:21,tocIndex:7},{value:"手柄文本透明度",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelStroke",paraId:21,tocIndex:7},{value:"手柄文本描边色",paraId:21,tocIndex:7},{value:"string",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"handleLabelStrokeOpacity",paraId:21,tocIndex:7},{value:"手柄文本描边色透明度",paraId:21,tocIndex:7},{value:"number",paraId:21,tocIndex:7},{value:"-",paraId:21,tocIndex:7},{value:"属性",paraId:22,tocIndex:8},{value:"描述",paraId:22,tocIndex:8},{value:"类型",paraId:22,tocIndex:8},{value:"默认值",paraId:22,tocIndex:8},{value:"label",paraId:22,tocIndex:8},{value:"是否显示刻度值",paraId:22,tocIndex:8},{value:"boolean",paraId:22,tocIndex:8},{value:"true`",paraId:22,tocIndex:8},{value:"labelFormatter",paraId:22,tocIndex:8},{value:"刻度值格式化",paraId:22,tocIndex:8},{value:"(datum, index, data)=>string",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"labelFilter",paraId:22,tocIndex:8},{value:"刻度值过滤",paraId:22,tocIndex:8},{value:"(datum, index, data)=>boolean",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"labelDirection",paraId:22,tocIndex:8},{value:"刻度值位于色带的位置，参考 axis ",paraId:22,tocIndex:8},{value:"direction",paraId:22,tocIndex:8},{value:"'positive'",paraId:22,tocIndex:8},{value:" | ",paraId:22,tocIndex:8},{value:"'negative'",paraId:22,tocIndex:8},{value:"'positive'",paraId:22,tocIndex:8},{value:"labelSpacing",paraId:22,tocIndex:8},{value:"刻度值到色带的间距",paraId:22,tocIndex:8},{value:"number",paraId:22,tocIndex:8},{value:"5",paraId:22,tocIndex:8},{value:"labelAlign",paraId:22,tocIndex:8},{value:"刻度值对齐位置",paraId:22,tocIndex:8},{value:" - ",paraId:22,tocIndex:8},{value:"'value'",paraId:22,tocIndex:8},{value:" 对齐到刻度",paraId:22,tocIndex:8},{value:"- ",paraId:22,tocIndex:8},{value:"'range'",paraId:22,tocIndex:8},{value:" 对齐到范围",paraId:22,tocIndex:8},{value:"'value'",paraId:22,tocIndex:8},{value:"|",paraId:22,tocIndex:8},{value:"'range'",paraId:22,tocIndex:8},{value:"'value'",paraId:22,tocIndex:8},{value:"labelFontSize",paraId:22,tocIndex:8},{value:"刻度值文字大小",paraId:22,tocIndex:8},{value:"number",paraId:22,tocIndex:8},{value:" | ",paraId:22,tocIndex:8},{value:"Function<number>",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"labelFontFamily",paraId:22,tocIndex:8},{value:"刻度值文字字体",paraId:22,tocIndex:8},{value:"string",paraId:22,tocIndex:8},{value:" | ",paraId:22,tocIndex:8},{value:"Function<string>",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"labelFontWeight",paraId:22,tocIndex:8},{value:"刻度值字体粗细",paraId:22,tocIndex:8},{value:"number",paraId:22,tocIndex:8},{value:" | ",paraId:22,tocIndex:8},{value:"Function<number>",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"labelStroke",paraId:22,tocIndex:8},{value:"刻度值字体颜色",paraId:22,tocIndex:8},{value:"string",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"labelStrokeOpacity",paraId:22,tocIndex:8},{value:"刻度值文本透明度",paraId:22,tocIndex:8},{value:"number",paraId:22,tocIndex:8},{value:"-",paraId:22,tocIndex:8},{value:"刻度值对齐方式",paraId:23,tocIndex:8},{value:"对齐到刻度",paraId:24,tocIndex:8},{value:"\n ",paraId:20},{value:"对齐到范围",paraId:25,tocIndex:8},{value:"\n ",paraId:20},{value:"指示器是在与连续图例交互过程中指示当前所在位置所表示值大小的提示组件。",paraId:26,tocIndex:9},{value:"属性",paraId:27,tocIndex:9},{value:"描述",paraId:27,tocIndex:9},{value:"类型",paraId:27,tocIndex:9},{value:"默认值",paraId:27,tocIndex:9},{value:"indicator",paraId:27,tocIndex:9},{value:"是否显示值指示器",paraId:27,tocIndex:9},{value:"boolean",paraId:27,tocIndex:9},{value:"true",paraId:27,tocIndex:9},{value:"indicatorFormatter",paraId:27,tocIndex:9},{value:"值指示器格式化",paraId:27,tocIndex:9},{value:"(datum)=>string | DisplayObject",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorLabelFontSize",paraId:27,tocIndex:9},{value:"值指示器文本文字大小",paraId:27,tocIndex:9},{value:"number",paraId:27,tocIndex:9},{value:" | ",paraId:27,tocIndex:9},{value:"Function<number>",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorLabelFontFamily",paraId:27,tocIndex:9},{value:"值指示器文本文字字体",paraId:27,tocIndex:9},{value:"string",paraId:27,tocIndex:9},{value:" | ",paraId:27,tocIndex:9},{value:"Function<string>",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorLabelFontWeight",paraId:27,tocIndex:9},{value:"值指示器文本字体粗细",paraId:27,tocIndex:9},{value:"number",paraId:27,tocIndex:9},{value:" |",paraId:27,tocIndex:9},{value:"Function<number>",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorLabelStroke",paraId:27,tocIndex:9},{value:"值指示器字体颜色",paraId:27,tocIndex:9},{value:"string",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorLabelStrokeOpacity",paraId:27,tocIndex:9},{value:"值指示器文本透明度",paraId:27,tocIndex:9},{value:"number",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorBackgroundFill",paraId:27,tocIndex:9},{value:"值指示器背景颜色",paraId:27,tocIndex:9},{value:"string",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorBackgroundFillOpacity",paraId:27,tocIndex:9},{value:"值指示器背景透明度",paraId:27,tocIndex:9},{value:"number",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorBackgroundStroke",paraId:27,tocIndex:9},{value:"值指示器背景描边色",paraId:27,tocIndex:9},{value:"string",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"indicatorBackgroundStrokeOpacity",paraId:27,tocIndex:9},{value:"值指示器背景描边色透明度",paraId:27,tocIndex:9},{value:"number",paraId:27,tocIndex:9},{value:"-",paraId:27,tocIndex:9},{value:"事件类型",paraId:28,tocIndex:10},{value:"描述",paraId:28,tocIndex:10},{value:"类型",paraId:28,tocIndex:10},{value:"valuechange",paraId:28,tocIndex:10},{value:"滑动窗口选取范围改变时触发",paraId:28,tocIndex:10},{value:"(range: [number, number])=>void",paraId:28,tocIndex:10},{value:"indicate",paraId:28,tocIndex:10},{value:"指示器值改变时触发",paraId:28,tocIndex:10},{value:"(value: number, range: [number, number])=>void",paraId:28,tocIndex:10},{value:"属性",paraId:29,tocIndex:12},{value:"描述",paraId:29,tocIndex:12},{value:"类型",paraId:29,tocIndex:12},{value:"默认值",paraId:29,tocIndex:12},{value:"title",paraId:29,tocIndex:12},{value:"关闭标题或设置标题内容",paraId:29,tocIndex:12},{value:"false",paraId:29,tocIndex:12},{value:"|",paraId:29,tocIndex:12},{value:"string",paraId:29,tocIndex:12},{value:"true",paraId:29,tocIndex:12},{value:"titleSpacing",paraId:29,tocIndex:12},{value:"标题到内容区域的间距",paraId:29,tocIndex:12},{value:"number",paraId:29,tocIndex:12},{value:" | ",paraId:29,tocIndex:12},{value:"number[]",paraId:29,tocIndex:12},{value:"0",paraId:29,tocIndex:12},{value:"titleInset",paraId:29,tocIndex:12},{value:"标题文本内边距",paraId:29,tocIndex:12},{value:"number",paraId:29,tocIndex:12},{value:" | ",paraId:29,tocIndex:12},{value:"number[]",paraId:29,tocIndex:12},{value:"0",paraId:29,tocIndex:12},{value:"titlePosition",paraId:29,tocIndex:12},{value:"标题所处位置。可采用简写形式，如",paraId:29,tocIndex:12},{value:"'i'",paraId:29,tocIndex:12},{value:" 表示",paraId:29,tocIndex:12},{value:"'inner'",paraId:29,tocIndex:12},{value:"'top'",paraId:29,tocIndex:12},{value:" | ",paraId:29,tocIndex:12},{value:"'bottom'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'left'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'right'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'left-top'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'left-bottom'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'right-top'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'right-bottom'",paraId:29,tocIndex:12},{value:" |",paraId:29,tocIndex:12},{value:"'inner'",paraId:29,tocIndex:12},{value:" | ",paraId:29,tocIndex:12},{value:"'lt'",paraId:29,tocIndex:12},{value:"-",paraId:29,tocIndex:12},{value:"titleFontSize",paraId:29,tocIndex:12},{value:"标题文字大小",paraId:29,tocIndex:12},{value:"number",paraId:29,tocIndex:12},{value:"-",paraId:29,tocIndex:12},{value:"titleFontFamily",paraId:29,tocIndex:12},{value:"标题文字字体",paraId:29,tocIndex:12},{value:"string",paraId:29,tocIndex:12},{value:"-",paraId:29,tocIndex:12},{value:"titleFontWeight",paraId:29,tocIndex:12},{value:"标题字体粗细",paraId:29,tocIndex:12},{value:"number",paraId:29,tocIndex:12},{value:"-",paraId:29,tocIndex:12},{value:"titleFill",paraId:29,tocIndex:12},{value:"标题字体颜色",paraId:29,tocIndex:12},{value:"string",paraId:29,tocIndex:12},{value:"titleFillOpacity",paraId:29,tocIndex:12},{value:"标题字体颜色透明度",paraId:29,tocIndex:12},{value:"number",paraId:29,tocIndex:12},{value:"titleStroke",paraId:29,tocIndex:12},{value:"标题字体描边颜色",paraId:29,tocIndex:12},{value:"string",paraId:29,tocIndex:12},{value:"-",paraId:29,tocIndex:12},{value:"titleStrokeOpacity",paraId:29,tocIndex:12},{value:"标题字体描边颜色透明度",paraId:29,tocIndex:12},{value:"number",paraId:29,tocIndex:12},{value:"-",paraId:29,tocIndex:12},{value:"Legend 组件支持调整其在画布中的位置，通过 ",paraId:30,tocIndex:13},{value:"layout",paraId:30,tocIndex:13},{value:" 属性来设置。",paraId:30,tocIndex:13},{value:"\n目前支持基本的 Flex 布局方式，支持的属性包括: ",paraId:30,tocIndex:13},{value:"justifyContent",paraId:30,tocIndex:13},{value:", ",paraId:30,tocIndex:13},{value:"alignItems",paraId:30,tocIndex:13},{value:", ",paraId:30,tocIndex:13},{value:"flexDirection",paraId:30,tocIndex:13},{value:"。",paraId:30,tocIndex:13},{value:"属性",paraId:31,tocIndex:13},{value:"描述",paraId:31,tocIndex:13},{value:"类型",paraId:31,tocIndex:13},{value:"默认值",paraId:31,tocIndex:13},{value:"justifyContent",paraId:31,tocIndex:13},{value:"主轴对齐方式",paraId:31,tocIndex:13},{value:"'flex-start'",paraId:31,tocIndex:13},{value:" | ",paraId:31,tocIndex:13},{value:"'flex-end'",paraId:31,tocIndex:13},{value:" | ",paraId:31,tocIndex:13},{value:"'center'",paraId:31,tocIndex:13},{value:"'flex-start'",paraId:31,tocIndex:13},{value:"alignItems",paraId:31,tocIndex:13},{value:"交叉轴对齐",paraId:31,tocIndex:13},{value:"'flex-start'",paraId:31,tocIndex:13},{value:" | ",paraId:31,tocIndex:13},{value:"'flex-end'",paraId:31,tocIndex:13},{value:" | ",paraId:31,tocIndex:13},{value:"'center'",paraId:31,tocIndex:13},{value:"'flex-start'",paraId:31,tocIndex:13},{value:"flexDirection",paraId:31,tocIndex:13},{value:"主轴方向",paraId:31,tocIndex:13},{value:"'row'",paraId:31,tocIndex:13},{value:" | ",paraId:31,tocIndex:13},{value:"'column'",paraId:31,tocIndex:13},{value:"'row'",paraId:31,tocIndex:13},{value:"const config = {\n  legend: {\n    color: {\n      layout: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      },\n    },\n  },\n}\n",paraId:32,tocIndex:13}]},78317:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(25576);const n=[{value:"滚动条（scrollbar）是一个交互组件，当显示区域大小不足以容纳全部信息时，可以将超出部分隐藏，并通过滚动条的垂直或横向滑动来显示出被隐藏部分。",paraId:0},{value:"内容是否超出显示区域取决于内容的多少以及显示区域的尺寸，当需要显示的内容在纵向方向上超过显示区域的大小时，应当使用垂直滚动条以控制显示的部分，横向滚动条同理。",paraId:1,tocIndex:0},{value:"const config = {\n  scrollbar: {\n    x: {}\n  }\n}\n",paraId:2,tocIndex:1},{value:"属性",paraId:3,tocIndex:3},{value:"描述",paraId:3,tocIndex:3},{value:"类型",paraId:3,tocIndex:3},{value:"默认值",paraId:3,tocIndex:3},{value:"ratio",paraId:3,tocIndex:3},{value:"滚动条的比例",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:"0.5",paraId:3,tocIndex:3},{value:"value",paraId:3,tocIndex:3},{value:"滚动条的起始位置",paraId:3,tocIndex:3},{value:"[0, 1]",paraId:3,tocIndex:3},{value:"0",paraId:3,tocIndex:3},{value:"slidable",paraId:3,tocIndex:3},{value:"是否可以拖动",paraId:3,tocIndex:3},{value:"boolean",paraId:3,tocIndex:3},{value:"true",paraId:3,tocIndex:3},{value:"scrollable",paraId:3,tocIndex:3},{value:"是否支持滚轮滚动",paraId:3,tocIndex:3},{value:"boolean",paraId:3,tocIndex:3},{value:"true",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"isRound",paraId:3,tocIndex:3},{value:"滚动条样式是否为圆角",paraId:3,tocIndex:3},{value:"boolean",paraId:3,tocIndex:3},{value:"false",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"padding",paraId:3,tocIndex:3},{value:"滚动条轨道内边距",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:" | ",paraId:3,tocIndex:3},{value:"number[]",paraId:3,tocIndex:3},{value:"2",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"thumbFill",paraId:3,tocIndex:3},{value:"滚动条滑块填充色",paraId:3,tocIndex:3},{value:"string",paraId:3,tocIndex:3},{value:"–",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"thumbFillOpacity",paraId:3,tocIndex:3},{value:"滚动条滑块填充色透明度",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:"–",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"thumbStroke",paraId:3,tocIndex:3},{value:"滚动条滑块描边色",paraId:3,tocIndex:3},{value:"string",paraId:3,tocIndex:3},{value:"–",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"thumbStrokeOpacity",paraId:3,tocIndex:3},{value:"滚动条滑块描边色透明度",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:"–",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"trackSize",paraId:3,tocIndex:3},{value:"滚动条的轨道宽度",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:"10",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"trackFill",paraId:3,tocIndex:3},{value:"滚动条轨道填充色",paraId:3,tocIndex:3},{value:"string",paraId:3,tocIndex:3},{value:"-",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"trackFillOpacity",paraId:3,tocIndex:3},{value:"滚动条轨道填充色透明度",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:"-",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"trackStroke",paraId:3,tocIndex:3},{value:"滚动条轨道描边色",paraId:3,tocIndex:3},{value:"string",paraId:3,tocIndex:3},{value:"–",paraId:3,tocIndex:3},{value:"style.",paraId:3,tocIndex:3},{value:"trackStrokeOpacity",paraId:3,tocIndex:3},{value:"滚动条轨道描边色透明度",paraId:3,tocIndex:3},{value:"number",paraId:3,tocIndex:3},{value:"–",paraId:3,tocIndex:3},{value:"属性",paraId:4,tocIndex:4},{value:"描述",paraId:4,tocIndex:4},{value:"类型",paraId:4,tocIndex:4},{value:"valuechange",paraId:4,tocIndex:4},{value:"发生滚动变化时触发，通过事件监听",paraId:4,tocIndex:4},{value:"function(e)",paraId:4,tocIndex:4},{value:"const config = {\n  scrollbar: {\n    x: {}\n  },\n  onReady: (chart) => {\n    const { canvas } = chart.getContext();\n    const { document } = canvas;\n    document.querySelector('.g2-scrollbar').addEventListener('valuechange', (evt) => {\n      console.info(evt.detail);\n    });\n  }\n}\n",paraId:5,tocIndex:4}]},410:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(30334);const n=[{value:"缩略轴（slider）是一种辅助看数据的组件，它将大量数据浓缩到一个轴上，既可以缩小宏观看数据全貌，又可以放大微观看数据的片段，同时还可以拖拽观察数据在一定区间内的演变。",paraId:0},{value:"缩略轴是值域数据的浓缩，它跟位置通道 ",paraId:1,tocIndex:0},{value:"x",paraId:1,tocIndex:0},{value:", ",paraId:1,tocIndex:0},{value:"y",paraId:1,tocIndex:0},{value:" 对应的比例尺的类型息息相关。一般来说时间类型上使用缩略轴的频率高，连续轴使用缩略轴频次低、分类轴几乎不会使用到缩略轴。",paraId:1,tocIndex:0},{value:"时间轴，数据跨度非常大，【高频使用】，比如一组时序数据跨度 10 年，需观察这期间数据变化趋势时，建议开启缩略轴；",paraId:2,tocIndex:0},{value:"时间轴，数据密度很高，【高频使用】，比如分钟级更新的实时数据，当需要查看一天内的数据走势时，建议开启缩略轴；",paraId:2,tocIndex:0},{value:"连续轴，数据密度很高，【低频使用】比如查看 1-100 岁平均身高分布，开启缩略轴可以全局查看身高分布；",paraId:2,tocIndex:0},{value:"分类轴【不建议使用】。",paraId:2,tocIndex:0},{value:"const config = {\n  slider: {\n    x: {}\n  }\n}\n",paraId:3,tocIndex:1},{value:"属性",paraId:4,tocIndex:3},{value:"描述",paraId:4,tocIndex:3},{value:"类型",paraId:4,tocIndex:3},{value:"默认值",paraId:4,tocIndex:3},{value:"values",paraId:4,tocIndex:3},{value:"初始选区范围，位于 0 ～ 1 区间",paraId:4,tocIndex:3},{value:"[number, number]",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"slidable",paraId:4,tocIndex:3},{value:"是否允许拖动选取和手柄",paraId:4,tocIndex:3},{value:"boolean",paraId:4,tocIndex:3},{value:"true",paraId:4,tocIndex:3},{value:"brushable",paraId:4,tocIndex:3},{value:"是否启用刷选",paraId:4,tocIndex:3},{value:"boolean",paraId:4,tocIndex:3},{value:"true",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"padding",paraId:4,tocIndex:3},{value:"迷你图的内边距",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:" | ",paraId:4,tocIndex:3},{value:"number[]",paraId:4,tocIndex:3},{value:"0",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"selectionFill",paraId:4,tocIndex:3},{value:"缩略轴选区填充色",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"selectionFillOpacity",paraId:4,tocIndex:3},{value:"缩略轴选区填充色透明度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"-",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"selectionStroke",paraId:4,tocIndex:3},{value:"缩略轴选区描边色",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:"–",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"selectionStrokeOpacity",paraId:4,tocIndex:3},{value:"缩略轴选区描边色透明度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"–",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"trackFill",paraId:4,tocIndex:3},{value:"缩略轴滑轨填充色",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:"–",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"trackFillOpacity",paraId:4,tocIndex:3},{value:"缩略轴滑轨填充色透明度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"–",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"trackStroke",paraId:4,tocIndex:3},{value:"缩略轴滑轨描边色",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:"–",paraId:4,tocIndex:3},{value:"style.",paraId:4,tocIndex:3},{value:"trackStrokeOpacity",paraId:4,tocIndex:3},{value:"缩略轴滑轨描边色透明度",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"–",paraId:4,tocIndex:3},{value:"属性",paraId:5,tocIndex:4},{value:"描述",paraId:5,tocIndex:4},{value:"类型",paraId:5,tocIndex:4},{value:"默认值",paraId:5,tocIndex:4},{value:"handle",paraId:5,tocIndex:4},{value:"是否显示拖动手柄",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:"true",paraId:5,tocIndex:4},{value:"label",paraId:5,tocIndex:4},{value:"是否显示拖动手柄文本",paraId:5,tocIndex:4},{value:"boolean",paraId:5,tocIndex:4},{value:"true",paraId:5,tocIndex:4},{value:"formatter",paraId:5,tocIndex:4},{value:"拖动手柄标签格式化",paraId:5,tocIndex:4},{value:"(value: number)=>string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleIconSize",paraId:5,tocIndex:4},{value:"缩略轴手柄大小",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"10",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleIconFill",paraId:5,tocIndex:4},{value:"缩略轴手柄填充色",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleIconFillOpacity",paraId:5,tocIndex:4},{value:"缩略轴手柄填充色透明度",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleIconStroke",paraId:5,tocIndex:4},{value:"缩略轴手柄描边色",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleIconStrokeOpacity",paraId:5,tocIndex:4},{value:"缩略轴手柄描边色透明度",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleLabelFontSize",paraId:5,tocIndex:4},{value:"缩略轴手柄标签字体大小",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleLabelFontWeight",paraId:5,tocIndex:4},{value:"缩略轴手柄标签字体权重高",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:" | ",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleLabelStroke",paraId:5,tocIndex:4},{value:"缩略轴手柄标签字体颜色",paraId:5,tocIndex:4},{value:"string",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"style.",paraId:5,tocIndex:4},{value:"handleLabelStrokeOpacity",paraId:5,tocIndex:4},{value:"缩略轴手柄标签字体透明度",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"-",paraId:5,tocIndex:4},{value:"属性",paraId:6,tocIndex:5},{value:"描述",paraId:6,tocIndex:5},{value:"类型",paraId:6,tocIndex:5},{value:"默认值",paraId:6,tocIndex:5},{value:"sparklineType",paraId:6,tocIndex:5},{value:"迷你图类型：折线图、直方图",paraId:6,tocIndex:5},{value:"line",paraId:6,tocIndex:5},{value:" | ",paraId:6,tocIndex:5},{value:"column",paraId:6,tocIndex:5},{value:"line",paraId:6,tocIndex:5},{value:"sparklineIsStack",paraId:6,tocIndex:5},{value:"是否对数据进行堆叠",paraId:6,tocIndex:5},{value:"boolean",paraId:6,tocIndex:5},{value:"false",paraId:6,tocIndex:5},{value:"sparklineRange",paraId:6,tocIndex:5},{value:"指定值范围，未指定时将使用 data 的最小值和最大值",paraId:6,tocIndex:5},{value:"[number, number]",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineColor",paraId:6,tocIndex:5},{value:"指定颜色",paraId:6,tocIndex:5},{value:"string",paraId:6,tocIndex:5},{value:" | ",paraId:6,tocIndex:5},{value:"string[]",paraId:6,tocIndex:5},{value:" | ",paraId:6,tocIndex:5},{value:"(index: number)=>string",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineSmooth",paraId:6,tocIndex:5},{value:"适用于折线图，平滑曲线",paraId:6,tocIndex:5},{value:"boolean",paraId:6,tocIndex:5},{value:"false",paraId:6,tocIndex:5},{value:"sparklineLineStroke",paraId:6,tocIndex:5},{value:"适用于折线图，线条颜色",paraId:6,tocIndex:5},{value:"string",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineLineStrokeOpacity",paraId:6,tocIndex:5},{value:"适用于折线图，线条透明度",paraId:6,tocIndex:5},{value:"number",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineLineLineDash",paraId:6,tocIndex:5},{value:"适用于折线图，线条的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:6,tocIndex:5},{value:"[number,number]",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineAreaFill",paraId:6,tocIndex:5},{value:"适用于折线图，填充区域颜色",paraId:6,tocIndex:5},{value:"string",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineAreaFillOpacity",paraId:6,tocIndex:5},{value:"适用于折线图，填充区域透明度",paraId:6,tocIndex:5},{value:"number",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineColumnFill",paraId:6,tocIndex:5},{value:"适用于直方图，条形颜色",paraId:6,tocIndex:5},{value:"string",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineColumnFillOpacity",paraId:6,tocIndex:5},{value:"适用于直方图，条形透明度",paraId:6,tocIndex:5},{value:"number",paraId:6,tocIndex:5},{value:"-",paraId:6,tocIndex:5},{value:"sparklineIsGroup",paraId:6,tocIndex:5},{value:"适用于直方图，是否分组显示",paraId:6,tocIndex:5},{value:"boolean",paraId:6,tocIndex:5},{value:"false",paraId:6,tocIndex:5},{value:"sparklineSpacing",paraId:6,tocIndex:5},{value:"适用于直方图，分组直方的间距",paraId:6,tocIndex:5},{value:"number",paraId:6,tocIndex:5},{value:"0",paraId:6,tocIndex:5},{value:"属性",paraId:7,tocIndex:6},{value:"描述",paraId:7,tocIndex:6},{value:"类型",paraId:7,tocIndex:6},{value:"valuechange",paraId:7,tocIndex:6},{value:"选区发生变化时触发，通过事件监听",paraId:7,tocIndex:6},{value:"function(e)",paraId:7,tocIndex:6},{value:"const config = {\n  slider: {\n    x: {}\n  },\n  onReady: (chart) => {\n     const { canvas } = chart.getContext();\n     const { document } = canvas;\n     document.querySelector('.slider').addEventListener('valuechange', (evt) => {\n       console.info(evt.detail);\n     });\n   }\n}\n",paraId:8,tocIndex:6}]},85797:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(73033);const n=[{value:"用于一句话概要说明图表要展示的数据，图表的标题是比较常用的组件，支持标题和副标题，以及他们的样式和位置设置。",paraId:0},{value:"const config = {\n  title: 'This is the title of chart.',\n}\n",paraId:1,tocIndex:0},{value:"标题 title 的设置，最简单的设置方式，就是直接指定一个字符串作为标题，这个时候使用默认的样式和位置。当然也可以使用完整的配置项去做一些灵活的自定义。",paraId:2,tocIndex:0},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"size",paraId:3,tocIndex:1},{value:"标题的高度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"36",paraId:3,tocIndex:1},{value:"title",paraId:3,tocIndex:1},{value:"标题文本",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"subtitle",paraId:3,tocIndex:1},{value:"副标题文本",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"align",paraId:3,tocIndex:1},{value:"标题的对齐方式",paraId:3,tocIndex:1},{value:"left",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"center",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"right",paraId:3,tocIndex:1},{value:"left",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"spacing",paraId:3,tocIndex:1},{value:"主标题、副标题之间的上下间距",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"2",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleFontSize",paraId:3,tocIndex:1},{value:"标题文字大小",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleFontFamily",paraId:3,tocIndex:1},{value:"标题文字字体",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleFontWeight",paraId:3,tocIndex:1},{value:"标题字体粗细",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleFill",paraId:3,tocIndex:1},{value:"标题字体颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleFillOpacity",paraId:3,tocIndex:1},{value:"标题字体颜色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleStroke",paraId:3,tocIndex:1},{value:"标题字体描边颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"titleStrokeOpacity",paraId:3,tocIndex:1},{value:"标题字体描边颜色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleFontSize",paraId:3,tocIndex:1},{value:"标题文字大小",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleFontFamily",paraId:3,tocIndex:1},{value:"标题文字字体",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleFontWeight",paraId:3,tocIndex:1},{value:"标题字体粗细",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleFill",paraId:3,tocIndex:1},{value:"标题字体颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleFillOpacity",paraId:3,tocIndex:1},{value:"标题字体颜色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleStroke",paraId:3,tocIndex:1},{value:"标题字体描边颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"style.",paraId:3,tocIndex:1},{value:"subtitleStrokeOpacity",paraId:3,tocIndex:1},{value:"标题字体描边颜色透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1}]},45630:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(74717);const n=[{value:"提示（Tooltip）可以提供关于数据点的额外信息，帮助用户更好地理解和解释可视化。",paraId:0},{value:"const config = {\n  tooltip: {\n    title: 'Date',\n    items: [{ channel: 'y' }],\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"title",paraId:2,tocIndex:1},{value:"标题，支持一段文本或 innerHTML 字符串",paraId:2,tocIndex:1},{value:"TooltipItem",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"items",paraId:2,tocIndex:1},{value:"定义每一个提示项的配置",paraId:2,tocIndex:1},{value:"TooltipItem",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"type TooltipItem =\n  | string\n  | false\n  | {\n      name?: string;\n      color?: string;\n      channel?: string;\n      field?: string;\n      value?: string;\n      // 格式化 tooltip item 的值（支持 d3-format 对应的字符串）\n      valueFormatter?: string | ((d: any) => string);\n    };\n",paraId:3,tocIndex:1},{value:"const config = {\n  tooltip: {\n    title: (d) => (d.value > 100 ? d.name : d.age), // transform\n  }\n}\n",paraId:4,tocIndex:3},{value:"// 单个字段\nconst config = {\n  tooltip: {\n    field: 'a'\n  }\n}\n\n// 单个通道\nconst config = {\n  tooltip: {\n    channel: 'y'\n  }\n}\n\n// 格式化\nconst config = {\n  tooltip: { channel: 'y', valueFormatter: (d) => d.toFixed(1) }\n}\n\n// d3-format 支持的字符\n// https://github.com/d3/d3-format\nconst config = {\n  tooltip: { channel: 'y', valueFormatter: '~s' }\n}\n\n// 完整信息\nconst config = {\n  tooltip: { name: 'name', color: 'red', value: 'color' }\n}\n\n// 回调\nconst config = {\n  tooltip: (\n    d, // 每一个数据项\n    index, // 索引\n    data, // 完整数据\n    column, // 通道\n  ) => ({\n    value: `${column.y.value[index]} - ${column.y1.value[index]}`,\n  })\n}\n\n// 多个 item\nconst config = {\n  tooltip: { items: [{ channel: 'y' }, { channel: 'x' }] }\n}\n",paraId:5,tocIndex:4},{value:"const config = {\n  tooltip: {\n    title: 'a',\n    items: [{ channel: 'x' }, { channel: 'y' }],\n  }\n}\n",paraId:6,tocIndex:5}]},25251:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(20574);const n=[{value:"{\n  onReady: ({ chart })=> {\n    // Do something\n  }\n}\n",paraId:0,tocIndex:0},{value:"如果你想要获取图表的交互信息，可以通过下面的方式：",paraId:1,tocIndex:0},{value:"监听全局 ",paraId:2,tocIndex:0},{value:"element",paraId:2,tocIndex:0},{value:" 事件",paraId:2,tocIndex:0},{value:"chart.on(`element:${ChartEvent.EventType}`, (ev) => {\n  console.log(ev);\n});\n",paraId:3,tocIndex:0},{value:"监听指定 ",paraId:4,tocIndex:0},{value:"element",paraId:4,tocIndex:0},{value:" 事件",paraId:4,tocIndex:0},{value:"chart.on(`${markType}:${ChartEvent.EventType}`, (ev) => {\n  console.log(ev);\n});\n\n// 如，监听柱状图中的柱子的点击事件\nchart.on(`interval:click`, (ev) => {\n  console.log(ev);\n});\n",paraId:5,tocIndex:0},{value:"监听 plot 区域事件",paraId:6,tocIndex:0},{value:"chart.on('plot:click', (event) => console.log(event));\n",paraId:7,tocIndex:0},{value:"监听全局 component 事件",paraId:8,tocIndex:0},{value:"chart.on('component:click', (event) => console.log(event));\n",paraId:9,tocIndex:0},{value:"监听全局 interval 事件",paraId:10,tocIndex:0},{value:"chart.on('interval:click', (event) => console.log(event));\n",paraId:11,tocIndex:0},{value:"export type MarkTypes =\n  | 'interval'\n  | 'rect'\n  | 'line'\n  | 'point'\n  | 'text'\n  | 'cell'\n  | 'area'\n  | 'node'\n  | 'edge'\n  | 'link'\n  | 'image'\n  | 'polygon'\n  | 'box'\n  | 'vector'\n  | 'lineX'\n  | 'lineY'\n  | 'connector'\n  | 'range'\n  | 'rangeX'\n  | 'rangeY'\n  | 'sankey'\n  | 'chord'\n  | 'path'\n  | 'treemap'\n  | 'pack'\n  | 'boxplot'\n  | 'shape'\n  | 'forceGraph'\n  | 'tree'\n  | 'wordCloud'\n  | 'gauge'\n  | 'density'\n  | 'heatmap'\n  | 'liquid'\n\nexports.ChartEvent = {\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  BEFORE_PAINT: 'beforepaint',\n  AFTER_PAINT: 'afterpaint',\n  BEFORE_CHANGE_DATA: 'beforechangedata',\n  AFTER_CHANGE_DATA: 'afterchangedata',\n  BEFORE_CLEAR: 'beforeclear',\n  AFTER_CLEAR: 'afterclear',\n  BEFORE_DESTROY: 'beforedestroy',\n  AFTER_DESTROY: 'afterdestroy',\n  BEFORE_CHANGE_SIZE: 'beforechangesize',\n  AFTER_CHANGE_SIZE: 'afterchangesize',\n  POINTER_TAP: 'pointertap',\n  POINTER_DOWN: 'pointerdown',\n  POINTER_UP: 'pointerup',\n  POINTER_OVER: 'pointerover',\n  POINTER_OUT: 'pointerout',\n  POINTER_MOVE: 'pointermove',\n  POINTER_ENTER: 'pointerenter',\n  POINTER_LEAVE: 'pointerleave',\n  POINTER_UPOUTSIDE: 'pointerupoutside',\n  DRAG_START: 'dragstart',\n  DRAG: 'drag',\n  DRAG_END: 'dragend',\n  DRAG_ENTER: 'dragenter',\n  DRAG_LEAVE: 'dragleave',\n  DRAG_OVER: 'dragover',\n  DROP: 'DROP',\n};\n",paraId:12,tocIndex:0},{value:"事件名",paraId:13,tocIndex:1},{value:"说明",paraId:13,tocIndex:1},{value:"回调参数",paraId:13,tocIndex:1},{value:"ChartEvent.",paraId:13,tocIndex:1},{value:"CLICK",paraId:13,tocIndex:1},{value:"点击",paraId:13,tocIndex:1},{value:"Event",paraId:13,tocIndex:1},{value:"ChartEvent.",paraId:13,tocIndex:1},{value:"DBLCLICK",paraId:13,tocIndex:1},{value:"双击",paraId:13,tocIndex:1},{value:"Event",paraId:13,tocIndex:1},{value:"事件名",paraId:14,tocIndex:2},{value:"说明",paraId:14,tocIndex:2},{value:"回调参数",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_TAP",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_DOWN",paraId:14,tocIndex:2},{value:"当指针按下时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_UP",paraId:14,tocIndex:2},{value:"当指针松开时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_OVER",paraId:14,tocIndex:2},{value:"当指针进入目标元素时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_OUT",paraId:14,tocIndex:2},{value:"当指针离开目标元素时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_MOVE",paraId:14,tocIndex:2},{value:"当指针改变坐标时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_ENTER",paraId:14,tocIndex:2},{value:"当指针进入目标元素或其子元素时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_LEAVE",paraId:14,tocIndex:2},{value:"当指针离开目标元素或其子元素时",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"ChartEvent.",paraId:14,tocIndex:2},{value:"POINTER_UPOUTSIDE",paraId:14,tocIndex:2},{value:"Event",paraId:14,tocIndex:2},{value:"如果希望监听拖拽事件，需要设置 draggable 和 droppable 属性",paraId:15,tocIndex:3},{value:"{\n  style: {\n    draggable: true,\n    droppable, true\n  }\n}\n",paraId:16,tocIndex:3},{value:"事件名",paraId:17,tocIndex:3},{value:"说明",paraId:17,tocIndex:3},{value:"回调参数",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DRAG_START",paraId:17,tocIndex:3},{value:"开始拖拽时",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DRAG",paraId:17,tocIndex:3},{value:"拖拽过程中",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DRAG_END",paraId:17,tocIndex:3},{value:"拖拽完成时",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DRAG_ENTER",paraId:17,tocIndex:3},{value:"元素被拖拽进入目标元素内时",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DRAG_LEAVE",paraId:17,tocIndex:3},{value:"元素被拖拽离开目标元素时",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DRAG_OVER",paraId:17,tocIndex:3},{value:"元素被拖拽悬停在目标元素内时",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3},{value:"ChartEvent.",paraId:17,tocIndex:3},{value:"DROP",paraId:17,tocIndex:3},{value:"元素被放置到目标元素内时",paraId:17,tocIndex:3},{value:"Event",paraId:17,tocIndex:3}]},7781:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(38194);const n=[{value:"框选坐标轴高亮，常常用于平行坐标系。",paraId:0},{value:"/**\n * A recreation of this demo: https://observablehq.com/@d3/parallel-coordinates\n */\n{\n  interaction: { brushAxisHighlight: true, tooltip: false },\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number             | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\n\nchart.on('brushAxis:highlight', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('brushAxis:highlight', data);\n});\n\nchart.on('brushAxis:remove', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('brushAxis:remove', data);\n});\n",paraId:3,tocIndex:3},{value:"chart.emit('brushAxis:highlight', {\n  data: { selection: [[20, 30], undefined, [100, 300]] },\n});\n\nchart.emit('brushAxis:remove', {});\n",paraId:4,tocIndex:4}]},48405:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(26050);const n=[{value:"框选筛选元素。",paraId:0},{value:"{\n  interaction: { brushFilter: true },\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number             | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"获得当前筛选数据，会在每次筛选和重置的时候触发以下事件：",paraId:3,tocIndex:2},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.on('brush:filter', (event) => {\n  const { selection } = event.data;\n  const [domainX, domainY] = selection;\n  const [minX, maxX] = domainX;\n  const [minY, maxY] = domainY;\n  console.log(minX, maxX, minY, maxY);\n});\n",paraId:4,tocIndex:2}]},90539:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(71178);const n=[{value:"框选高亮元素。",paraId:0},{value:"{\n  interaction: { brushHighlight: true },\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"series",paraId:2,tocIndex:1},{value:"是否是系列元素",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"facet",paraId:2,tocIndex:1},{value:"是否跨分面",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number| string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"支持八个方向的 resize 和自定义对应的 handle。",paraId:3,tocIndex:2},{value:"八个方向的 handle 的名字分别如下（按照东南西北命名），按照 ",paraId:4,tocIndex:4},{value:"mask[handleName][styleAttribute]",paraId:4,tocIndex:4},{value:" 格式设置对应的属性，也可以通过 ",paraId:4,tocIndex:4},{value:"maskHandleSize",paraId:4,tocIndex:4},{value:" 设置宽度。",paraId:4,tocIndex:4},{value:"{\n  state: {\n    inactive: { stroke: 'gray', opacity: 0.5 },\n  },\n  interaction: {\n    brushHighlight: {\n      maskHandleNFill: 'blue',\n      maskHandleEFill: 'red',\n      maskHandleSFill: 'green',\n      maskHandleWFill: 'yellow',\n      maskHandleNWFill: 'black',\n      maskHandleNEFill: 'steelblue',\n      maskHandleSEFill: 'pink',\n      maskHandleSWFill: 'orange',\n    },\n  },\n}\n",paraId:5,tocIndex:4},{value:"可以通过 ",paraId:6,tocIndex:5},{value:"mask[handleName]Render",paraId:6,tocIndex:5},{value:" 指定 handle 的渲染函数，用于渲染自定义的 handle。其中该函数签名如下。",paraId:6,tocIndex:5},{value:"function render(\n  g, // 挂载容器\n  options, // 样式属性，通过 mask[handleName][styleAttribute] 设置\n  document, // 画布 document，用于创建自图形\n) {\n  // 需要返回创建的图形\n}\n",paraId:7,tocIndex:5},{value:"下面是一个创建 path handle 的例子：",paraId:8,tocIndex:5},{value:"function renderPath(group, options, document) {\n  // 创建逻辑\n  // 如果是第一次渲染，就创建并且挂在图形\n  if (!group.handle) {\n    // 通过 document.createElement 去新建图形\n    const path = document.createElement('path');\n    group.handle = path;\n    group.appendChild(group.handle);\n  }\n\n  // 更新逻辑\n  const { handle } = group;\n  const { width, height, ...rest } = options;\n  if (width === undefined || height === undefined) return handle;\n  handle.attr(rest);\n\n  // 返回对应的 shape\n  return handle;\n}\n",paraId:9,tocIndex:5},{value:"function createPathRender(path) {\n  return (group, options, document) => {\n    if (!group.handle) {\n      const path = document.createElement('path');\n      group.handle = path;\n      group.appendChild(group.handle);\n    }\n    const { handle } = group;\n    const { width, height, ...rest } = options;\n    if (width === undefined || height === undefined) return handle;\n    handle.style.d = path(width, height);\n    handle.attr(rest);\n    return handle;\n  };\n}\n\n// conifg\n{\n  state: {\n    inactive: { stroke: 'gray', opacity: 0.5 },\n  },\n  interaction: {\n    brushHighlight: {\n      maskHandleSize: 30,\n      maskHandleNRender: createPathRender(\n        (width, height) =>\n          `M0,${height / 2}L${width / 2},${-height / 2}L${width},${\n            height / 2\n          },Z`,\n      ),\n      maskHandleERender: createPathRender(\n        (width, height) =>\n          `M${width / 2},0L${(width * 3) / 2},${height / 2}L${\n            width / 2\n          },${height},Z`,\n      ),\n      maskHandleSRender: createPathRender(\n        (width, height) =>\n          `M0,${height / 2}L${width / 2},${(height / 2) * 3}L${width},${\n            height / 2\n          },Z`,\n      ),\n      maskHandleWRender: createPathRender(\n        (width, height) =>\n          `M${width / 2},0L${-width},${height / 2}L${width / 2},${height},Z`,\n      ),\n      maskHandleNWRender: createPathRender(\n        (width, height) =>\n          `M0,0L${width},${height / 2}L${width / 2},${height},Z`,\n      ),\n      maskHandleNERender: createPathRender(\n        (width, height) =>\n          `M0,${height / 2}L${width},0L${width / 2},${height},Z`,\n      ),\n      maskHandleSERender: createPathRender(\n        (width, height) =>\n          `M${width / 2},0L${width},${height}L0,${height / 2},Z`,\n      ),\n      maskHandleSWRender: createPathRender(\n        (width, height) =>\n          `M${width / 2},0L${width},${height / 2}L0,${height},Z`,\n      ),\n      maskHandleNFill: 'blue',\n      maskHandleEFill: 'red',\n      maskHandleSFill: 'green',\n      maskHandleWFill: 'yellow',\n      maskHandleNWFill: 'black',\n      maskHandleNEFill: 'steelblue',\n      maskHandleSEFill: 'pink',\n      maskHandleSWFill: 'orange',\n    },\n  }\n}\n",paraId:10,tocIndex:5},{value:"支持以下的事件：",paraId:11,tocIndex:6},{value:"brush:start",paraId:12,tocIndex:6},{value:" - 开始创建 brush 的时候触发",paraId:12,tocIndex:6},{value:"brush:end",paraId:12,tocIndex:6},{value:" - brush 更新大小和位置完成时候触发",paraId:12,tocIndex:6},{value:"brush:remove",paraId:12,tocIndex:6},{value:" - brush 移除的时候触发",paraId:12,tocIndex:6},{value:"brush:highlight",paraId:12,tocIndex:6},{value:" - brush 改变大小和位置时触发",paraId:12,tocIndex:6},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.on('brush:highlight', (e) => {\n  console.log(e.data.selection);\n  console.log(e.nativeEvent);\n});\n",paraId:13,tocIndex:6},{value:"支持以下的事件：",paraId:14,tocIndex:7},{value:"brush:highlight",paraId:15,tocIndex:7},{value:" - 高亮数据",paraId:15,tocIndex:7},{value:"brush:remove",paraId:15,tocIndex:7},{value:" - 移除 brush",paraId:15,tocIndex:7},{value:"chart.emit('brush:remove');\n",paraId:16,tocIndex:7}]},1793:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(74349);const n=[{value:"x 方向框选筛选元素。",paraId:0},{value:"{\n  state: {\n    'inactive': { stroke: 'gray' }\n  },\n  interaction: {\n    brushXFilter: true,\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number             | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},11314:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(49762);const n=[{value:"x 方向框选高亮元素。",paraId:0},{value:"{\n  state: {\n    'inactive': { stroke: 'gray' }\n  },\n  interaction: {\n    brushXHighlight: {\n      maskFill: 'red',\n      maskOpacity: 0.5,\n    },\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"series",paraId:2,tocIndex:1},{value:"是否是系列元素",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"facet",paraId:2,tocIndex:1},{value:"是否跨分面",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number| string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},65046:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(20209);const n=[{value:"y 方向筛选高亮元素。",paraId:0},{value:"{\n  state: {\n    inactive: { stroke: 'gray' }\n  },\n  interaction: {\n    brushXHighlight: {\n      maskFill: 'red',\n      maskOpacity: 0.5,\n    },\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number             | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},47818:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(60113);const n=[{value:"y 方向框选高亮元素。",paraId:0},{value:"{\n  state: {\n    inactive: { stroke: 'gray' }\n  },\n  interaction: {\n    brushYHighlight: true,\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"reverse",paraId:2,tocIndex:1},{value:"brush 是否反转",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"series",paraId:2,tocIndex:1},{value:"是否是系列元素",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"facet",paraId:2,tocIndex:1},{value:"是否跨分面",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"mask${StyleAttrs}",paraId:2,tocIndex:1},{value:"brush 的样式",paraId:2,tocIndex:1},{value:"number| string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},34067:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(32235);const n=[{value:"查看折线图相对于某个时间点的相对趋势。",paraId:0},{value:"{\n  interaction: {\n    chartIndex: {\n      ruleStroke: '#aaa',\n      labelDx: 5,\n      labelTextAlign: 'center',\n      labelStroke: '#fff',\n      labelLineWidth: 5,\n      labelFormatter: (d) => `${d.toLocaleDateString()}`,\n    }\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"labelFormatter",paraId:2,tocIndex:1},{value:"格式化日期",paraId:2,tocIndex:1},{value:"FormatterFunction",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"rule${StyleAttrs}",paraId:2,tocIndex:1},{value:"指示线的样式",paraId:2,tocIndex:1},{value:"number             | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"label${StyleAttrs}",paraId:2,tocIndex:1},{value:"文本的样式",paraId:2,tocIndex:1},{value:"number             | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},45311:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(7574);const n=[{value:"高亮鼠标悬浮的元素。",paraId:0},{value:"{\n  state: {\n    inactive: { opacity: 0.5 }\n  },\n  interaction: {\n    elementHighlight: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:"是否高亮背景",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"offset",paraId:2,tocIndex:1},{value:"主方向的偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"background${StyleAttrs}",paraId:2,tocIndex:1},{value:"背景的样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\n\nchart.emit('element:highlight', {\n  data: { data: { population: 5038433 } },\n});\n\nchart.emit('element:unhighlight', {});\n",paraId:3,tocIndex:3},{value:"chart.on('element:highlight', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('element:highlight', data);\n});\n\nchart.on('element:unhighlight', (event) => {\n  const { nativeEvent } = event;\n  if (nativeEvent) console.log('reset');\n});\n",paraId:4,tocIndex:4}]},67056:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(11195);const n=[{value:"高亮和鼠标悬浮的元素拥有相同 color 通道值的元素。",paraId:0},{value:"{\n  state: {\n    inactive: { opacity: 0.5 },\n    active: { fill: 'red', linkFillOpacity: 0.5 }\n  },\n  interaction: {\n    elementHighlightByColor: {\n      link: true\n    }\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"link",paraId:2,tocIndex:1},{value:"是否展示连接线",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:"是否高亮背景",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"offset",paraId:2,tocIndex:1},{value:"主方向的偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"link${StyleAttrs}",paraId:2,tocIndex:1},{value:"连接线样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"background${StyleAttrs}",paraId:2,tocIndex:1},{value:"背景的样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},83266:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(14906);const n=[{value:"高亮和鼠标悬浮的元素拥有相同 x 通道值的元素。",paraId:0},{value:"{\n  state: {\n    inactive: { opacity: 0.5 },\n    active: { fill: 'red' }\n  },\n  interaction: {\n    elementHighlightByX: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:"是否高亮背景",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"offset",paraId:2,tocIndex:1},{value:"主方向的偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"background${StyleAttrs}",paraId:2,tocIndex:1},{value:"背景的样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},58311:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(24289);const n=[{value:"选择点击的元素。",paraId:0},{value:"{\n  state: {\n    unselected: { opacity: 0.5 },\n    selected: { fill: 'orange' }\n  },\n  interaction: {\n    elementSelect: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:"是否高亮背景",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"offset",paraId:2,tocIndex:1},{value:"主方向的偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"background${StyleAttrs}",paraId:2,tocIndex:1},{value:"背景的样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"single",paraId:2,tocIndex:1},{value:"是否单选",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.on('element:select', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('element:select', data);\n});\n\nchart.on('element:unselect', (event) => {\n  const { nativeEvent } = event;\n  if (nativeEvent) console.log('reset');\n});\n",paraId:3,tocIndex:3},{value:"chart.emit('element:select', {\n  data: { data: [{ population: 5038433 }, { population: 3983091 }] },\n});\n\nchart.emit('element:unselect', {});\n",paraId:4,tocIndex:4}]},3803:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(1868);const n=[{value:"选择和鼠标点击的元素拥有相同 color 通道值的元素。",paraId:0},{value:"{\n  state: {\n    unselected: { opacity: 0.5 },\n    selected: { fill: 'red', linkFillOpacity: 0.5 }\n  },\n  interaction: {\n    elementSelectByColor: {\n      link: true\n    }\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"link",paraId:2,tocIndex:1},{value:"是否展示连接线",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:"是否高亮背景",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"offset",paraId:2,tocIndex:1},{value:"主方向的偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"link${StyleAttrs}",paraId:2,tocIndex:1},{value:"连接线样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"background${StyleAttrs}",paraId:2,tocIndex:1},{value:"背景的样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"link",paraId:2,tocIndex:1},{value:"是否展示连接带",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1}]},49284:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(79941);const n=[{value:"选择和鼠标点击的元素拥有相同 x 通道值的元素。",paraId:0},{value:"{\n  state: {\n    unselected: { opacity: 0.5 },\n    selected: { fill: 'red' }\n  },\n  interaction: {\n    elementSelectByX: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"link",paraId:2,tocIndex:1},{value:"是否展示连接线",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:"是否高亮背景",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"offset",paraId:2,tocIndex:1},{value:"主方向的偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"link${StyleAttrs}",paraId:2,tocIndex:1},{value:"连接线样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"background${StyleAttrs}",paraId:2,tocIndex:1},{value:"背景的样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"single",paraId:2,tocIndex:1},{value:"是否单选",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1}]},84198:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(67870);const n=[{value:"鱼眼交互，用于聚焦于局部数据。",paraId:0},{value:"{\n  interaction: {\n    fisheye: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"wait",paraId:2,tocIndex:1},{value:"鱼眼更新的时间间隔，单位为毫秒",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"30",paraId:2,tocIndex:1},{value:"leading",paraId:2,tocIndex:1},{value:"是否在时间间隔开始的时候更新鱼眼",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"true",paraId:2,tocIndex:1},{value:"trailing",paraId:2,tocIndex:1},{value:"是否在时间间隔结束的时候更新鱼眼",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1}]},88765:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(20732);const n=[{value:"图例筛选元素。",paraId:0},{value:"{\n  interaction: {\n    legendFilter: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.emit('legend:filter', {\n  data: { channel: 'color', values: ['Sports', 'Strategy'] },\n});\n\nchart.emit('legend:reset', {});\n",paraId:2,tocIndex:2},{value:"chart.on('legend:filter', (e) => {\n  const { nativeEvent, data } = e;\n  if (!nativeEvent) return;\n  console.log(data);\n});\n\nchart.on('legend:reset', (e) => {\n  const { nativeEvent } = e;\n  if (!nativeEvent) return;\n  console.log('end');\n});\n",paraId:3,tocIndex:3}]},5865:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(26942);const n=[{value:"图例高亮元素。",paraId:0},{value:"{\n  state: {\n    inactive: { opacity: 0.5 },\n  },\n  interaction: {\n    legendHighlight: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.on('legend:highlight', (e) => {\n  const { nativeEvent, data } = e;\n  if (!nativeEvent) return;\n  console.log(data);\n});\n\nchart.on('legend:unhighlight', (e) => {\n  const { nativeEvent } = e;\n  if (!nativeEvent) return;\n  console.log('unhighlight');\n});\n",paraId:2,tocIndex:2},{value:"chart.emit('legend:highlight', {\n  data: { channel: 'color', value: 'Increase' },\n});\n\nchart.emit('legend:unhighlight', {});\n",paraId:3,tocIndex:3}]},1770:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(88668);const n=[{value:"提示缩略文本。",paraId:0},{value:"{\n  interaction: {\n    poptip: true\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"offsetX",paraId:2,tocIndex:1},{value:"x 方向偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"8",paraId:2,tocIndex:1},{value:"offsetY",paraId:2,tocIndex:1},{value:"y 方向偏移量",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"8",paraId:2,tocIndex:1},{value:"tip${StyleAttrs}",paraId:2,tocIndex:1},{value:"poptip 样式",paraId:2,tocIndex:1},{value:"StyleAttrs",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},18139:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(88960);const n=[{value:"滚动条筛选是一个默认交互，当设置了 scrollbar 默认就会有这个交互。关于 scrollbar 组件的配置，见文档 ",paraId:0},{value:"component/scrollbar",paraId:1},{value:"。",paraId:0},{value:"{\n  scrollbar: { y: { ratio: 0.3 }, x: { ratio: 0.5 } },\n}\n",paraId:2,tocIndex:0},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.emit('scrollbarX:filter', {\n  data: { selection: [['2001-03'], undefined] },\n});\n\nchart.emit('scrollbarY:filter', {\n  data: { selection: [undefined, [50, 550]] },\n});\n",paraId:3,tocIndex:2},{value:"chart.on('scrollbarX:filter', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('scrollbarX:filter', data.selection);\n});\n\nchart.on('scrollbarY:filter', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('scrollbarY:filter', data.selection);\n});\n",paraId:4,tocIndex:3}]},75498:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(1784);const n=[{value:"缩略轴筛选是一个默认交互，当设置了 slider 默认就会有这个交互。",paraId:0},{value:"{\n  slider: { y: true, x: true },\n}\n",paraId:1,tocIndex:0},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.emit('sliderX:filter', {\n  data: { selection: [['2001-01', '2001-03'], undefined] },\n});\n\nchart.emit('sliderY:filter', {\n  data: { selection: [undefined, [50, 550]] },\n});\n",paraId:2,tocIndex:2},{value:"chart.on('sliderX:filter', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('sliderX:filter', data.selection);\n});\n\nchart.on('sliderY:filter', (event) => {\n  const { data, nativeEvent } = event;\n  if (nativeEvent) console.log('sliderY:filter', data.selection);\n});\n",paraId:3,tocIndex:3}]},52124:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(52468);const n=[{value:"展示提示信息。",paraId:0},{value:"{\n  interaction: { tooltip: true },\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"wait",paraId:2,tocIndex:1},{value:"提示信息更新的时间间隔，单位为毫秒",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"50",paraId:2,tocIndex:1},{value:"leading",paraId:2,tocIndex:1},{value:"是否在时间间隔开始的时候更新提示信息",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"true",paraId:2,tocIndex:1},{value:"trailing",paraId:2,tocIndex:1},{value:"是否在时间间隔结束的时候更新提示信息",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"shared",paraId:2,tocIndex:1},{value:"相同 x 的元素是否共享 tooltip",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"series",paraId:2,tocIndex:1},{value:"是否是系列元素的 tooltip",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"body",paraId:2,tocIndex:1},{value:"是否展示 tooltip",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"true",paraId:2,tocIndex:1},{value:"marker",paraId:2,tocIndex:1},{value:"是否展示 marker",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"true",paraId:2,tocIndex:1},{value:"groupName",paraId:2,tocIndex:1},{value:"是否使用 groupName",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"true",paraId:2,tocIndex:1},{value:"position",paraId:2,tocIndex:1},{value:"tooltip 位置",paraId:2,tocIndex:1},{value:"TooltipPosition",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"mount",paraId:2,tocIndex:1},{value:"tooltip 渲染的 dom 节点",paraId:2,tocIndex:1},{value:"string",paraId:2,tocIndex:1},{value:" | ",paraId:2,tocIndex:1},{value:"HTMLElement",paraId:2,tocIndex:1},{value:"图表容器",paraId:2,tocIndex:1},{value:"bounding",paraId:2,tocIndex:1},{value:"tooltip 渲染的限制区域，超出会自动调整位置",paraId:2,tocIndex:1},{value:"BBox",paraId:2,tocIndex:1},{value:"图表区域大小",paraId:2,tocIndex:1},{value:"crosshairs",paraId:2,tocIndex:1},{value:"是否展示指示线",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"crosshairs${StyleAttrs}",paraId:2,tocIndex:1},{value:"指示线的样式",paraId:2,tocIndex:1},{value:"number | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"marker${StyleAttrs}",paraId:2,tocIndex:1},{value:"marker 的样式",paraId:2,tocIndex:1},{value:"number | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"render",paraId:2,tocIndex:1},{value:"自定义 tooltip 渲染函数",paraId:2,tocIndex:1},{value:"(event, options) => HTMLElement | string",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"sort",paraId:2,tocIndex:1},{value:"item 排序器",paraId:2,tocIndex:1},{value:"(d: TooltipItemValue) => any",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"filter",paraId:2,tocIndex:1},{value:"item 筛选器",paraId:2,tocIndex:1},{value:"(d: TooltipItemValue) => any",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"disableNative",paraId:2,tocIndex:1},{value:"是否响应原生事件（pointerover 和 pointerout）",paraId:2,tocIndex:1},{value:"true",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"css",paraId:2,tocIndex:1},{value:"设置容器的 ",paraId:2,tocIndex:1},{value:"css",paraId:3,tocIndex:1},{value:" 样式",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1},{value:"Record<string, any>",paraId:2,tocIndex:1},{value:"type TooltipPosition =\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right';\n\ntype BBox = { x: number; y: number; width: number; height: number };\n",paraId:4,tocIndex:1},{value:"{\n  interaction: {\n    tooltip: {\n      render: (event, { title, items }) => <div>Your custom render content here.</div>,\n    },\n  },\n}\n",paraId:5,tocIndex:3},{value:"let chart;\nconst config = {\n  onReady: (c) => chart = c\n}\nchart.on('tooltip:show', (event) => {\n  console.log(event.data.data);\n});\n\nchart.on('tooltip:hide', () => {\n  console.log('hide');\n});\n",paraId:6,tocIndex:4},{value:"对于 Interval、Point 等非系列 Mark，控制展示的方式如下：",paraId:7,tocIndex:5},{value:"// 条形图、点图等\n{\n  onReady: chart => {\n     chart.emit('tooltip:show', {\n      data: {\n        // 会找从原始数据里面找到匹配的数据\n        data: { genre: 'Sports' },\n      },\n    })\n  }\n}\n",paraId:8,tocIndex:5},{value:"对于 Line、Area 等系列 Mark，控制展示的方式如下：",paraId:9,tocIndex:5},{value:"{\n  onReady: chart => {\n     chart.emit('tooltip:show', {\n      data: {\n          data: { x: new Date('2010-11-16') },\n        },\n     })\n  }\n}\n",paraId:10,tocIndex:5},{value:"隐藏的方式如下：",paraId:11,tocIndex:5},{value:"chart.emit('tooltip:hide');\n",paraId:12,tocIndex:5},{value:"chart.emit('tooltip:disable'); // 禁用 tooltip\nchart.emit('tooltip:enable'); // 启用交互\n",paraId:13,tocIndex:6}]},22626:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(87563);const n=[{value:"contrastReverse",paraId:0},{value:" 标签颜色在图形背景上",paraId:0},{value:"颜色对比度",paraId:0},{value:"低的情况下，从指定色板选择一个对比度最优的颜色。",paraId:0},{value:"const config = {\n  label: {\n    text: 'frequency',\n    position: 'inside',\n    transform: [\n      {\n        type: 'contrastReverse',\n      },\n    ],\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"threshold",paraId:2,tocIndex:1},{value:"标签和背景图形的颜色对比度阈值，超过阈值才会推荐颜色提升对比度",paraId:2,tocIndex:1},{value:"Type",paraId:2,tocIndex:1},{value:"4.5",paraId:2,tocIndex:1},{value:"palette",paraId:2,tocIndex:1},{value:"对比度提升算法中，备选的颜色色板",paraId:2,tocIndex:1},{value:"Type",paraId:2,tocIndex:1},{value:"['#000', '#fff']",paraId:2,tocIndex:1}]},42951:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(94619);const n=[{value:"overflowHide",paraId:0},{value:" 对于标签在图形上放置不下的时候，隐藏标签。",paraId:0},{value:"const config = {\n  label: {\n    text: 'frequency',\n    position: 'inside',\n    transform: [\n      {\n        type: 'overflowHide',\n      },\n    ],\n  }\n}\n",paraId:1,tocIndex:0},{value:"暂无。",paraId:2,tocIndex:1}]},33821:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(72677);const n=[{value:"overlapDodgeY",paraId:0},{value:" 位置碰撞的标签在 y 方向上进行调整，防止标签重叠。",paraId:0},{value:"const config = {\n  label: {\n    text: 'frequency',\n    transform: [\n      {\n        type: 'overlapDodgeY',\n      },\n    ],\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"maxIterations",paraId:2,tocIndex:1},{value:"位置调整的最大迭代次数。",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"10",paraId:2,tocIndex:1},{value:"padding",paraId:2,tocIndex:1},{value:"期望调整之后，标签和标签之间的间距",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"1",paraId:2,tocIndex:1},{value:"maxError",paraId:2,tocIndex:1},{value:"最大误差，指实际间距和期望间距 ",paraId:2,tocIndex:1},{value:"padding",paraId:2,tocIndex:1},{value:" 之间的误差",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"0.1",paraId:2,tocIndex:1}]},7112:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(6481);const n=[{value:"overlapHide",paraId:0},{value:" 对位置碰撞的标签进行隐藏。算法逻辑是碰撞的两个标签，保留前一个，隐藏后一个。",paraId:0},{value:"const config = {\n  label: {\n    text: 'frequency',\n    transform: [\n      {\n        type: 'overlapHide',\n      },\n    ],\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"priority",paraId:2,tocIndex:1},{value:"标签排序的优先级，通过设置一个排序比较器，实现优先级",paraId:2,tocIndex:1},{value:"(a, b) => number",paraId:2,tocIndex:1},{value:"-",paraId:2,tocIndex:1}]},18489:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(38730);const n=[{value:"Label 是将图形的一些数据信息，比如值，名称等映射到图形的文本上的方法。使用方式如下:",paraId:0},{value:"const config = {\n  label: {\n    text: 'people',\n    position: 'outside',\n    transform: [{ type: 'overlapDodgeY' }],\n  }\n}\n",paraId:1,tocIndex:0},{value:"Label 继承 G Text 所有属性样式配置，此外还有 ",paraId:2,tocIndex:1},{value:"position",paraId:2,tocIndex:1},{value:", ",paraId:2,tocIndex:1},{value:"selector",paraId:2,tocIndex:1},{value:", ",paraId:2,tocIndex:1},{value:"connector",paraId:2,tocIndex:1},{value:", ",paraId:2,tocIndex:1},{value:"background",paraId:2,tocIndex:1},{value:" 和 ",paraId:2,tocIndex:1},{value:"transform",paraId:2,tocIndex:1},{value:" 等更多配置。",paraId:2,tocIndex:1},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"fontSize",paraId:3,tocIndex:1},{value:"文字大小",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"fontFamily",paraId:3,tocIndex:1},{value:"文字字体",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"fontWeight",paraId:3,tocIndex:1},{value:"字体粗细",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"lineHeight",paraId:3,tocIndex:1},{value:"文字的行高",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"textAlign",paraId:3,tocIndex:1},{value:"设置文本内容的当前对齐方式, 支持的属性：",paraId:3,tocIndex:1},{value:"center",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"end",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"left",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"right",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"start",paraId:3,tocIndex:1},{value:"，默认值为",paraId:3,tocIndex:1},{value:"start",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"textBaseline",paraId:3,tocIndex:1},{value:"设置在绘制文本时使用的当前文本基线, 支持的属性:",paraId:3,tocIndex:1},{value:"top",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"middle",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"bottom",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"alphabetic",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"hanging",paraId:3,tocIndex:1},{value:"。默认值为",paraId:3,tocIndex:1},{value:"bottom",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"fill",paraId:3,tocIndex:1},{value:"图形的填充色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"fillOpacity",paraId:3,tocIndex:1},{value:"图形的填充透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"stroke",paraId:3,tocIndex:1},{value:"图形的描边",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"strokeOpacity",paraId:3,tocIndex:1},{value:"描边透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"lineWidth",paraId:3,tocIndex:1},{value:"图形描边的宽度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"lineDash",paraId:3,tocIndex:1},{value:"描边的虚线配置，第一个值为虚线每个分段的长度，第二个值为分段间隔的距离。lineDash 设为[0, 0]的效果为没有描边。",paraId:3,tocIndex:1},{value:"[number,number]",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<[number, number]>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"opacity",paraId:3,tocIndex:1},{value:"图形的整体透明度",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"shadowColor",paraId:3,tocIndex:1},{value:"图形阴影颜色",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"shadowBlur",paraId:3,tocIndex:1},{value:"图形阴影的高斯模糊系数",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"shadowOffsetX",paraId:3,tocIndex:1},{value:"设置阴影距图形的水平距离",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"shadowOffsetY",paraId:3,tocIndex:1},{value:"设置阴影距图形的垂直距离",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<number>",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"cursor",paraId:3,tocIndex:1},{value:"鼠标样式。同 css 的鼠标样式，默认 'default'。",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"Function<string>",paraId:3,tocIndex:1},{value:"'default'",paraId:3,tocIndex:1},{value:"position",paraId:3,tocIndex:1},{value:"标签位置配置",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"selector",paraId:3,tocIndex:1},{value:"标签选择器。mark 通过指定的通道分组，通过指定选择器可以针对序列进行过滤索引，从序列中提取单个或多个值。分组的默认通道是系列。",paraId:3,tocIndex:1},{value:"string|function",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"connector",paraId:3,tocIndex:1},{value:"是否展示文本和目标点之间的连接线，默认不展示",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"background",paraId:3,tocIndex:1},{value:"是否展示文本背景框，默认不展示",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"transform",paraId:3,tocIndex:1},{value:"标签转换，主要用于调整标签 ",paraId:3,tocIndex:1},{value:"(x,y)",paraId:3,tocIndex:1},{value:" 位置，标签偏移、对齐等属性以实现想要的标签效果，内置多种标签布局，同时也支持回调的方式处理",paraId:3,tocIndex:1},{value:"array|function",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"formatter",paraId:3,tocIndex:1},{value:"标签文本格式化",paraId:3,tocIndex:1},{value:"type Formatter = (text:string, datum: Datum, index:number, data: Data) => string",paraId:3,tocIndex:1},{value:"-",paraId:3,tocIndex:1},{value:"标签",paraId:4,tocIndex:1},{value:"连接线样式",paraId:4,tocIndex:1},{value:"配置，格式为: ",paraId:4,tocIndex:1},{value:"connector${style}",paraId:4,tocIndex:1},{value:", 如: ",paraId:4,tocIndex:1},{value:"connectorStroke",paraId:4,tocIndex:1},{value:" 代表连接线描边色。",paraId:4,tocIndex:1},{value:"参数",paraId:5,tocIndex:1},{value:"说明",paraId:5,tocIndex:1},{value:"类型",paraId:5,tocIndex:1},{value:"默认值",paraId:5,tocIndex:1},{value:"connectorStroke",paraId:5,tocIndex:1},{value:"连接线描边色",paraId:5,tocIndex:1},{value:"string",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"connectorLineWidth",paraId:5,tocIndex:1},{value:"连接线描边线宽",paraId:5,tocIndex:1},{value:"number",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"connector${style}",paraId:5,tocIndex:1},{value:"更多连接线样式配置，参考 ",paraId:5,tocIndex:1},{value:"PathStyleProps",paraId:5,tocIndex:1},{value:" 属性值",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"-",paraId:5,tocIndex:1},{value:"标签",paraId:6,tocIndex:1},{value:"文本背景框样式",paraId:6,tocIndex:1},{value:"配置，格式为: ",paraId:6,tocIndex:1},{value:"background${style}",paraId:6,tocIndex:1},{value:", 如: ",paraId:6,tocIndex:1},{value:"backgroundFill",paraId:6,tocIndex:1},{value:" 代表背景框填充色。",paraId:6,tocIndex:1},{value:"参数",paraId:7,tocIndex:1},{value:"说明",paraId:7,tocIndex:1},{value:"类型",paraId:7,tocIndex:1},{value:"默认值",paraId:7,tocIndex:1},{value:"backgroundFill",paraId:7,tocIndex:1},{value:"背景框填充色",paraId:7,tocIndex:1},{value:"string",paraId:7,tocIndex:1},{value:"-",paraId:7,tocIndex:1},{value:"backgroundRadius",paraId:7,tocIndex:1},{value:"背景框圆角半径",paraId:7,tocIndex:1},{value:"number",paraId:7,tocIndex:1},{value:"-",paraId:7,tocIndex:1},{value:"backgroundPadding",paraId:7,tocIndex:1},{value:"背景框内间距",paraId:7,tocIndex:1},{value:"number[]",paraId:7,tocIndex:1},{value:"-",paraId:7,tocIndex:1},{value:"background${style}",paraId:7,tocIndex:1},{value:"更多背景框样式配置，参考 ",paraId:7,tocIndex:1},{value:"RectStyleProps",paraId:7,tocIndex:1},{value:" 属性值",paraId:7,tocIndex:1},{value:"-",paraId:7,tocIndex:1},{value:"-",paraId:7,tocIndex:1},{value:"数据标签支持使用 HTML 自定义标签，具体配置为：",paraId:8,tocIndex:1},{value:"参数",paraId:9,tocIndex:1},{value:"说明",paraId:9,tocIndex:1},{value:"类型",paraId:9,tocIndex:1},{value:"默认值",paraId:9,tocIndex:1},{value:"render",paraId:9,tocIndex:1},{value:"返回 HTML string 或者 HTMElement，使用 HTML 自定义复杂标签",paraId:9,tocIndex:1},{value:"RenderFunc",paraId:9,tocIndex:1},{value:"-",paraId:9,tocIndex:1},{value:"type RenderFunc = (text: string, datum: object, index: number) => String | HTMLElement;\n",paraId:10,tocIndex:1},{value:"在笛卡尔坐标系下，支持 9 种位置：",paraId:11,tocIndex:3},{value:"'top'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'left'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'right'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'bottom'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'top-left'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'top-right'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'bottom-left'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'bottom-right'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'inside'",paraId:11,tocIndex:3},{value:"。非笛卡尔坐标系下，支持 ",paraId:11,tocIndex:3},{value:"'outside'",paraId:11,tocIndex:3},{value:", ",paraId:11,tocIndex:3},{value:"'inside'",paraId:11,tocIndex:3},{value:" 两种。",paraId:11,tocIndex:3},{value:"此外，针对面积图提供特殊 ",paraId:12,tocIndex:3},{value:"area",paraId:12,tocIndex:3},{value:"，见 ",paraId:12,tocIndex:3},{value:"面积图特殊标签",paraId:13,tocIndex:3},{value:"。针对 radial 类型的图标，增加了 ",paraId:12,tocIndex:3},{value:"spider",paraId:12,tocIndex:3},{value:"、",paraId:12,tocIndex:3},{value:"surround",paraId:12,tocIndex:3},{value:" 两种类型。",paraId:12,tocIndex:3},{value:"position",paraId:14,tocIndex:3},{value:"用途",paraId:14,tocIndex:3},{value:"使用前",paraId:14,tocIndex:3},{value:"使用后",paraId:14,tocIndex:3},{value:"spider",paraId:14,tocIndex:3},{value:"调整标签沿坐标轴边沿两端对齐，适用于 polar 坐标系",paraId:14,tocIndex:3},{value:"surround",paraId:14,tocIndex:3},{value:"调整标签环形环绕做坐标系，适用于 polar 坐标系下的玫瑰图",paraId:14,tocIndex:3},{value:"area",paraId:14,tocIndex:3},{value:"将面积图的标签显示在面积区域中心，并设置一定的旋转角度",paraId:14,tocIndex:3},{value:"selector 选择器可以对系列数据进行过滤索引。",paraId:15,tocIndex:4},{value:"通常适用于折线图、面积图等一个几何图形会对应一组数据的 mark",paraId:16,tocIndex:4},{value:"内置选择器有：",paraId:17,tocIndex:4},{value:"'last'",paraId:17,tocIndex:4},{value:", ",paraId:17,tocIndex:4},{value:"'first'",paraId:17,tocIndex:4},{value:"，同时也支持 ",paraId:17,tocIndex:4},{value:"function",paraId:17,tocIndex:4},{value:" 回调的方式自定义，如下：",paraId:17,tocIndex:4},{value:"{\n  selector: (data) => {\n    if (data.length) {\n      // 对于每个系列的数据，只保留索引等于 2 的标签\n      return data.filter((d, index) => index === 2);\n    }\n    return data;\n  };\n}\n",paraId:18,tocIndex:4}]},59719:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(44899);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"number",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"default:",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"400",paraId:0,tocIndex:1},{value:"设置图表宽度。",paraId:1,tocIndex:1},{value:"optional",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"number",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"default:",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"400",paraId:2,tocIndex:2},{value:"设置图表高度。",paraId:3,tocIndex:2},{value:"optional",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"boolean",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"default:",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"true",paraId:4,tocIndex:3},{value:"图表是否自适应容器宽高。当 ",paraId:5,tocIndex:3},{value:"autoFit",paraId:5,tocIndex:3},{value:" 设置为 true 时，",paraId:5,tocIndex:3},{value:"width",paraId:5,tocIndex:3},{value:" 和 ",paraId:5,tocIndex:3},{value:"height",paraId:5,tocIndex:3},{value:" 的设置将失效。",paraId:5,tocIndex:3},{value:"optional",paraId:6,tocIndex:4},{value:" ",paraId:6,tocIndex:4},{value:"string",paraId:6,tocIndex:4},{value:" ",paraId:6,tocIndex:4},{value:"default:",paraId:6,tocIndex:4},{value:" ",paraId:6,tocIndex:4},{value:"canvas",paraId:6,tocIndex:4},{value:"设置图表渲染方式为 ",paraId:7,tocIndex:4},{value:"canvas",paraId:7,tocIndex:4},{value:" 或 ",paraId:7,tocIndex:4},{value:"svg",paraId:7,tocIndex:4},{value:"，默认值无需指定，当要使用 svg 模式时，可以如下配置",paraId:7,tocIndex:4},{value:"// import { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\n\nconst config = {\n  renderer: new SVGRenderer()\n}\n",paraId:8,tocIndex:4},{value:"G2 中的视图模型定义了一个视图的划分方式，划分得到的不同区域会绘制不同的东西，也通过不同的选项去设置。现在可以简单的把视图理解为一个图表。G2 的视图模型如下：",paraId:9,tocIndex:5},{value:"视图区域（View Area）",paraId:10,tocIndex:5},{value:"：上图中蓝色 + 橙色 + 红色 + 青色部分，其中蓝色部分被称为",paraId:10,tocIndex:5},{value:"外边距区域",paraId:10,tocIndex:5},{value:"，主要用于固定组件（坐标轴、图例等）到边界的距离。",paraId:10,tocIndex:5},{value:"绘制区域（Plot Area）",paraId:10,tocIndex:5},{value:"：上图中橙色 + 红色 + 青色部分，橙色部分被称为",paraId:10,tocIndex:5},{value:"内边距区域",paraId:10,tocIndex:5},{value:"，该区域用于绘制组件。",paraId:10,tocIndex:5},{value:"主区域（Main Area）",paraId:10,tocIndex:5},{value:"：上图中红色 + 青色部分，其中红色部分被称为",paraId:10,tocIndex:5},{value:"呼吸区域",paraId:10,tocIndex:5},{value:"，用于制造组件和标记（图形元素）的间距，从而防止重叠，对于散点图尤其有用。",paraId:10,tocIndex:5},{value:"内容区域（Content Area）",paraId:10,tocIndex:5},{value:"：上图中青色部分，主要用于绘制标记（图形元素）。",paraId:10,tocIndex:5},{value:"可以通过如下的配置设置各个区域的大小：",paraId:11,tocIndex:5},{value:"margin",paraId:12,tocIndex:5},{value:" - 设置外边距四个方向的值，优先级别比分别设置低",paraId:12,tocIndex:5},{value:"marginLeft",paraId:12,tocIndex:5},{value:" - 设置左外边距",paraId:12,tocIndex:5},{value:"marginTop",paraId:12,tocIndex:5},{value:" - 设置上外边距",paraId:12,tocIndex:5},{value:"marginRight",paraId:12,tocIndex:5},{value:" - 设置右外边距值",paraId:12,tocIndex:5},{value:"marginBottom",paraId:12,tocIndex:5},{value:" - 设置下外边距值",paraId:12,tocIndex:5},{value:"padding",paraId:12,tocIndex:5},{value:" - 设置内边距四个方向的值，优先级别比分别设置低",paraId:12,tocIndex:5},{value:"paddingLeft",paraId:12,tocIndex:5},{value:" - 设置左内边距",paraId:12,tocIndex:5},{value:"paddingTop",paraId:12,tocIndex:5},{value:" - 设置上内边距",paraId:12,tocIndex:5},{value:"paddingRight",paraId:12,tocIndex:5},{value:" - 设置右内边距",paraId:12,tocIndex:5},{value:"paddingBottom",paraId:12,tocIndex:5},{value:" - 设置下内边距",paraId:12,tocIndex:5},{value:"inset",paraId:12,tocIndex:5},{value:" - 设置呼吸区域四个方向的值，优先级别比分别设置低",paraId:12,tocIndex:5},{value:"insetLeft",paraId:12,tocIndex:5},{value:" - 设置左呼吸区域",paraId:12,tocIndex:5},{value:"insetTop",paraId:12,tocIndex:5},{value:" - 设置上呼吸区域",paraId:12,tocIndex:5},{value:"insetRight",paraId:12,tocIndex:5},{value:" - 设置右呼吸区域",paraId:12,tocIndex:5},{value:"insetBottom",paraId:12,tocIndex:5},{value:" - 设置下呼吸区域",paraId:12,tocIndex:5},{value:"其中内容区域的大小由以下的公式得到：",paraId:13,tocIndex:5},{value:"const contentWidth =\n  width -\n  paddingLeft -\n  paddingRight -\n  marginLeft -\n  marginRight -\n  insetLeft -\n  insetRight;\n\nconst contentHeight =\n  height -\n  paddingTop -\n  paddingBottom -\n  marginTop -\n  marginBottom -\n  insetTop -\n  insetBottom;\n",paraId:14,tocIndex:5},{value:"required",paraId:15,tocIndex:7},{value:" ",paraId:15,tocIndex:7},{value:"array object",paraId:15,tocIndex:7},{value:"设置图表数据源。数据源为对象集合，例如：",paraId:16,tocIndex:7},{value:"[{ time: '1991'，value: 20 }, { time: '1992'，value: 20 }]",paraId:16,tocIndex:7},{value:"。",paraId:16,tocIndex:7},{value:"required",paraId:17,tocIndex:8},{value:" ",paraId:17,tocIndex:8},{value:"string",paraId:17,tocIndex:8},{value:"图形在 x 方向对应的数据字段名，一般是横向的坐标轴对应的字段。比如：要看不同班级的人数情况，那么班级字段就是对应的 xField。",paraId:18,tocIndex:8},{value:"required",paraId:19,tocIndex:9},{value:" ",paraId:19,tocIndex:9},{value:"string",paraId:19,tocIndex:9},{value:"图形在 y 方向对应的数据字段名，一般是纵向的坐标轴对应的字段。比如：要看不同班级的人数情况，那么人数字段就是对应的 yField。",paraId:20,tocIndex:9},{value:"optional",paraId:21,tocIndex:10},{value:" ",paraId:21,tocIndex:10},{value:"string",paraId:21,tocIndex:10},{value:"分组字段。比如：我们需要分析不同",paraId:22,tocIndex:10},{value:"省份",paraId:22,tocIndex:10},{value:"的交易额趋势，那么",paraId:22,tocIndex:10},{value:"省份字段",paraId:22,tocIndex:10},{value:"就是分组字段。",paraId:22,tocIndex:10},{value:"optional",paraId:23,tocIndex:12},{value:" ",paraId:23,tocIndex:12},{value:"string",paraId:23,tocIndex:12},{value:" ",paraId:23,tocIndex:12},{value:"指定 line 是否平滑，点图形状等",paraId:24,tocIndex:12},{value:"optional",paraId:25,tocIndex:13},{value:" ",paraId:25,tocIndex:13},{value:"string",paraId:25,tocIndex:13},{value:" ",paraId:25,tocIndex:13},{value:"指定颜色通道字段",paraId:26,tocIndex:13},{value:"optional",paraId:27,tocIndex:14},{value:" ",paraId:27,tocIndex:14},{value:"string",paraId:27,tocIndex:14},{value:" ",paraId:27,tocIndex:14},{value:"指定尺寸通道字段",paraId:28,tocIndex:14},{value:"optional",paraId:29,tocIndex:15},{value:" ",paraId:29,tocIndex:15},{value:"boolean | StackYTransform",paraId:29,tocIndex:15},{value:"是否堆积",paraId:30,tocIndex:15},{value:"type StackYTransform = {\n  groupBy?: string | string[];\n  reverse?: boolean;\n  orderBy?: TransformOrder;\n  y?: 'y' | 'y1';\n  y1?: 'y' | 'y1';\n  series?: boolean;\n};\n",paraId:31,tocIndex:15},{value:"optional",paraId:32,tocIndex:16},{value:" ",paraId:32,tocIndex:16},{value:"boolean | NormalizeYTransform",paraId:32,tocIndex:16},{value:"数值归一化",paraId:33,tocIndex:16},{value:"type NormalizeYTransform = {\n  series?: boolean;\n  groupBy?: string | string[];\n  basis?: 'deviation' | 'first' | 'last' | 'max' | 'mean' | 'median' | 'min' | 'sum';\n};\n",paraId:34,tocIndex:16},{value:"optional",paraId:35,tocIndex:17},{value:" ",paraId:35,tocIndex:17},{value:"boolean | SortByTransform",paraId:35,tocIndex:17},{value:"排序",paraId:36,tocIndex:17},{value:"type SortByTransform = {\n  /** type: [field, order]; order: true => ascend, false => descend */\n  fields?: (string | [string, boolean?])[];\n};\n",paraId:37,tocIndex:17},{value:"optional",paraId:38,tocIndex:18},{value:" ",paraId:38,tocIndex:18},{value:"boolean | DodgeXTransform",paraId:38,tocIndex:18},{value:"分组",paraId:39,tocIndex:18},{value:"type DodgeXTransform = {\n  groupBy?: string | string[];\n  reverse?: boolean;\n  orderBy?: TransformOrder;\n  padding?: number;\n};\n",paraId:40,tocIndex:18},{value:"optional",paraId:41,tocIndex:19},{value:" ",paraId:41,tocIndex:19},{value:"boolean",paraId:41,tocIndex:19},{value:" ",paraId:41,tocIndex:19},{value:"default:",paraId:41,tocIndex:19},{value:" ",paraId:41,tocIndex:19},{value:"true",paraId:41,tocIndex:19},{value:"是否百分比面积图，百分比时默认开启 isStack。",paraId:42,tocIndex:19},{value:"optional",paraId:43,tocIndex:20},{value:" ",paraId:43,tocIndex:20},{value:"Line",paraId:43,tocIndex:20},{value:"线条，一般用于面积图中添加线条",paraId:44,tocIndex:20},{value:"optional",paraId:45,tocIndex:21},{value:" ",paraId:45,tocIndex:21},{value:"Point",paraId:45,tocIndex:21},{value:"点图形样式，一般用于 Line 中添加对应 Mark",paraId:46,tocIndex:21},{value:"可选",paraId:47,tocIndex:22},{value:" ",paraId:47,tocIndex:22},{value:"object",paraId:47,tocIndex:22},{value:"设置 Mark 对应状态的样式，常配合 Interaction 一起使用，有：",paraId:48,tocIndex:22},{value:"'default' | 'active' | 'inactive' | 'selected' | 'unselected'",paraId:48,tocIndex:22},{value:" 等状态。",paraId:48,tocIndex:22},{value:"示例：",paraId:49,tocIndex:22},{value:"{\n  state: {\n    inactive: { opacity: 0.5 },\n    active: { fill: 'red', linkFillOpacity: 0.5 }\n  },\n  interaction: {\n    elementHighlightByColor: {\n      link: true\n    }\n  }\n}\n",paraId:50,tocIndex:22}]},42942:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(66759);const n=[{value:"G2 提供了一些内置的色板，可以直接使用，并支持 ",paraId:0},{value:"d3-scale-chromatic",paraId:0},{value:"的色板。",paraId:0},{value:'{\n  scale: { color: { palette: "tableau10" } },\n}\n',paraId:1,tocIndex:0}]},65720:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(23208);const n=[{value:"band 是特殊的 ",paraId:0},{value:"ordinal",paraId:1},{value:" 比例尺，它的值域范围是一个连续的范围。",paraId:0},{value:"band 比例尺经常用于柱形图的 x 通道。",paraId:2,tocIndex:0},{value:"\nconst config = {\n  scale: {\n    x: { \n      type:'band',\n\t\t\t/* 其他配置项 */ \n    }\n  }\n}\n\n",paraId:3,tocIndex:0},{value:"属性",paraId:4,tocIndex:1},{value:"描述",paraId:4,tocIndex:1},{value:"类型",paraId:4,tocIndex:1},{value:"默认值",paraId:4,tocIndex:1},{value:"domain",paraId:4,tocIndex:1},{value:"设置定义域数组",paraId:4,tocIndex:1},{value:"number[] | string[] | Date[]",paraId:4,tocIndex:1},{value:"[]",paraId:4,tocIndex:1},{value:"range",paraId:4,tocIndex:1},{value:"设置数据映射的值域范围",paraId:4,tocIndex:1},{value:"number[]",paraId:4,tocIndex:1},{value:" | ",paraId:4,tocIndex:1},{value:"string[]",paraId:4,tocIndex:1},{value:"[0, 1]",paraId:4,tocIndex:1},{value:"unknown",paraId:4,tocIndex:1},{value:"对于 ",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"， ",paraId:4,tocIndex:1},{value:"NaN",paraId:4,tocIndex:1},{value:"，",paraId:4,tocIndex:1},{value:"null",paraId:4,tocIndex:1},{value:" 空值，返回的数据",paraId:4,tocIndex:1},{value:"any",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"round",paraId:4,tocIndex:1},{value:"输出值去四舍五入",paraId:4,tocIndex:1},{value:"boolean",paraId:4,tocIndex:1},{value:"false",paraId:4,tocIndex:1},{value:"paddingInner",paraId:4,tocIndex:1},{value:"设置比例尺的内部间距，在 [0, 1] 范围内",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"0",paraId:4,tocIndex:1},{value:"paddingOuter",paraId:4,tocIndex:1},{value:"设置比例尺的外部间距，在 [0, 1] 范围内",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"0",paraId:4,tocIndex:1},{value:"padding",paraId:4,tocIndex:1},{value:"同时设置 ",paraId:4,tocIndex:1},{value:"paddingInner",paraId:4,tocIndex:1},{value:" 和 ",paraId:4,tocIndex:1},{value:"paddingOuter",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"0",paraId:4,tocIndex:1},{value:"align",paraId:4,tocIndex:1},{value:"对齐方式，在 [0, 1] 范围内",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"0.5",paraId:4,tocIndex:1},{value:"compare",paraId:4,tocIndex:1},{value:"对定义域进行映射前的排序",paraId:4,tocIndex:1},{value:"(a: string or number, b: string or number) => number",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"flex",paraId:4,tocIndex:1},{value:"设置分配比例",paraId:4,tocIndex:1},{value:"number[]",paraId:4,tocIndex:1},{value:"[]",paraId:4,tocIndex:1},{value:"|<------------------------------------------- range -------------------------------------------\x3e|\n|             |                   |             |                   |             |             |\n|<--step*PO--\x3e|<----bandWidth----\x3e|<--step*PI--\x3e|<----bandWidth----\x3e|<--step*PI--\x3e|<--step*PO--\x3e|\n|             | ***************** |             | ***************** |             |             |\n|             | ******* A ******* |             | ******* B ******* |             |             |\n|             | ***************** |             | ***************** |             |             |\n|             |<--------------step-------------\x3e|                                               |\n|-----------------------------------------------------------------------------------------------|\n",paraId:5,tocIndex:1},{value:"怎么设置柱形图，柱子之间的间距？",paraId:6,tocIndex:2},{value:"const config = {\n  scale: {\n    x: { \n      type: 'band',\n    \tpadding: 0.5,\n    }\n  }\n}\n",paraId:7,tocIndex:2}]},72951:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(26648);const n=[{value:"针对连续数据，对数据进行连续映射的比例尺，本质是一个线性公式：",paraId:0},{value:"y = ax + b",paraId:0},{value:"，从一个数值范围映射到另外一个数值范围。",paraId:0},{value:"linear 比例尺常规用于将数据映射到归一化坐标上。",paraId:1,tocIndex:0},{value:"const config = {\n  scale: {\n    y: { \n      type: 'linear',\n      range: [0.2, 0.8],\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:2,tocIndex:0},{value:"这个例子中会将 y 通道的比例尺设置它的映射方式，从而影响到图形在画布上的位置。",paraId:3,tocIndex:0},{value:"属性",paraId:4,tocIndex:1},{value:"描述",paraId:4,tocIndex:1},{value:"类型",paraId:4,tocIndex:1},{value:"默认值",paraId:4,tocIndex:1},{value:"domain",paraId:4,tocIndex:1},{value:"设置数据的定义域范围",paraId:4,tocIndex:1},{value:"number[]",paraId:4,tocIndex:1},{value:"输入数据的最大最小值范围",paraId:4,tocIndex:1},{value:"domainMin",paraId:4,tocIndex:1},{value:"设置数据的定义域最小值",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"输入数据的最小值",paraId:4,tocIndex:1},{value:"domainMax",paraId:4,tocIndex:1},{value:"设置数据的定义域最大值",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"输入数据的最大",paraId:4,tocIndex:1},{value:"range",paraId:4,tocIndex:1},{value:"设置数据映射的值域范围",paraId:4,tocIndex:1},{value:"number[]",paraId:4,tocIndex:1},{value:" | ",paraId:4,tocIndex:1},{value:"string[]",paraId:4,tocIndex:1},{value:"[0, 1]",paraId:4,tocIndex:1},{value:"rangeMin",paraId:4,tocIndex:1},{value:"设置数据映射的值域最小值",paraId:4,tocIndex:1},{value:"number | string",paraId:4,tocIndex:1},{value:"0",paraId:4,tocIndex:1},{value:"rangeMax",paraId:4,tocIndex:1},{value:"设置数据映射的值域最大值",paraId:4,tocIndex:1},{value:"number | string",paraId:4,tocIndex:1},{value:"1",paraId:4,tocIndex:1},{value:"unknown",paraId:4,tocIndex:1},{value:"对于 ",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"， ",paraId:4,tocIndex:1},{value:"NaN",paraId:4,tocIndex:1},{value:"，",paraId:4,tocIndex:1},{value:"null",paraId:4,tocIndex:1},{value:" 空值，返回的数据",paraId:4,tocIndex:1},{value:"any",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"tickCount",paraId:4,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:4,tocIndex:1},{value:"number",paraId:4,tocIndex:1},{value:"5",paraId:4,tocIndex:1},{value:"tickMethod",paraId:4,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:4,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:4,tocIndex:1},{value:"d3-ticks",paraId:4,tocIndex:1},{value:"round",paraId:4,tocIndex:1},{value:"输出值去四舍五入",paraId:4,tocIndex:1},{value:"boolean",paraId:4,tocIndex:1},{value:"false",paraId:4,tocIndex:1},{value:"clamp",paraId:4,tocIndex:1},{value:"将映射值限定在 range 的范围内",paraId:4,tocIndex:1},{value:"boolean",paraId:4,tocIndex:1},{value:"false",paraId:4,tocIndex:1},{value:"nice",paraId:4,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:4,tocIndex:1},{value:"boolean",paraId:4,tocIndex:1},{value:"false",paraId:4,tocIndex:1},{value:"interpolate",paraId:4,tocIndex:1},{value:"自定义差值函数",paraId:4,tocIndex:1},{value:"(a: number, b: number) => (t: number) => T",paraId:4,tocIndex:1},{value:"(a, b) => (t) => a * (1 - t) + b * t",paraId:4,tocIndex:1},{value:"怎么自定义 y 轴的刻度？",paraId:5,tocIndex:2},{value:"比如只需要在刻度上显示 0, 100, 600，那就以下方式设置 y 比例尺。",paraId:6,tocIndex:2},{value:"const config = {\n  scale: {\n    y: { \n      type: 'linear',\n      domain: [0, 700],\n      tickMethod: () => [0, 100, 600]\n    }\n  }\n}\n",paraId:7,tocIndex:2}]},29268:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(23288);const n=[{value:"log 是使用对数函数进行数据映射，它的映射函数为 ",paraId:0},{value:"y = log(x) + b",paraId:0},{value:"。",paraId:0},{value:"const config = {\n  scale: {\n    y: { \n      type: 'log',\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"domain",paraId:2,tocIndex:1},{value:"设置数据的定义域范围",paraId:2,tocIndex:1},{value:"number[]",paraId:2,tocIndex:1},{value:"输入数据的最大最小值范围",paraId:2,tocIndex:1},{value:"domainMin",paraId:2,tocIndex:1},{value:"设置数据的定义域最小值",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"输入数据的最小值",paraId:2,tocIndex:1},{value:"domainMax",paraId:2,tocIndex:1},{value:"设置数据的定义域最大值",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"输入数据的最大",paraId:2,tocIndex:1},{value:"range",paraId:2,tocIndex:1},{value:"设置数据映射的值域范围",paraId:2,tocIndex:1},{value:"number[]",paraId:2,tocIndex:1},{value:" | ",paraId:2,tocIndex:1},{value:"string[]",paraId:2,tocIndex:1},{value:"[0, 1]",paraId:2,tocIndex:1},{value:"rangeMin",paraId:2,tocIndex:1},{value:"设置数据映射的值域最小值",paraId:2,tocIndex:1},{value:"number | string",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"rangeMax",paraId:2,tocIndex:1},{value:"设置数据映射的值域最大值",paraId:2,tocIndex:1},{value:"number | string",paraId:2,tocIndex:1},{value:"1",paraId:2,tocIndex:1},{value:"unknown",paraId:2,tocIndex:1},{value:"对于 ",paraId:2,tocIndex:1},{value:"undefined",paraId:2,tocIndex:1},{value:"， ",paraId:2,tocIndex:1},{value:"NaN",paraId:2,tocIndex:1},{value:"，",paraId:2,tocIndex:1},{value:"null",paraId:2,tocIndex:1},{value:" 空值，返回的数据",paraId:2,tocIndex:1},{value:"any",paraId:2,tocIndex:1},{value:"undefined",paraId:2,tocIndex:1},{value:"tickCount",paraId:2,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"5",paraId:2,tocIndex:1},{value:"tickMethod",paraId:2,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:2,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:2,tocIndex:1},{value:"calculateLogTicks",paraId:2,tocIndex:1},{value:"round",paraId:2,tocIndex:1},{value:"输出值去四舍五入",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"clamp",paraId:2,tocIndex:1},{value:"将映射值限定在 range 的范围内",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"nice",paraId:2,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"interpolate",paraId:2,tocIndex:1},{value:"自定义差值函数",paraId:2,tocIndex:1},{value:"(a: number, b: number) => (t: number) => T",paraId:2,tocIndex:1},{value:"(a, b) => (t) => a * (1 - t) + b * t",paraId:2,tocIndex:1},{value:"base",paraId:2,tocIndex:1},{value:"设定对数底",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"10",paraId:2,tocIndex:1},{value:"log 底数默认为 10，怎么设定 log 的底数",paraId:3,tocIndex:1},{value:"const config = {\n  scale: {\n    y: { \n      type: 'log',\n      base: 100,\n    }\n  }\n}\n",paraId:4,tocIndex:1}]},82195:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(12282);const n=[{value:"ordinal 是将有序且离散的定义域映射到有序离散的值域，通常用于分类的数据，比如：班级、商品类别等形式的数据。",paraId:0},{value:"linear 比例尺常规用于将数据映射到归一化坐标上。",paraId:1,tocIndex:0},{value:"const config = {\n  scale: {\n    y: { \n      type: 'ordinal',\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:2,tocIndex:0},{value:"这个例子中会将 y 通道的比例尺设置它的映射方式，从而影响到图形在画布上的位置。",paraId:3,tocIndex:0},{value:"属性",paraId:4,tocIndex:1},{value:"描述",paraId:4,tocIndex:1},{value:"类型",paraId:4,tocIndex:1},{value:"默认值",paraId:4,tocIndex:1},{value:"domain",paraId:4,tocIndex:1},{value:"设置数据的定义域范围",paraId:4,tocIndex:1},{value:"any[]",paraId:4,tocIndex:1},{value:"[]",paraId:4,tocIndex:1},{value:"range",paraId:4,tocIndex:1},{value:"设置数据映射的值域范围",paraId:4,tocIndex:1},{value:"any[]",paraId:4,tocIndex:1},{value:"[]",paraId:4,tocIndex:1},{value:"unknown",paraId:4,tocIndex:1},{value:"对于 ",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"， ",paraId:4,tocIndex:1},{value:"NaN",paraId:4,tocIndex:1},{value:"，",paraId:4,tocIndex:1},{value:"null",paraId:4,tocIndex:1},{value:" 空值，返回的数据",paraId:4,tocIndex:1},{value:"any",paraId:4,tocIndex:1},{value:"undefined",paraId:4,tocIndex:1},{value:"compare",paraId:4,tocIndex:1},{value:"比较两个值，用于排序的比较器",paraId:4,tocIndex:1},{value:"`(a: number",paraId:4,tocIndex:1},{value:"string, b: number",paraId:4,tocIndex:1},{value:"柱形图怎么指定柱子的颜色色板？",paraId:5,tocIndex:2},{value:"const config = {\n  scale: {\n    color: { \n      type: 'ordinal',\n      range: ['red', 'green', 'blue'],\n    }\n  }\n}\n",paraId:6,tocIndex:2}]},71525:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(4338);const n=[{value:"point 是一个特殊 ",paraId:0},{value:"band",paraId:1},{value:" 比例尺，固定配置 ",paraId:0},{value:"bandWith = 0",paraId:0},{value:"。",paraId:0},{value:"const config = {\n  scale: {\n    x: { \n      type: 'point',\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:2,tocIndex:0},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"设置定义域数组",paraId:3,tocIndex:1},{value:"number[] | string[] | Date[]",paraId:3,tocIndex:1},{value:"[]",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"设置数据映射的值域范围",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"string[]",paraId:3,tocIndex:1},{value:"[0, 1]",paraId:3,tocIndex:1},{value:"unknown",paraId:3,tocIndex:1},{value:"对于 ",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"， ",paraId:3,tocIndex:1},{value:"NaN",paraId:3,tocIndex:1},{value:"，",paraId:3,tocIndex:1},{value:"null",paraId:3,tocIndex:1},{value:" 空值，返回的数据",paraId:3,tocIndex:1},{value:"any",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"round",paraId:3,tocIndex:1},{value:"输出值去四舍五入",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"paddingInner",paraId:3,tocIndex:1},{value:"设置比例尺的内部间距，在 [0, 1] 范围内",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"0",paraId:3,tocIndex:1},{value:"paddingOuter",paraId:3,tocIndex:1},{value:"设置比例尺的外部间距，在 [0, 1] 范围内",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"0",paraId:3,tocIndex:1},{value:"padding",paraId:3,tocIndex:1},{value:"同时设置 ",paraId:3,tocIndex:1},{value:"paddingInner",paraId:3,tocIndex:1},{value:" 和 ",paraId:3,tocIndex:1},{value:"paddingOuter",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"0",paraId:3,tocIndex:1},{value:"align",paraId:3,tocIndex:1},{value:"对齐方式，在 [0, 1] 范围内",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"0.5",paraId:3,tocIndex:1},{value:"compare",paraId:3,tocIndex:1},{value:"对定义域进行映射前的排序",paraId:3,tocIndex:1},{value:"(a: string or number, b: string or number) => number",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"|<------------------------------------------- range -------------------------------------------\x3e|\n|             |                                 |                                 |             |\n|<--step*PO--\x3e|<--------------step-------------\x3e|<--------------step-------------\x3e|<--step*PO--\x3e|\n|             |                                 |                                 |             |\n|             A                                 B                                 C             |\n|-----------------------------------------------------------------------------------------------|\n",paraId:4,tocIndex:1}]},98374:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(85739);const n=[{value:"pow 是使用指数函数进行数据映射，它的映射函数为 ",paraId:0},{value:"y = x ^ exp + b",paraId:0},{value:"。",paraId:0},{value:"const config = {\n  scale: {\n    y: { \n      type: 'pow',\n      /* 其他配置项 */\n    }\n  }\n}\n\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"domain",paraId:2,tocIndex:1},{value:"设置数据的定义域范围",paraId:2,tocIndex:1},{value:"number[]",paraId:2,tocIndex:1},{value:"输入数据的最大最小值范围",paraId:2,tocIndex:1},{value:"domainMin",paraId:2,tocIndex:1},{value:"设置数据的定义域最小值",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"输入数据的最小值",paraId:2,tocIndex:1},{value:"domainMax",paraId:2,tocIndex:1},{value:"设置数据的定义域最大值",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"输入数据的最大",paraId:2,tocIndex:1},{value:"range",paraId:2,tocIndex:1},{value:"设置数据映射的值域范围",paraId:2,tocIndex:1},{value:"number[]",paraId:2,tocIndex:1},{value:" | ",paraId:2,tocIndex:1},{value:"string[]",paraId:2,tocIndex:1},{value:"[0, 1]",paraId:2,tocIndex:1},{value:"rangeMin",paraId:2,tocIndex:1},{value:"设置数据映射的值域最小值",paraId:2,tocIndex:1},{value:"number | string",paraId:2,tocIndex:1},{value:"0",paraId:2,tocIndex:1},{value:"rangeMax",paraId:2,tocIndex:1},{value:"设置数据映射的值域最大值",paraId:2,tocIndex:1},{value:"number | string",paraId:2,tocIndex:1},{value:"1",paraId:2,tocIndex:1},{value:"unknown",paraId:2,tocIndex:1},{value:"对于 ",paraId:2,tocIndex:1},{value:"undefined",paraId:2,tocIndex:1},{value:"， ",paraId:2,tocIndex:1},{value:"NaN",paraId:2,tocIndex:1},{value:"，",paraId:2,tocIndex:1},{value:"null",paraId:2,tocIndex:1},{value:" 空值，返回的数据",paraId:2,tocIndex:1},{value:"any",paraId:2,tocIndex:1},{value:"undefined",paraId:2,tocIndex:1},{value:"tickCount",paraId:2,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"5",paraId:2,tocIndex:1},{value:"tickMethod",paraId:2,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:2,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:2,tocIndex:1},{value:"calculatePowTicks",paraId:2,tocIndex:1},{value:"round",paraId:2,tocIndex:1},{value:"输出值去四舍五入",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"clamp",paraId:2,tocIndex:1},{value:"将映射值限定在 range 的范围内",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"nice",paraId:2,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:2,tocIndex:1},{value:"boolean",paraId:2,tocIndex:1},{value:"false",paraId:2,tocIndex:1},{value:"interpolate",paraId:2,tocIndex:1},{value:"自定义差值函数",paraId:2,tocIndex:1},{value:"(a: number, b: number) => (t: number) => T",paraId:2,tocIndex:1},{value:"(a, b) => (t) => a * (1 - t) + b * t",paraId:2,tocIndex:1},{value:"exponent",paraId:2,tocIndex:1},{value:"设定指数",paraId:2,tocIndex:1},{value:"number",paraId:2,tocIndex:1},{value:"2",paraId:2,tocIndex:1}]},82662:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(38869);const n=[{value:"quantile 类似于 ",paraId:0},{value:"threshold",paraId:1},{value:"，但是计算切片的方式是基于元素在数据中的索引。",paraId:0},{value:"const config = {\n  scale: {\n    x: { \n      type: 'quantile',\n      /* 其他配置项 */\n    }\n  }\n}\n\n",paraId:2,tocIndex:0},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"设置数据的定义域范围",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:"[]",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"设置数据映射的值域范围",paraId:3,tocIndex:1},{value:"any[]",paraId:3,tocIndex:1},{value:"[]",paraId:3,tocIndex:1},{value:"unknown",paraId:3,tocIndex:1},{value:"对于 ",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"， ",paraId:3,tocIndex:1},{value:"NaN",paraId:3,tocIndex:1},{value:"，",paraId:3,tocIndex:1},{value:"null",paraId:3,tocIndex:1},{value:" 空值，返回的数据",paraId:3,tocIndex:1},{value:"any",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"tickCount",paraId:3,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"5",paraId:3,tocIndex:1},{value:"tickMethod",paraId:3,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:3,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:3,tocIndex:1},{value:"wilkinson-extended",paraId:3,tocIndex:1},{value:"nice",paraId:3,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1}]},35408:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(49710);const n=[{value:"quantize 类似于 ",paraId:0},{value:"threshold",paraId:1},{value:"，但是计算切片的方式是基于元素的数据值。",paraId:0},{value:"const config = {\n  scale: {\n    x: { \n      type: 'quantize',\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:2,tocIndex:0},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"设置数据的定义域范围",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:"[]",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"设置数据映射的值域范围",paraId:3,tocIndex:1},{value:"any[]",paraId:3,tocIndex:1},{value:"[]",paraId:3,tocIndex:1},{value:"unknown",paraId:3,tocIndex:1},{value:"对于 ",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"， ",paraId:3,tocIndex:1},{value:"NaN",paraId:3,tocIndex:1},{value:"，",paraId:3,tocIndex:1},{value:"null",paraId:3,tocIndex:1},{value:" 空值，返回的数据",paraId:3,tocIndex:1},{value:"any",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"tickCount",paraId:3,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"5",paraId:3,tocIndex:1},{value:"tickMethod",paraId:3,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:3,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:3,tocIndex:1},{value:"wilkinson-extended",paraId:3,tocIndex:1},{value:"nice",paraId:3,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1}]},2918:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(27590);const n=[{value:"sqrt 是指数固定为 ",paraId:0},{value:"0.5",paraId:0},{value:" 的 ",paraId:0},{value:"pow",paraId:1},{value:" 比例尺，它的映射函数为 ",paraId:0},{value:"y = x ^ 0.5 + b",paraId:0},{value:"。",paraId:0},{value:"const config = {\n  scale: {\n    y: { \n      type: 'sqrt',\n      /* 其他配置项 */\n    }\n  }\n}\n\n",paraId:2,tocIndex:0},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"设置数据的定义域范围",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:"输入数据的最大最小值范围",paraId:3,tocIndex:1},{value:"domainMin",paraId:3,tocIndex:1},{value:"设置数据的定义域最小值",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"输入数据的最小值",paraId:3,tocIndex:1},{value:"domainMax",paraId:3,tocIndex:1},{value:"设置数据的定义域最大值",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"输入数据的最大",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"设置数据映射的值域范围",paraId:3,tocIndex:1},{value:"number[]",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"string[]",paraId:3,tocIndex:1},{value:"[0, 1]",paraId:3,tocIndex:1},{value:"rangeMin",paraId:3,tocIndex:1},{value:"设置数据映射的值域最小值",paraId:3,tocIndex:1},{value:"number | string",paraId:3,tocIndex:1},{value:"0",paraId:3,tocIndex:1},{value:"rangeMax",paraId:3,tocIndex:1},{value:"设置数据映射的值域最大值",paraId:3,tocIndex:1},{value:"number | string",paraId:3,tocIndex:1},{value:"1",paraId:3,tocIndex:1},{value:"unknown",paraId:3,tocIndex:1},{value:"对于 ",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"， ",paraId:3,tocIndex:1},{value:"NaN",paraId:3,tocIndex:1},{value:"，",paraId:3,tocIndex:1},{value:"null",paraId:3,tocIndex:1},{value:" 空值，返回的数据",paraId:3,tocIndex:1},{value:"any",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"tickCount",paraId:3,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"5",paraId:3,tocIndex:1},{value:"tickMethod",paraId:3,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:3,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:3,tocIndex:1},{value:"d3-ticks",paraId:3,tocIndex:1},{value:"round",paraId:3,tocIndex:1},{value:"输出值去四舍五入",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"clamp",paraId:3,tocIndex:1},{value:"将映射值限定在 range 的范围内",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"nice",paraId:3,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"interpolate",paraId:3,tocIndex:1},{value:"自定义差值函数",paraId:3,tocIndex:1},{value:"(a: number, b: number) => (t: number) => T",paraId:3,tocIndex:1},{value:"(a, b) => (t) => a * (1 - t) + b * t",paraId:3,tocIndex:1},{value:"exponent",paraId:3,tocIndex:1},{value:"设定指数",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"0.5",paraId:3,tocIndex:1}]},75989:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(48019);const n=[{value:"threshold 是将连续的值域范围划分为多个切片，并将这些切片映射到一个离散的数据中。",paraId:0},{value:"const config = {\n  scale: {\n    x: { \n      type: 'threshold',\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:1,tocIndex:0},{value:"属性",paraId:2,tocIndex:1},{value:"描述",paraId:2,tocIndex:1},{value:"类型",paraId:2,tocIndex:1},{value:"默认值",paraId:2,tocIndex:1},{value:"domain",paraId:2,tocIndex:1},{value:"设置数据的定义域范围",paraId:2,tocIndex:1},{value:"number[]",paraId:2,tocIndex:1},{value:"[0.5]",paraId:2,tocIndex:1},{value:"range",paraId:2,tocIndex:1},{value:"设置数据映射的值域范围",paraId:2,tocIndex:1},{value:"any[]",paraId:2,tocIndex:1},{value:"[0, 1]",paraId:2,tocIndex:1},{value:"unknown",paraId:2,tocIndex:1},{value:"对于 ",paraId:2,tocIndex:1},{value:"undefined",paraId:2,tocIndex:1},{value:"， ",paraId:2,tocIndex:1},{value:"NaN",paraId:2,tocIndex:1},{value:"，",paraId:2,tocIndex:1},{value:"null",paraId:2,tocIndex:1},{value:" 空值，返回的数据",paraId:2,tocIndex:1},{value:"any",paraId:2,tocIndex:1},{value:"undefined",paraId:2,tocIndex:1}]},68637:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(32915);const n=[{value:"time 是特殊的 ",paraId:0},{value:"linear",paraId:1},{value:" 比例尺，它的值域是一组时间顺序的数据，映射函数为 ",paraId:0},{value:"y = x.getTime() + b",paraId:0},{value:"。",paraId:0},{value:"const config = {\n  scale: {\n    x: { \n      type: 'time',\n      /* 其他配置项 */\n    }\n  }\n}\n",paraId:2,tocIndex:0},{value:"属性",paraId:3,tocIndex:1},{value:"描述",paraId:3,tocIndex:1},{value:"类型",paraId:3,tocIndex:1},{value:"默认值",paraId:3,tocIndex:1},{value:"domain",paraId:3,tocIndex:1},{value:"设置数据的定义域范围",paraId:3,tocIndex:1},{value:"Date[]",paraId:3,tocIndex:1},{value:"输入数据的最大最小值范围",paraId:3,tocIndex:1},{value:"domainMin",paraId:3,tocIndex:1},{value:"设置数据的定义域最小值",paraId:3,tocIndex:1},{value:"Date",paraId:3,tocIndex:1},{value:"输入数据的最小值",paraId:3,tocIndex:1},{value:"domainMax",paraId:3,tocIndex:1},{value:"设置数据的定义域最大值",paraId:3,tocIndex:1},{value:"Date",paraId:3,tocIndex:1},{value:"输入数据的最大",paraId:3,tocIndex:1},{value:"range",paraId:3,tocIndex:1},{value:"设置数据映射的值域范围",paraId:3,tocIndex:1},{value:"Date[]",paraId:3,tocIndex:1},{value:" | ",paraId:3,tocIndex:1},{value:"string[]",paraId:3,tocIndex:1},{value:"[0, 1]",paraId:3,tocIndex:1},{value:"rangeMin",paraId:3,tocIndex:1},{value:"设置数据映射的值域最小值",paraId:3,tocIndex:1},{value:"Date",paraId:3,tocIndex:1},{value:"0",paraId:3,tocIndex:1},{value:"rangeMax",paraId:3,tocIndex:1},{value:"设置数据映射的值域最大值",paraId:3,tocIndex:1},{value:"Date",paraId:3,tocIndex:1},{value:"1",paraId:3,tocIndex:1},{value:"unknown",paraId:3,tocIndex:1},{value:"对于 ",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"， ",paraId:3,tocIndex:1},{value:"NaN",paraId:3,tocIndex:1},{value:"，",paraId:3,tocIndex:1},{value:"null",paraId:3,tocIndex:1},{value:" 空值，返回的数据",paraId:3,tocIndex:1},{value:"any",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"tickCount",paraId:3,tocIndex:1},{value:"设置推荐的 tick 生成数量，tickCount 只是建议值，不会完全按照这个值产生 tick",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"5",paraId:3,tocIndex:1},{value:"tickInterval",paraId:3,tocIndex:1},{value:"设置推荐的 tick 之间的间隔，tickInterval 优先级高于 tickCount。",paraId:3,tocIndex:1},{value:"number",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"tickMethod",paraId:3,tocIndex:1},{value:"设置生成 tick 的方法，常用于自定义 tick",paraId:3,tocIndex:1},{value:"(min: number, max: number, count: number) => number[]",paraId:3,tocIndex:1},{value:"d3Time",paraId:3,tocIndex:1},{value:"round",paraId:3,tocIndex:1},{value:"输出值去四舍五入",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"clamp",paraId:3,tocIndex:1},{value:"将映射值限定在 range 的范围内",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"nice",paraId:3,tocIndex:1},{value:"扩展 domain 范围，让输出的 tick 展示得更加友好",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"mask",paraId:3,tocIndex:1},{value:"设置时间显示的格式，底层使用 ",paraId:3,tocIndex:1},{value:"fetcha",paraId:3,tocIndex:1},{value:".",paraId:3,tocIndex:1},{value:"string",paraId:3,tocIndex:1},{value:"undefined",paraId:3,tocIndex:1},{value:"utc",paraId:3,tocIndex:1},{value:"是否 utc",paraId:3,tocIndex:1},{value:"boolean",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"interpolate",paraId:3,tocIndex:1},{value:"自定义差值函数",paraId:3,tocIndex:1},{value:"(a: number, b: number) => (t: number) => T",paraId:3,tocIndex:1},{value:"(a, b) => (t) => a * (1 - t) + b * t",paraId:3,tocIndex:1}]},68214:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(87);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"BarOptions",paraId:0,tocIndex:1},{value:"mark 背景配置",paraId:1,tocIndex:1},{value:"{\n  scale: {\n    y: {\n      domain: [0, 200]\n    }\n  },\n  markBackground: {\n    style: {\n      fill: '#eee'\n    }\n  },\n}\n",paraId:2,tocIndex:1},{value:"示例：",paraId:3,tocIndex:1}]},74677:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(25723);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string[]",paraId:0,tocIndex:1},{value:"Y 轴字段",paraId:1,tocIndex:1},{value:"optional",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"vertical | horizontal",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"default",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"vertical",paraId:2,tocIndex:2},{value:"布局",paraId:3,tocIndex:2}]},55956:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(82230);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"boxplot | box",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"default",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"box",paraId:0,tocIndex:1},{value:"Box",paraId:1,tocIndex:1},{value:" 图形是用来绘制箱线图（boxplot）又叫盒须图、盒式图，通常用来展示一组数据分布情况的统计图，一般包括几种数据：",paraId:1,tocIndex:1},{value:"最小值",paraId:1,tocIndex:1},{value:"、",paraId:1,tocIndex:1},{value:"下四分位数",paraId:1,tocIndex:1},{value:"、",paraId:1,tocIndex:1},{value:"中位数",paraId:1,tocIndex:1},{value:"、",paraId:1,tocIndex:1},{value:"上四分位数",paraId:1,tocIndex:1},{value:"、",paraId:1,tocIndex:1},{value:"最大值",paraId:1,tocIndex:1},{value:"，另外可以结合 ",paraId:1,tocIndex:1},{value:"point` mark 绘制异常点数据。",paraId:1,tocIndex:1},{value:"Box 特殊的一点在于 ",paraId:2,tocIndex:1},{value:"y",paraId:2,tocIndex:1},{value:" 通道对应的数据是一组统计数据的数组，最后会将数据映射为箱线图所需求的 14 个点集合。",paraId:2,tocIndex:1},{value:"/**\n *\n * p0           p2          p1\n *    ──────────┬──────────\n *              │\n *              │\n *              │\n *              │ p3\n * p4 ┌─────────┴──────────┐ p5\n *    │                    │\n *    │                    │\n * p8 ├────────────────────┤ p9\n *    │                    │\n *    │        p10         │\n * p7 └─────────┬──────────┘ p6\n *              │\n *              │\n *              │\n *   ───────────┴───────────\n * p12         p11           p13\n */\n",paraId:3,tocIndex:1},{value:"更多的案例，可以查看",paraId:4,tocIndex:1},{value:"图表示例",paraId:5,tocIndex:1},{value:"页面。",paraId:4,tocIndex:1}]},36093:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(32725);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string",paraId:0,tocIndex:1},{value:"使用数据条的长度，实际数值的设置字段，表示实际数值。",paraId:1,tocIndex:1},{value:"required",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"string",paraId:2,tocIndex:2},{value:"使用背景色条的长度的设置字段，表示区间范围。",paraId:3,tocIndex:2},{value:"required",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:"使用测量标记的刻度轴位置的设置字段，表示目标值。",paraId:5,tocIndex:3},{value:"optional",paraId:6,tocIndex:4},{value:" ",paraId:6,tocIndex:4},{value:"'horizontal' | 'vertical'",paraId:6,tocIndex:4},{value:" ",paraId:6,tocIndex:4},{value:"default:",paraId:6,tocIndex:4},{value:" 'horizontal'",paraId:6,tocIndex:4},{value:"表示子弹图方向。",paraId:7,tocIndex:4},{value:"optional",paraId:8,tocIndex:5},{value:" ",paraId:8,tocIndex:5},{value:"object",paraId:8,tocIndex:5},{value:"设置子弹图各图形 color 属性。",paraId:9,tocIndex:5},{value:"细分配置",paraId:10,tocIndex:5},{value:"类型",paraId:10,tocIndex:5},{value:"功能描述",paraId:10,tocIndex:5},{value:"默认配置",paraId:10,tocIndex:5},{value:"ranges",paraId:10,tocIndex:5},{value:"string|string[]",paraId:10,tocIndex:5},{value:"区间背景颜色",paraId:10,tocIndex:5},{value:"无",paraId:10,tocIndex:5},{value:"measures",paraId:10,tocIndex:5},{value:"string|string[]",paraId:10,tocIndex:5},{value:"实际值颜色",paraId:10,tocIndex:5},{value:"无",paraId:10,tocIndex:5},{value:"target",paraId:10,tocIndex:5},{value:"string|string[]",paraId:10,tocIndex:5},{value:"目标值颜色",paraId:10,tocIndex:5},{value:"无",paraId:10,tocIndex:5},{value:"required",paraId:11,tocIndex:6},{value:" ",paraId:11,tocIndex:6},{value:"BulletOptions",paraId:11,tocIndex:6},{value:"range 配置",paraId:12,tocIndex:6},{value:"required",paraId:13,tocIndex:7},{value:" ",paraId:13,tocIndex:7},{value:"BulletOptions",paraId:13,tocIndex:7},{value:"measure 配置",paraId:14,tocIndex:7},{value:"required",paraId:15,tocIndex:8},{value:" ",paraId:15,tocIndex:8},{value:"BulletOptions",paraId:15,tocIndex:8},{value:"target 配置",paraId:16,tocIndex:8}]},44274:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(78892);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"ColumnOptions",paraId:0,tocIndex:1},{value:"mark 背景配置",paraId:1,tocIndex:1},{value:"{\n  scale: {\n    y: {\n      domain: [0, 0.5]\n    }\n  },\n  markBackground: {\n    style: {\n      fill: '#eee'\n    }\n  },\n}\n",paraId:2,tocIndex:1},{value:"示例：",paraId:3,tocIndex:1}]},35995:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(43344);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string",paraId:0,tocIndex:1},{value:"对比字段。声明此字段时会自动渲染为对比漏斗图",paraId:1,tocIndex:1},{value:"optional",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"boolean",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"default:",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"false",paraId:2,tocIndex:2},{value:"是否转置。",paraId:3,tocIndex:2}]},19939:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(66980);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string",paraId:0,tocIndex:1},{value:"热力图类型，'point' | 'cell' | 'heatmap'",paraId:1,tocIndex:1}]},78990:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(90322);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string",paraId:0,tocIndex:1},{value:"设置直方图绘制 (进行分箱) 的字段。",paraId:1,tocIndex:1},{value:"optional",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"string",paraId:2,tocIndex:2},{value:"设置直方图的分箱宽度，binWidth 影响直方图分成多少箱, 不能与 binNumber 一起使用。",paraId:3,tocIndex:2},{value:"optional",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"设置直方图的分箱数量，binNumber 影响直方图分箱后每个柱子的宽度。",paraId:5,tocIndex:3}]},63022:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(90843);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"number",paraId:0,tocIndex:1},{value:"指标比例数据 [0-1]。",paraId:1,tocIndex:1}]},4360:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(43100);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string",paraId:0,tocIndex:1},{value:"角度映射字段",paraId:1,tocIndex:1},{value:"optional",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"number",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"default",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"1",paraId:2,tocIndex:2},{value:"饼图半径[0~1]",paraId:3,tocIndex:2},{value:"optional",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:"饼图内半径",paraId:5,tocIndex:3}]},36090:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(51665);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"radar | polar",paraId:0,tocIndex:1},{value:"坐标系类型",paraId:1,tocIndex:1}]},88079:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(84272);const n=[{value:"optional",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"BarOptions",paraId:0,tocIndex:1},{value:"data参数",paraId:1,tocIndex:1},{value:"const data = [\n  { name: 'X6', star: 297 , color:'pink'},\n  { name: 'G', star: 506 , color:'pink'},\n  { name: 'AVA', star: 805 , color:'pink'},\n  { name: 'G2Plot', star: 1478, color:'orange' },\n  { name: 'L7', star: 2029, color:'orange' },\n  { name: 'G6', star: 7100, color:'orange' },\n  { name: 'F2', star: 7346, color:'orange' },\n  { name: 'G2', star: 10178 , color:'blue'},\n];\n",paraId:2,tocIndex:1},{value:"mark 背景配置",paraId:3,tocIndex:1},{value:"{\n  scale: {\n    y: {\n      domain: [0, 200]\n    }\n  },\n  /** 不配置任何参数，默认开启背景颜色 '#e0e4ee' */\n  // markBackground:{}\n  markBackground: {\n    color: 'color'; // 指定color的参数，即根据color字段进行颜色映射\n  },\n}\n",paraId:4,tocIndex:1},{value:"示例：",paraId:5,tocIndex:1}]},57399:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(62955);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"string[]",paraId:0,tocIndex:1},{value:"设置一个指定 [开盘价, 收盘价, 最高价, 最低价] 字段的数组",paraId:1,tocIndex:1},{value:"optional",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"string",paraId:2,tocIndex:2},{value:"上涨色",paraId:3,tocIndex:2},{value:"optional",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"string",paraId:4,tocIndex:3},{value:"下跌色",paraId:5,tocIndex:3}]},97705:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(84228);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"number",paraId:0,tocIndex:1},{value:"进度",paraId:1,tocIndex:1},{value:"required",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"string[]",paraId:2,tocIndex:2},{value:"配色",paraId:3,tocIndex:2},{value:"required",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"number",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"default",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"0.8",paraId:4,tocIndex:3},{value:"内径[0~1]",paraId:5,tocIndex:3}]},10030:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(28093);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"normal | density | polar",paraId:0,tocIndex:1},{value:"小提琴类型",paraId:1,tocIndex:1}]},62582:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(96451);const n=[{value:"required",paraId:0,tocIndex:1},{value:" ",paraId:0,tocIndex:1},{value:"attrStyle",paraId:0,tocIndex:1},{value:"连线样式",paraId:1,tocIndex:1},{value:"required",paraId:2,tocIndex:2},{value:" ",paraId:2,tocIndex:2},{value:"string | string[]",paraId:2,tocIndex:2},{value:"x轴字段",paraId:3,tocIndex:2}]},15020:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(12201);const n=[{value:"学术风格的主题。",paraId:0},{value:'const config = {\n  theme: "academy",\n}\n',paraId:1,tocIndex:0}]},17424:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(71786);const n=[{value:"经典主题。",paraId:0},{value:'const config = {\n  theme: "classic",\n}\n',paraId:1,tocIndex:0}]},70570:function(a,e,d){d.r(e),d.d(e,{texts:function(){return n}});d(40405);const n=[{value:"经典暗黑主题。",paraId:0},{value:'const config = {\n  theme: "classicDark",\n}\n',paraId:1,tocIndex:0}]}}]);